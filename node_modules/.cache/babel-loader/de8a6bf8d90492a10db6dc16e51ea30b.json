{"ast":null,"code":"module.exports = function (e) {\n  var t = {};\n\n  function r(n) {\n    if (t[n]) return t[n].exports;\n    var i = t[n] = {\n      i: n,\n      l: !1,\n      exports: {}\n    };\n    return e[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;\n  }\n\n  return r.m = e, r.c = t, r.d = function (e, t, n) {\n    r.o(e, t) || Object.defineProperty(e, t, {\n      enumerable: !0,\n      get: n\n    });\n  }, r.r = function (e) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n  }, r.t = function (e, t) {\n    if (1 & t && (e = r(e)), 8 & t) return e;\n    if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (r.r(n), Object.defineProperty(n, \"default\", {\n      enumerable: !0,\n      value: e\n    }), 2 & t && \"string\" != typeof e) for (var i in e) {\n      r.d(n, i, function (t) {\n        return e[t];\n      }.bind(null, i));\n    }\n    return n;\n  }, r.n = function (e) {\n    var t = e && e.__esModule ? function () {\n      return e[\"default\"];\n    } : function () {\n      return e;\n    };\n    return r.d(t, \"a\", t), t;\n  }, r.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }, r.p = \"\", r(r.s = 22);\n}([function (e, t) {\n  e.exports = require(\"@babel/runtime/regenerator\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/classCallCheck\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/createClass\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/defineProperty\");\n}, function (e, t) {\n  e.exports = require(\"injectpromise\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/typeof\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/toConsumableArray\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/slicedToArray\");\n}, function (e, t) {\n  e.exports = require(\"bignumber.js\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");\n}, function (e, t) {\n  e.exports = require(\"ethers\");\n}, function (e, t) {\n  e.exports = require(\"semver\");\n}, function (e, t) {\n  e.exports = require(\"elliptic\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/inherits\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n}, function (e, t) {\n  e.exports = require(\"axios\");\n}, function (e, t) {\n  e.exports = require(\"validator\");\n}, function (e, t) {\n  e.exports = require(\"eventemitter3\");\n}, function (e) {\n  e.exports = JSON.parse('{\"a\":\"3.1.0\"}');\n}, function (e, t) {\n  e.exports = require(\"querystring\");\n}, function (e, t, r) {\n  \"use strict\";\n\n  r.r(t), r.d(t, \"default\", function () {\n    return At;\n  });\n  var n = {};\n  r.r(n), r.d(n, \"byte2hexStr\", function () {\n    return O;\n  }), r.d(n, \"bytesToString\", function () {\n    return C;\n  }), r.d(n, \"hextoString\", function () {\n    return B;\n  }), r.d(n, \"byteArray2hexStr\", function () {\n    return E;\n  }), r.d(n, \"base64DecodeFromString\", function () {\n    return q;\n  }), r.d(n, \"base64EncodeToString\", function () {\n    return D;\n  });\n  var i = {};\n  r.r(i), r.d(i, \"bin2String\", function () {\n    return H;\n  }), r.d(i, \"arrayEquals\", function () {\n    return L;\n  }), r.d(i, \"stringToBytes\", function () {\n    return U;\n  }), r.d(i, \"byte2hexStr\", function () {\n    return O;\n  }), r.d(i, \"bytesToString\", function () {\n    return C;\n  }), r.d(i, \"hextoString\", function () {\n    return B;\n  }), r.d(i, \"byteArray2hexStr\", function () {\n    return E;\n  }), r.d(i, \"base64DecodeFromString\", function () {\n    return q;\n  }), r.d(i, \"base64EncodeToString\", function () {\n    return D;\n  }), r.d(i, \"hexChar2byte\", function () {\n    return z;\n  }), r.d(i, \"isHexChar\", function () {\n    return M;\n  }), r.d(i, \"hexStr2byteArray\", function () {\n    return G;\n  }), r.d(i, \"strToDate\", function () {\n    return J;\n  }), r.d(i, \"isNumber\", function () {\n    return Y;\n  }), r.d(i, \"getStringType\", function () {\n    return X;\n  });\n  var s = {};\n  r.r(s), r.d(s, \"encode58\", function () {\n    return ee;\n  }), r.d(s, \"decode58\", function () {\n    return te;\n  });\n  var a = {};\n  r.r(a), r.d(a, \"keccak256\", function () {\n    return ie;\n  }), r.d(a, \"sha256\", function () {\n    return se;\n  }), r.d(a, \"toUtf8Bytes\", function () {\n    return ae;\n  }), r.d(a, \"recoverAddress\", function () {\n    return oe;\n  }), r.d(a, \"SigningKey\", function () {\n    return ue;\n  }), r.d(a, \"AbiCoder\", function () {\n    return ce;\n  });\n  var o = {};\n  r.r(o), r.d(o, \"getBase58CheckAddress\", function () {\n    return de;\n  }), r.d(o, \"decodeBase58Address\", function () {\n    return le;\n  }), r.d(o, \"signTransaction\", function () {\n    return he;\n  }), r.d(o, \"arrayToBase64String\", function () {\n    return fe;\n  }), r.d(o, \"signBytes\", function () {\n    return ve;\n  }), r.d(o, \"getRowBytesFromTransactionBase64\", function () {\n    return pe;\n  }), r.d(o, \"genPriKey\", function () {\n    return ge;\n  }), r.d(o, \"computeAddress\", function () {\n    return be;\n  }), r.d(o, \"getAddressFromPriKey\", function () {\n    return me;\n  }), r.d(o, \"decode58Check\", function () {\n    return ye;\n  }), r.d(o, \"isAddressValid\", function () {\n    return ke;\n  }), r.d(o, \"getBase58CheckAddressFromPriKeyBase64String\", function () {\n    return xe;\n  }), r.d(o, \"getHexStrAddressFromPriKeyBase64String\", function () {\n    return we;\n  }), r.d(o, \"getAddressFromPriKeyBase64String\", function () {\n    return Ie;\n  }), r.d(o, \"getPubKeyFromPriKey\", function () {\n    return Ae;\n  }), r.d(o, \"ECKeySign\", function () {\n    return Pe;\n  }), r.d(o, \"SHA256\", function () {\n    return We;\n  }), r.d(o, \"passwordToAddress\", function () {\n    return _e;\n  }), r.d(o, \"pkToAddress\", function () {\n    return Se;\n  });\n  var u = {};\n  r.r(u), r.d(u, \"generateAccount\", function () {\n    return Ne;\n  });\n  var c = {};\n  r.r(c), r.d(c, \"decodeParams\", function () {\n    return je;\n  }), r.d(c, \"encodeParams\", function () {\n    return Fe;\n  });\n\n  var d = r(0),\n      l = r.n(d),\n      h = r(1),\n      f = r.n(h),\n      v = r(6),\n      p = r.n(v),\n      g = r(2),\n      b = r.n(g),\n      m = r(3),\n      y = r.n(m),\n      k = r(10),\n      x = r.n(k),\n      w = r(15),\n      I = r.n(w),\n      A = r(16),\n      P = r.n(A),\n      W = r(14),\n      _ = r.n(W),\n      S = r(4),\n      N = r.n(S),\n      T = r(17),\n      j = r.n(T);\n\n  function F() {\n    var e = this;\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\", this.encode = function (t) {\n      for (var r, n, i, s, a, o, u, c = \"\", d = 0; d < t.length;) {\n        s = (r = t.charCodeAt(d++)) >> 2, a = (3 & r) << 4 | (n = t.charCodeAt(d++)) >> 4, o = (15 & n) << 2 | (i = t.charCodeAt(d++)) >> 6, u = 63 & i, isNaN(n) ? o = u = 64 : isNaN(i) && (u = 64), c = c + e._keyStr.charAt(s) + e._keyStr.charAt(a) + e._keyStr.charAt(o) + e._keyStr.charAt(u);\n      }\n\n      return c;\n    }, this.encodeIgnoreUtf8 = function (t) {\n      for (var r, n, i, s, a, o, u, c = \"\", d = 0; d < t.length;) {\n        s = (r = t[d++]) >> 2, a = (3 & r) << 4 | (n = t[d++]) >> 4, o = (15 & n) << 2 | (i = t[d++]) >> 6, u = 63 & i, isNaN(n) ? o = u = 64 : isNaN(i) && (u = 64), c = c + e._keyStr.charAt(s) + e._keyStr.charAt(a) + e._keyStr.charAt(o) + e._keyStr.charAt(u);\n      }\n\n      return c;\n    }, this.decode = function (t) {\n      var r,\n          n,\n          i,\n          s,\n          a,\n          o,\n          u = \"\",\n          c = 0;\n\n      for (t = t.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); c < t.length;) {\n        r = e._keyStr.indexOf(t.charAt(c++)) << 2 | (s = e._keyStr.indexOf(t.charAt(c++))) >> 4, n = (15 & s) << 4 | (a = e._keyStr.indexOf(t.charAt(c++))) >> 2, i = (3 & a) << 6 | (o = e._keyStr.indexOf(t.charAt(c++))), u += String.fromCharCode(r), 64 != a && (u += String.fromCharCode(n)), 64 != o && (u += String.fromCharCode(i));\n      }\n\n      return e._utf8_decode(u);\n    }, this.decodeToByteArray = function (t) {\n      var r,\n          n,\n          i,\n          s,\n          a,\n          o,\n          u = \"\",\n          c = 0;\n\n      for (t = t.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); c < t.length;) {\n        r = e._keyStr.indexOf(t.charAt(c++)) << 2 | (s = e._keyStr.indexOf(t.charAt(c++))) >> 4, n = (15 & s) << 4 | (a = e._keyStr.indexOf(t.charAt(c++))) >> 2, i = (3 & a) << 6 | (o = e._keyStr.indexOf(t.charAt(c++))), u += String.fromCharCode(r), 64 != a && (u += String.fromCharCode(n)), 64 != o && (u += String.fromCharCode(i));\n      }\n\n      return e._out2ByteArray(u);\n    }, this._out2ByteArray = function (e) {\n      for (var t = new Array(e.length), r = 0, n = 0; r < e.length;) {\n        n = e.charCodeAt(r), t[r] = n, r++;\n      }\n\n      return t;\n    }, this._utf8_encode = function (e) {\n      e = e.replace(/\\r\\n/g, \"\\n\");\n\n      for (var t = \"\", r = 0; r < e.length; r++) {\n        var n = e.charCodeAt(r);\n        n < 128 ? t += String.fromCharCode(n) : n > 127 && n < 2048 ? (t += String.fromCharCode(n >> 6 | 192), t += String.fromCharCode(63 & n | 128)) : (t += String.fromCharCode(n >> 12 | 224), t += String.fromCharCode(n >> 6 & 63 | 128), t += String.fromCharCode(63 & n | 128));\n      }\n\n      return t;\n    }, this._utf8_decode = function (e) {\n      for (var t = \"\", r = 0, n = 0, i = 0, s = 0; r < e.length;) {\n        (n = e.charCodeAt(r)) < 128 ? (t += String.fromCharCode(n), r++) : n > 191 && n < 224 ? (i = e.charCodeAt(r + 1), t += String.fromCharCode((31 & n) << 6 | 63 & i), r += 2) : (i = e.charCodeAt(r + 1), s = e.charCodeAt(r + 2), t += String.fromCharCode((15 & n) << 12 | (63 & i) << 6 | 63 & s), r += 3);\n      }\n\n      return t;\n    };\n  }\n\n  function O(e) {\n    if (\"number\" != typeof e) throw new Error(\"Input must be a number\");\n    if (e < 0 || e > 255) throw new Error(\"Input must be a byte\");\n    var t = \"\";\n    return t += \"0123456789ABCDEF\".charAt(e >> 4), t += \"0123456789ABCDEF\".charAt(15 & e);\n  }\n\n  function C(e) {\n    if (\"string\" == typeof e) return e;\n\n    for (var t = \"\", r = 0; r < e.length; r++) {\n      var n = e[r].toString(2),\n          i = n.match(/^1+?(?=0)/);\n\n      if (i && 8 === n.length) {\n        for (var s = i[0].length, a = e[r].toString(2).slice(7 - s), o = 1; o < s; o++) {\n          a += e[o + r].toString(2).slice(2);\n        }\n\n        t += String.fromCharCode(parseInt(a, 2)), r += s - 1;\n      } else t += String.fromCharCode(e[r]);\n    }\n\n    return t;\n  }\n\n  function B(e) {\n    for (var t = e.replace(/^0x/, \"\").split(\"\"), r = \"\", n = 0; n < t.length / 2; n++) {\n      var i = \"0x\".concat(t[2 * n]).concat(t[2 * n + 1]);\n      r += String.fromCharCode(i);\n    }\n\n    return r;\n  }\n\n  function E(e) {\n    for (var t = \"\", r = 0; r < e.length; r++) {\n      t += O(e[r]);\n    }\n\n    return t;\n  }\n\n  function q(e) {\n    return new F().decodeToByteArray(e);\n  }\n\n  function D(e) {\n    return new F().encodeIgnoreUtf8(e);\n  }\n\n  var K = r(7),\n      R = r.n(K),\n      V = /^(41)/;\n\n  function H(e) {\n    return C(e);\n  }\n\n  function L(e, t, r) {\n    if (e.length != t.length) return !1;\n    var n;\n\n    for (n = 0; n < e.length; n++) {\n      if (r) {\n        if (e[n] != t[n]) return !1;\n      } else if (JSON.stringify(e[n]) != JSON.stringify(t[n])) return !1;\n    }\n\n    return !0;\n  }\n\n  function U(e) {\n    if (\"string\" != typeof e) throw new Error(\"The passed string is not a string\");\n    var t,\n        r,\n        n = new Array();\n    t = e.length;\n\n    for (var i = 0; i < t; i++) {\n      (r = e.charCodeAt(i)) >= 65536 && r <= 1114111 ? (n.push(r >> 18 & 7 | 240), n.push(r >> 12 & 63 | 128), n.push(r >> 6 & 63 | 128), n.push(63 & r | 128)) : r >= 2048 && r <= 65535 ? (n.push(r >> 12 & 15 | 224), n.push(r >> 6 & 63 | 128), n.push(63 & r | 128)) : r >= 128 && r <= 2047 ? (n.push(r >> 6 & 31 | 192), n.push(63 & r | 128)) : n.push(255 & r);\n    }\n\n    return n;\n  }\n\n  function z(e) {\n    var t;\n    if (e >= \"A\" && e <= \"F\" ? t = e.charCodeAt(0) - \"A\".charCodeAt(0) + 10 : e >= \"a\" && e <= \"f\" ? t = e.charCodeAt(0) - \"a\".charCodeAt(0) + 10 : e >= \"0\" && e <= \"9\" && (t = e.charCodeAt(0) - \"0\".charCodeAt(0)), \"number\" == typeof t) return t;\n    throw new Error(\"The passed hex char is not a valid hex char\");\n  }\n\n  function M(e) {\n    return e >= \"A\" && e <= \"F\" || e >= \"a\" && e <= \"f\" || e >= \"0\" && e <= \"9\" ? 1 : 0;\n  }\n\n  function G(e) {\n    if (\"string\" != typeof e) throw new Error(\"The passed string is not a string\");\n\n    for (var t = Array(), r = 0, n = 0, i = 0, s = 0; s < e.length; s++) {\n      var a = e.charAt(s);\n      if (!M(a)) throw new Error(\"The passed hex char is not a valid hex string\");\n      r <<= 4, r += z(a), 0 == ++n % 2 && (t[i++] = r, r = 0);\n    }\n\n    return t;\n  }\n\n  function J(e) {\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(e)) throw new Error(\"The passed date string is not valid\");\n    var t = e.split(\" \"),\n        r = t[0].split(\"-\"),\n        n = parseInt(r[0], 10),\n        i = parseInt(r[1], 10) - 1,\n        s = parseInt(r[2], 10);\n\n    if (t.length > 1) {\n      var a = t[1].split(\"-\"),\n          o = parseInt(a[0], 10),\n          u = parseInt(a[1], 10),\n          c = parseInt(a[2], 10);\n      return new Date(n, i, s, o, u, c);\n    }\n\n    return new Date(n, i, s);\n  }\n\n  function Y(e) {\n    return e >= \"0\" && e <= \"9\" ? 1 : 0;\n  }\n\n  function X(e) {\n    if (null == e) return -1;\n    if (\"string\" != typeof e) return -1;\n    if (0 == e.length || \"\" == e) return -1;\n    var t = 0;\n    if (40 == e.length) for (; t < 40; t++) {\n      if (!M(e.charAt(t))) break;\n    }\n    if (40 == t) return 1;\n\n    for (t = 0; t < e.length; t++) {\n      if (!Y(e.charAt(t))) break;\n    }\n\n    if (t == e.length) return 2;\n\n    for (t = 0; t < e.length; t++) {\n      if (e.charAt(t) > \" \") return 3;\n    }\n\n    return -1;\n  }\n\n  for (var $ = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\", Z = {}, Q = 0; Q < $.length; Q++) {\n    Z[$.charAt(Q)] = Q;\n  }\n\n  function ee(e) {\n    if (0 === e.length) return \"\";\n    var t,\n        r,\n        n = [0];\n\n    for (t = 0; t < e.length; t++) {\n      for (r = 0; r < n.length; r++) {\n        n[r] <<= 8;\n      }\n\n      n[0] += e[t];\n      var i = 0;\n\n      for (r = 0; r < n.length; ++r) {\n        n[r] += i, i = n[r] / 58 | 0, n[r] %= 58;\n      }\n\n      for (; i;) {\n        n.push(i % 58), i = i / 58 | 0;\n      }\n    }\n\n    for (t = 0; 0 === e[t] && t < e.length - 1; t++) {\n      n.push(0);\n    }\n\n    return n.reverse().map(function (e) {\n      return $[e];\n    }).join(\"\");\n  }\n\n  function te(e) {\n    if (0 === e.length) return [];\n    var t,\n        r,\n        n = [0];\n\n    for (t = 0; t < e.length; t++) {\n      var i = e[t];\n      if (!(i in Z)) throw new Error(\"Non-base58 character\");\n\n      for (r = 0; r < n.length; r++) {\n        n[r] *= 58;\n      }\n\n      n[0] += Z[i];\n      var s = 0;\n\n      for (r = 0; r < n.length; ++r) {\n        n[r] += s, s = n[r] >> 8, n[r] &= 255;\n      }\n\n      for (; s;) {\n        n.push(255 & s), s >>= 8;\n      }\n    }\n\n    for (t = 0; \"1\" === e[t] && t < e.length - 1; t++) {\n      n.push(0);\n    }\n\n    return n.reverse();\n  }\n\n  var re = r(13),\n      ne = r(11),\n      ie = ne.utils.keccak256,\n      se = ne.utils.sha256,\n      ae = ne.utils.toUtf8Bytes,\n      oe = ne.utils.recoverAddress,\n      ue = ne.utils.SigningKey,\n      ce = ne.utils.AbiCoder;\n\n  function de(e) {\n    var t = We(e),\n        r = We(t).slice(0, 4);\n    return ee(r = e.concat(r));\n  }\n\n  function le(e) {\n    if (\"string\" != typeof e) return !1;\n    if (e.length <= 4) return !1;\n    var t = te(e);\n    if (e.length <= 4) return !1;\n    var r = t.length - 4,\n        n = t.slice(r),\n        i = We(t = t.slice(0, r)),\n        s = We(i).slice(0, 4);\n    if (n[0] == s[0] && n[1] == s[1] && n[2] == s[2] && n[3] == s[3]) return t;\n    throw new Error(\"Invalid address provided\");\n  }\n\n  function he(e, t) {\n    \"string\" == typeof e && (e = G(e));\n    var r = Pe(G(t.txID), e);\n    return Array.isArray(t.signature) ? t.signature.includes(r) || t.signature.push(r) : t.signature = [r], t;\n  }\n\n  function fe(e) {\n    return btoa(String.fromCharCode.apply(String, R()(e)));\n  }\n\n  function ve(e, t) {\n    return \"string\" == typeof e && (e = G(e)), Pe(We(t), e);\n  }\n\n  function pe(e) {\n    var t = q(e);\n    return proto.protocol.Transaction.deserializeBinary(t).getRawData().serializeBinary();\n  }\n\n  function ge() {\n    for (var e = new re.ec(\"secp256k1\").genKeyPair().getPrivate().toString(\"hex\"); e.length < 64;) {\n      e = \"0\".concat(e);\n    }\n\n    return G(e);\n  }\n\n  function be(e) {\n    return 65 === e.length && (e = e.slice(1)), G(\"41\" + ie(e).toString().substring(2).substring(24));\n  }\n\n  function me(e) {\n    return be(Ae(e));\n  }\n\n  function ye(e) {\n    var t = te(e);\n    if (t.length <= 4) return !1;\n    var r = t.slice(0, t.length - 4),\n        n = We(r),\n        i = We(n);\n    return i[0] === t[r.length] && i[1] === t[r.length + 1] && i[2] === t[r.length + 2] && i[3] === t[r.length + 3] && r;\n  }\n\n  function ke(e) {\n    if (\"string\" != typeof e) return !1;\n    if (34 !== e.length) return !1;\n    var t = te(e);\n    if (25 !== t.length) return !1;\n    if (65 !== t[0]) return !1;\n    var r = t.slice(21),\n        n = We(t = t.slice(0, 21)),\n        i = We(n).slice(0, 4);\n    return r[0] == i[0] && r[1] == i[1] && r[2] == i[2] && r[3] == i[3];\n  }\n\n  function xe(e) {\n    return de(be(Ae(q(e))));\n  }\n\n  function we(e) {\n    return E(be(Ae(q(e))));\n  }\n\n  function Ie(e) {\n    return D(be(Ae(q(e))));\n  }\n\n  function Ae(e) {\n    for (var t = new re.ec(\"secp256k1\").keyFromPrivate(e, \"bytes\").getPublic(), r = t.x, n = t.y, i = r.toString(\"hex\"); i.length < 64;) {\n      i = \"0\".concat(i);\n    }\n\n    for (var s = n.toString(\"hex\"); s.length < 64;) {\n      s = \"0\".concat(s);\n    }\n\n    return G(\"04\".concat(i).concat(s));\n  }\n\n  function Pe(e, t) {\n    for (var r = new re.ec(\"secp256k1\").keyFromPrivate(t, \"bytes\").sign(e), n = r.r, i = r.s, s = r.recoveryParam, a = n.toString(\"hex\"); a.length < 64;) {\n      a = \"0\".concat(a);\n    }\n\n    for (var o = i.toString(\"hex\"); o.length < 64;) {\n      o = \"0\".concat(o);\n    }\n\n    return a + o + O(s);\n  }\n\n  function We(e) {\n    var t = E(e);\n    return G(se(\"0x\" + t).replace(/^0x/, \"\"));\n  }\n\n  function _e(e) {\n    return de(me(q(e)));\n  }\n\n  function Se(e) {\n    return de(me(G(e)));\n  }\n\n  function Ne() {\n    var e = ge(),\n        t = Ae(e),\n        r = me(e);\n    return {\n      privateKey: E(e),\n      publicKey: E(t),\n      address: {\n        base58: de(r),\n        hex: E(r)\n      }\n    };\n  }\n\n  var Te = new ce();\n\n  function je(e, t, r, n) {\n    if (r && \"boolean\" != typeof r || (n = r, r = t, t = e, e = []), n && r.replace(/^0x/, \"\").length % 64 == 8 && (r = \"0x\" + r.replace(/^0x/, \"\").substring(8)), r.replace(/^0x/, \"\").length % 64) throw new Error(\"The encoded string is not valid. Its length must be a multiple of 64.\");\n    return t = t.map(function (e) {\n      return /trcToken/.test(e) && (e = e.replace(/trcToken/, \"uint256\")), e;\n    }), Te.decode(t, r).reduce(function (r, n, i) {\n      return \"address\" == t[i] && (n = \"41\" + n.substr(2).toLowerCase()), e.length ? r[e[i]] = n : r.push(n), r;\n    }, e.length ? {} : []);\n  }\n\n  function Fe(e, t) {\n    for (var r = 0; r < e.length; r++) {\n      \"address\" === e[r] && (t[r] = At.address.toHex(t[r]).replace(V, \"0x\"));\n    }\n\n    return Te.encode(e, t);\n  }\n\n  var Oe = r(18),\n      Ce = r.n(Oe),\n      Be = r(9),\n      Ee = r.n(Be);\n\n  function qe(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function De(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? qe(Object(r), !0).forEach(function (t) {\n        N()(e, t, r[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : qe(Object(r)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n      });\n    }\n\n    return e;\n  }\n\n  var Ke = De(De({}, {\n    isValidURL: function isValidURL(e) {\n      return \"string\" == typeof e && Ce.a.isURL(e.toString(), {\n        protocols: [\"http\", \"https\"],\n        require_tld: !1\n      });\n    },\n    isObject: function isObject(e) {\n      return e === Object(e) && \"[object Array]\" !== Object.prototype.toString.call(e);\n    },\n    isArray: function isArray(e) {\n      return Array.isArray(e);\n    },\n    isJson: function isJson(e) {\n      try {\n        return !!JSON.parse(e);\n      } catch (e) {\n        return !1;\n      }\n    },\n    isBoolean: function isBoolean(e) {\n      return \"boolean\" == typeof e;\n    },\n    isBigNumber: function isBigNumber(e) {\n      return e && (e instanceof Ee.a || e.constructor && \"BigNumber\" === e.constructor.name);\n    },\n    isString: function isString(e) {\n      return \"string\" == typeof e || e && e.constructor && \"String\" === e.constructor.name;\n    },\n    isFunction: function isFunction(e) {\n      return \"function\" == typeof e;\n    },\n    isHex: function isHex(e) {\n      return \"string\" == typeof e && !isNaN(parseInt(e, 16)) && /^(0x|)[a-fA-F0-9]+$/.test(e);\n    },\n    isInteger: function isInteger(e) {\n      return null !== e && Number.isInteger(Number(e));\n    },\n    hasProperty: function hasProperty(e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    },\n    hasProperties: function hasProperties(e) {\n      for (var t = this, r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) {\n        n[i - 1] = arguments[i];\n      }\n\n      return n.length && !n.map(function (r) {\n        return t.hasProperty(e, r);\n      }).includes(!1);\n    },\n    mapEvent: function mapEvent(e) {\n      var t = {\n        block: e.block_number,\n        timestamp: e.block_timestamp,\n        contract: e.contract_address,\n        name: e.event_name,\n        transaction: e.transaction_id,\n        result: e.result,\n        resourceNode: e.resource_Node || (e._unconfirmed ? \"fullNode\" : \"solidityNode\")\n      };\n      return e._unconfirmed && (t.unconfirmed = e._unconfirmed), e._fingerprint && (t.fingerprint = e._fingerprint), t;\n    },\n    parseEvent: function parseEvent(e, t) {\n      var r = t.inputs;\n      if (!e.result) return e;\n      if (this.isObject(e.result)) for (var n = 0; n < r.length; n++) {\n        var i = r[n];\n        \"address\" == i.type && i.name in e.result && (e.result[i.name] = \"41\" + e.result[i.name].substr(2).toLowerCase());\n      } else this.isArray(e.result) && (e.result = e.result.reduce(function (e, t, n) {\n        var i = r[n],\n            s = i.name;\n        return \"address\" == i.type && (t = \"41\" + t.substr(2).toLowerCase()), e[s] = t, e;\n      }, {}));\n      return e;\n    },\n    padLeft: function padLeft(e, t, r) {\n      for (var n = e.toString(); n.length < r;) {\n        n = t + n;\n      }\n\n      return n;\n    },\n    isNotNullOrUndefined: function isNotNullOrUndefined(e) {\n      return null != e;\n    },\n    sleep: function sleep() {\n      var e = arguments;\n      return f()(l.a.mark(function t() {\n        var r;\n        return l.a.wrap(function (t) {\n          for (;;) {\n            switch (t.prev = t.next) {\n              case 0:\n                return r = e.length > 0 && void 0 !== e[0] ? e[0] : 1e3, t.abrupt(\"return\", new Promise(function (e) {\n                  return setTimeout(e, r);\n                }));\n\n              case 2:\n              case \"end\":\n                return t.stop();\n            }\n          }\n        }, t);\n      }))();\n    }\n  }), {}, {\n    code: i,\n    accounts: u,\n    base58: s,\n    bytes: n,\n    crypto: o,\n    abi: c,\n    ethersUtils: a\n  }),\n      Re = {\n    HttpProvider: function () {\n      function e(t) {\n        var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e4,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},\n            a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : \"/\";\n        if (b()(this, e), !Ke.isValidURL(t)) throw new Error(\"Invalid URL provided to HttpProvider\");\n        if (isNaN(r) || r < 0) throw new Error(\"Invalid timeout duration provided\");\n        if (!Ke.isObject(s)) throw new Error(\"Invalid headers object provided\");\n        t = t.replace(/\\/+$/, \"\"), this.host = t, this.timeout = r, this.user = n, this.password = i, this.headers = s, this.statusPage = a, this.instance = j.a.create({\n          baseURL: t,\n          timeout: r,\n          headers: s,\n          auth: n && {\n            user: n,\n            password: i\n          }\n        });\n      }\n\n      var t;\n      return y()(e, [{\n        key: \"setStatusPage\",\n        value: function value() {\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"/\";\n          this.statusPage = e;\n        }\n      }, {\n        key: \"isConnected\",\n        value: (t = f()(l.a.mark(function e() {\n          var t,\n              r = arguments;\n          return l.a.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return t = r.length > 0 && void 0 !== r[0] ? r[0] : this.statusPage, e.abrupt(\"return\", this.request(t).then(function (e) {\n                    return Ke.hasProperties(e, \"blockID\", \"block_header\");\n                  })[\"catch\"](function () {\n                    return !1;\n                  }));\n\n                case 2:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        })), function () {\n          return t.apply(this, arguments);\n        })\n      }, {\n        key: \"request\",\n        value: function value(e) {\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"get\";\n          return r = r.toLowerCase(), this.instance.request({\n            data: \"post\" == r && Object.keys(t).length ? t : null,\n            params: \"get\" == r && t,\n            url: e,\n            method: r\n          }).then(function (e) {\n            return e.data;\n          });\n        }\n      }]), e;\n    }()\n  },\n      Ve = r(19),\n      He = r.n(Ve),\n      Le = r(20),\n      Ue = r(12),\n      ze = r.n(Ue),\n      Me = r(5),\n      Ge = r.n(Me),\n      Je = r(8),\n      Ye = r.n(Je);\n\n  function Xe(e, t) {\n    var r;\n\n    if (\"undefined\" == typeof Symbol || null == e[Symbol.iterator]) {\n      if (Array.isArray(e) || (r = function (e, t) {\n        if (!e) return;\n        if (\"string\" == typeof e) return $e(e, t);\n        var r = Object.prototype.toString.call(e).slice(8, -1);\n        \"Object\" === r && e.constructor && (r = e.constructor.name);\n        if (\"Map\" === r || \"Set\" === r) return Array.from(e);\n        if (\"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return $e(e, t);\n      }(e)) || t && e && \"number\" == typeof e.length) {\n        r && (e = r);\n\n        var _n = 0,\n            i = function i() {};\n\n        return {\n          s: i,\n          n: function n() {\n            return _n >= e.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: e[_n++]\n            };\n          },\n          e: function e(_e2) {\n            throw _e2;\n          },\n          f: i\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var s,\n        a = !0,\n        o = !1;\n    return {\n      s: function s() {\n        r = e[Symbol.iterator]();\n      },\n      n: function n() {\n        var e = r.next();\n        return a = e.done, e;\n      },\n      e: function e(_e3) {\n        o = !0, s = _e3;\n      },\n      f: function f() {\n        try {\n          a || null == r[\"return\"] || r[\"return\"]();\n        } finally {\n          if (o) throw s;\n        }\n      }\n    };\n  }\n\n  function $e(e, t) {\n    (null == t || t > e.length) && (t = e.length);\n\n    for (var r = 0, n = new Array(t); r < t; r++) {\n      n[r] = e[r];\n    }\n\n    return n;\n  }\n\n  var Ze,\n      Qe = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (b()(this, e), !t || !t instanceof At) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t;\n    }\n\n    return y()(e, [{\n      key: \"invalid\",\n      value: function value(e) {\n        return e.msg || \"Invalid \".concat(e.name).concat(\"address\" === e.type ? \" address\" : \"\", \" provided\");\n      }\n    }, {\n      key: \"notPositive\",\n      value: function value(e) {\n        return \"\".concat(e.name, \" must be a positive integer\");\n      }\n    }, {\n      key: \"notEqual\",\n      value: function value(e) {\n        return e.msg || \"\".concat(e.names[0], \" can not be equal to \").concat(e.names[1]);\n      }\n    }, {\n      key: \"notValid\",\n      value: function value() {\n        var e,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Function(),\n            n = {},\n            i = !1,\n            s = Xe(t);\n\n        try {\n          for (s.s(); !(e = s.n()).done;) {\n            var a = e.value,\n                o = a.name,\n                u = a.names,\n                c = a.value,\n                d = a.type,\n                l = a.gt,\n                h = a.lt,\n                f = a.gte,\n                v = a.lte,\n                p = (a.se, a.optional);\n\n            if (!p || Ke.isNotNullOrUndefined(c) && (\"boolean\" === d || !1 !== c)) {\n              switch (n[a.name] = a.value, d) {\n                case \"address\":\n                  this.tronWeb.isAddress(c) ? n[o] = this.tronWeb.address.toHex(c) : i = !0;\n                  break;\n\n                case \"integer\":\n                  (!Ke.isInteger(c) || \"number\" == typeof l && c <= a.gt || \"number\" == typeof h && c >= a.lt || \"number\" == typeof f && c < a.gte || \"number\" == typeof v && c > a.lte) && (i = !0);\n                  break;\n\n                case \"positive-integer\":\n                  if (!Ke.isInteger(c) || c <= 0) return void r(this.notPositive(a));\n                  break;\n\n                case \"tokenId\":\n                  Ke.isString(c) && c.length || (i = !0);\n                  break;\n\n                case \"notEmptyObject\":\n                  Ke.isObject(c) && Object.keys(c).length || (i = !0);\n                  break;\n\n                case \"notEqual\":\n                  if (n[u[0]] === n[u[1]]) return r(this.notEqual(a)), !0;\n                  break;\n\n                case \"resource\":\n                  [\"BANDWIDTH\", \"ENERGY\"].includes(c) || (i = !0);\n                  break;\n\n                case \"url\":\n                  Ke.isValidURL(c) || (i = !0);\n                  break;\n\n                case \"hex\":\n                  Ke.isHex(c) || (i = !0);\n                  break;\n\n                case \"array\":\n                  Array.isArray(c) || (i = !0);\n                  break;\n\n                case \"not-empty-string\":\n                  Ke.isString(c) && c.length || (i = !0);\n                  break;\n\n                case \"boolean\":\n                  Ke.isBoolean(c) || (i = !0);\n                  break;\n\n                case \"string\":\n                  (!Ke.isString(c) || \"number\" == typeof l && c.length <= a.gt || \"number\" == typeof h && c.length >= a.lt || \"number\" == typeof f && c.length < a.gte || \"number\" == typeof v && c.length > a.lte) && (i = !0);\n              }\n\n              if (i) return r(this.invalid(a)), !0;\n            }\n          }\n        } catch (e) {\n          s.e(e);\n        } finally {\n          s.f();\n        }\n\n        return !1;\n      }\n    }]), e;\n  }();\n\n  function et(e, t) {\n    var r;\n\n    if (\"undefined\" == typeof Symbol || null == e[Symbol.iterator]) {\n      if (Array.isArray(e) || (r = function (e, t) {\n        if (!e) return;\n        if (\"string\" == typeof e) return tt(e, t);\n        var r = Object.prototype.toString.call(e).slice(8, -1);\n        \"Object\" === r && e.constructor && (r = e.constructor.name);\n        if (\"Map\" === r || \"Set\" === r) return Array.from(e);\n        if (\"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return tt(e, t);\n      }(e)) || t && e && \"number\" == typeof e.length) {\n        r && (e = r);\n\n        var _n2 = 0,\n            i = function i() {};\n\n        return {\n          s: i,\n          n: function n() {\n            return _n2 >= e.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: e[_n2++]\n            };\n          },\n          e: function e(_e4) {\n            throw _e4;\n          },\n          f: i\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var s,\n        a = !0,\n        o = !1;\n    return {\n      s: function s() {\n        r = e[Symbol.iterator]();\n      },\n      n: function n() {\n        var e = r.next();\n        return a = e.done, e;\n      },\n      e: function e(_e5) {\n        o = !0, s = _e5;\n      },\n      f: function f() {\n        try {\n          a || null == r[\"return\"] || r[\"return\"]();\n        } finally {\n          if (o) throw s;\n        }\n      }\n    };\n  }\n\n  function tt(e, t) {\n    (null == t || t > e.length) && (t = e.length);\n\n    for (var r = 0, n = new Array(t); r < t; r++) {\n      n[r] = e[r];\n    }\n\n    return n;\n  }\n\n  function rt(e) {\n    return At.address.toHex(e);\n  }\n\n  function nt(e) {\n    return Ze.tronWeb.fromUtf8(e);\n  }\n\n  function it(e, t) {\n    return e.Error ? t(e.Error) : e.result && e.result.message ? t(Ze.tronWeb.toUtf8(e.result.message)) : t(null, e);\n  }\n\n  var st = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (b()(this, e), !t || !t instanceof At) throw new Error(\"Expected instance of TronWeb\");\n      Ze = this, this.tronWeb = t, this.injectPromise = Ge()(this), this.validator = new Qe(t);\n    }\n\n    var t, r, n, i;\n    return y()(e, [{\n      key: \"sendTrx\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Ke.isFunction(n) && (i = n, n = {}), Ke.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Ke.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.sendTrx, e, t, r, n);\n\n        if (t = parseInt(t), !this.validator.notValid([{\n          name: \"recipient\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"origin\",\n          type: \"address\",\n          value: r\n        }, {\n          names: [\"recipient\", \"origin\"],\n          type: \"notEqual\",\n          msg: \"Cannot transfer TRX to the same account\"\n        }, {\n          name: \"amount\",\n          type: \"integer\",\n          gt: 0,\n          value: t\n        }], i)) {\n          var s = {\n            to_address: rt(e),\n            owner_address: rt(r),\n            amount: t\n          };\n          n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/createtransaction\", s, \"post\").then(function (e) {\n            return it(e, i);\n          })[\"catch\"](function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"sendToken\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Ke.isFunction(i) && (s = i, i = {}), Ke.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Ke.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.sendToken, e, t, r, n, i);\n\n        if (t = parseInt(t), !this.validator.notValid([{\n          name: \"recipient\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"origin\",\n          type: \"address\",\n          value: n\n        }, {\n          names: [\"recipient\", \"origin\"],\n          type: \"notEqual\",\n          msg: \"Cannot transfer tokens to the same account\"\n        }, {\n          name: \"amount\",\n          type: \"integer\",\n          gt: 0,\n          value: t\n        }, {\n          name: \"token ID\",\n          type: \"tokenId\",\n          value: r\n        }], s)) {\n          var a = {\n            to_address: rt(e),\n            owner_address: rt(n),\n            asset_name: nt(r),\n            amount: parseInt(t)\n          };\n          i && i.permissionId && (a.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/transferasset\", a, \"post\").then(function (e) {\n            return it(e, s);\n          })[\"catch\"](function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"purchaseToken\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Ke.isFunction(i) && (s = i, i = {}), Ke.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Ke.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.purchaseToken, e, t, r, n, i);\n\n        if (!this.validator.notValid([{\n          name: \"buyer\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: e\n        }, {\n          names: [\"buyer\", \"issuer\"],\n          type: \"notEqual\",\n          msg: \"Cannot purchase tokens from same account\"\n        }, {\n          name: \"amount\",\n          type: \"integer\",\n          gt: 0,\n          value: r\n        }, {\n          name: \"token ID\",\n          type: \"tokenId\",\n          value: t\n        }], s)) {\n          var a = {\n            to_address: rt(e),\n            owner_address: rt(n),\n            asset_name: nt(t),\n            amount: parseInt(r)\n          };\n          i && i.permissionId && (a.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/participateassetissue\", a, \"post\").then(function (e) {\n            return it(e, s);\n          })[\"catch\"](function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"freezeBalance\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"BANDWIDTH\",\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0,\n            s = arguments.length > 5 ? arguments[5] : void 0,\n            a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n        if (Ke.isFunction(s) && (a = s, s = {}), Ke.isFunction(i) ? (a = i, i = void 0) : Ke.isObject(i) && (s = i, i = void 0), Ke.isFunction(n) ? (a = n, n = this.tronWeb.defaultAddress.hex) : Ke.isObject(n) && (s = n, n = this.tronWeb.defaultAddress.hex), Ke.isFunction(t) && (a = t, t = 3), Ke.isFunction(r) && (a = r, r = \"BANDWIDTH\"), !a) return this.injectPromise(this.freezeBalance, e, t, r, n, i, s);\n\n        if (!this.validator.notValid([{\n          name: \"origin\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"receiver\",\n          type: \"address\",\n          value: i,\n          optional: !0\n        }, {\n          name: \"amount\",\n          type: \"integer\",\n          gt: 0,\n          value: e\n        }, {\n          name: \"duration\",\n          type: \"integer\",\n          gte: 3,\n          value: t\n        }, {\n          name: \"resource\",\n          type: \"resource\",\n          value: r,\n          msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY'\n        }], a)) {\n          var o = {\n            owner_address: rt(n),\n            frozen_balance: parseInt(e),\n            frozen_duration: parseInt(t),\n            resource: r\n          };\n          Ke.isNotNullOrUndefined(i) && rt(i) !== rt(n) && (o.receiver_address = rt(i)), s && s.permissionId && (o.Permission_id = s.permissionId), this.tronWeb.fullNode.request(\"wallet/freezebalance\", o, \"post\").then(function (e) {\n            return it(e, a);\n          })[\"catch\"](function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"unfreezeBalance\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"BANDWIDTH\",\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Ke.isFunction(n) && (i = n, n = {}), Ke.isFunction(r) ? (i = r, r = void 0) : Ke.isObject(r) && (n = r, r = void 0), Ke.isFunction(t) ? (i = t, t = this.tronWeb.defaultAddress.hex) : Ke.isObject(t) && (n = t, t = this.tronWeb.defaultAddress.hex), Ke.isFunction(e) && (i = e, e = \"BANDWIDTH\"), !i) return this.injectPromise(this.unfreezeBalance, e, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"origin\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"receiver\",\n          type: \"address\",\n          value: r,\n          optional: !0\n        }, {\n          name: \"resource\",\n          type: \"resource\",\n          value: e,\n          msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY'\n        }], i)) {\n          var s = {\n            owner_address: rt(t),\n            resource: e\n          };\n          Ke.isNotNullOrUndefined(r) && rt(r) !== rt(t) && (s.receiver_address = rt(r)), n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/unfreezebalance\", s, \"post\").then(function (e) {\n            return it(e, i);\n          })[\"catch\"](function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"withdrawBlockRewards\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 ? arguments[1] : void 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Ke.isFunction(t) && (r = t, t = {}), Ke.isFunction(e) ? (r = e, e = this.tronWeb.defaultAddress.hex) : Ke.isObject(e) && (t = e, e = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.withdrawBlockRewards, e, t);\n\n        if (!this.validator.notValid([{\n          name: \"origin\",\n          type: \"address\",\n          value: e\n        }], r)) {\n          var n = {\n            owner_address: rt(e)\n          };\n          t && t.permissionId && (n.Permission_id = t.permissionId), this.tronWeb.fullNode.request(\"wallet/withdrawbalance\", n, \"post\").then(function (e) {\n            return it(e, r);\n          })[\"catch\"](function (e) {\n            return r(e);\n          });\n        }\n      }\n    }, {\n      key: \"applyForSR\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Ke.isFunction(r) && (n = r, r = {}), Ke.isObject(t) && Ke.isValidURL(e) && (r = t, t = e, e = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.applyForSR, e, t, r);\n\n        if (!this.validator.notValid([{\n          name: \"origin\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"url\",\n          type: \"url\",\n          value: t,\n          msg: \"Invalid url provided\"\n        }], n)) {\n          var i = {\n            owner_address: rt(e),\n            url: nt(t)\n          };\n          r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request(\"wallet/createwitness\", i, \"post\").then(function (e) {\n            return it(e, n);\n          })[\"catch\"](function (e) {\n            return n(e);\n          });\n        }\n      }\n    }, {\n      key: \"vote\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 2 ? arguments[2] : void 0,\n            i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Ke.isFunction(n) && (i = n, n = {}), Ke.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Ke.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.vote, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"voter\",\n          type: \"address\",\n          value: r\n        }, {\n          name: \"votes\",\n          type: \"notEmptyObject\",\n          value: t\n        }], i)) {\n          var s = !1;\n\n          if (t = Object.entries(t).map(function (t) {\n            var r = Ye()(t, 2),\n                n = r[0],\n                i = r[1];\n            if (!s) return e.validator.notValid([{\n              name: \"SR\",\n              type: \"address\",\n              value: n\n            }, {\n              name: \"vote count\",\n              type: \"integer\",\n              gt: 0,\n              value: i,\n              msg: \"Invalid vote count provided for SR: \" + n\n            }]) ? s = !0 : {\n              vote_address: rt(n),\n              vote_count: parseInt(i)\n            };\n          }), !s) {\n            var a = {\n              owner_address: rt(r),\n              votes: t\n            };\n            n && n.permissionId && (a.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/votewitnessaccount\", a, \"post\").then(function (e) {\n              return it(e, i);\n            })[\"catch\"](function (e) {\n              return i(e);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"createSmartContract\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Ke.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.createSmartContract, e, t);\n        var n = e.feeLimit || this.tronWeb.feeLimit,\n            i = e.userFeePercentage;\n        \"number\" == typeof i || i || (i = 100);\n        var s = e.originEnergyLimit || 1e7,\n            a = e.callValue || 0,\n            o = e.tokenValue,\n            u = e.tokenId || e.token_id,\n            c = e.abi,\n            d = void 0 !== c && c,\n            l = e.bytecode,\n            h = void 0 !== l && l,\n            f = e.parameters,\n            v = void 0 === f ? [] : f,\n            p = e.name,\n            g = void 0 === p ? \"\" : p;\n        if (d && Ke.isString(d)) try {\n          d = JSON.parse(d);\n        } catch (e) {\n          return r(\"Invalid options.abi provided\");\n        }\n        if (d.entrys && (d = d.entrys), !Ke.isArray(d)) return r(\"Invalid options.abi provided\");\n        var b = d.some(function (e) {\n          return \"constructor\" == e.type && e.payable;\n        });\n\n        if (!this.validator.notValid([{\n          name: \"bytecode\",\n          type: \"hex\",\n          value: h\n        }, {\n          name: \"feeLimit\",\n          type: \"integer\",\n          value: n,\n          gt: 0,\n          lte: 1e9\n        }, {\n          name: \"callValue\",\n          type: \"integer\",\n          value: a,\n          gte: 0\n        }, {\n          name: \"userFeePercentage\",\n          type: \"integer\",\n          value: i,\n          gte: 0,\n          lte: 100\n        }, {\n          name: \"originEnergyLimit\",\n          type: \"integer\",\n          value: s,\n          gte: 0,\n          lte: 1e7\n        }, {\n          name: \"parameters\",\n          type: \"array\",\n          value: v\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"tokenValue\",\n          type: \"integer\",\n          value: o,\n          gte: 0,\n          optional: !0\n        }, {\n          name: \"tokenId\",\n          type: \"integer\",\n          value: u,\n          gte: 0,\n          optional: !0\n        }], r)) {\n          if (b && 0 == a && 0 == o) return r(\"When contract is payable, options.callValue or options.tokenValue must be a positive integer\");\n          if (!b && (a > 0 || o > 0)) return r(\"When contract is not payable, options.callValue and options.tokenValue must be 0\");\n          var m = d.find(function (e) {\n            return \"constructor\" === e.type;\n          });\n\n          if (void 0 !== m && m) {\n            var y = new ce(),\n                k = [],\n                x = [];\n            if (m = m.inputs, v.length != m.length) return r(\"constructor needs \".concat(m.length, \" but \").concat(v.length, \" provided\"));\n\n            for (var w = 0; w < v.length; w++) {\n              var I = m[w].type,\n                  A = v[w];\n              if (!I || !Ke.isString(I) || !I.length) return r(\"Invalid parameter type provided: \" + I);\n              \"address\" == I ? A = rt(A).replace(V, \"0x\") : \"address[]\" == I && (A = A.map(function (e) {\n                return rt(e).replace(V, \"0x\");\n              })), k.push(I), x.push(A);\n            }\n\n            try {\n              v = y.encode(k, x).replace(/^(0x)/, \"\");\n            } catch (e) {\n              return r(e);\n            }\n          } else v = \"\";\n\n          var P = {\n            owner_address: rt(t),\n            fee_limit: parseInt(n),\n            call_value: parseInt(a),\n            consume_user_resource_percent: i,\n            origin_energy_limit: s,\n            abi: JSON.stringify(d),\n            bytecode: h,\n            parameter: v,\n            name: g\n          };\n          Ke.isNotNullOrUndefined(o) && (P.call_token_value = parseInt(o)), Ke.isNotNullOrUndefined(u) && (P.token_id = parseInt(u)), e && e.permissionId && (P.Permission_id = e.permissionId), this.tronWeb.fullNode.request(\"wallet/deploycontract\", P, \"post\").then(function (e) {\n            return it(e, r);\n          })[\"catch\"](function (e) {\n            return r(e);\n          });\n        }\n      }\n    }, {\n      key: \"triggerSmartContract\",\n      value: function value() {\n        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {\n          t[r] = arguments[r];\n        }\n\n        return \"object\" !== p()(t[2]) && (t[2] = {\n          feeLimit: t[2],\n          callValue: t[3]\n        }, t.splice(3, 1)), this._triggerSmartContract.apply(this, t);\n      }\n    }, {\n      key: \"triggerConstantContract\",\n      value: function value() {\n        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {\n          t[r] = arguments[r];\n        }\n\n        return t[2]._isConstant = !0, this.triggerSmartContract.apply(this, t);\n      }\n    }, {\n      key: \"triggerConfirmedConstantContract\",\n      value: function value() {\n        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) {\n          t[r] = arguments[r];\n        }\n\n        return t[2]._isConstant = !0, t[2].confirmed = !0, this.triggerSmartContract.apply(this, t);\n      }\n    }, {\n      key: \"_triggerSmartContract\",\n      value: function value(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],\n            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,\n            s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Ke.isFunction(i) && (s = i, i = this.tronWeb.defaultAddress.hex), Ke.isFunction(n) && (s = n, n = []), !s) return this.injectPromise(this._triggerSmartContract, e, t, r, n, i);\n        var a = Object.assign({\n          callValue: 0,\n          feeLimit: this.tronWeb.feeLimit\n        }, r),\n            o = a.tokenValue,\n            u = a.tokenId,\n            c = a.callValue,\n            d = a.feeLimit;\n\n        if (!this.validator.notValid([{\n          name: \"feeLimit\",\n          type: \"integer\",\n          value: d,\n          gt: 0,\n          lte: 1e9\n        }, {\n          name: \"callValue\",\n          type: \"integer\",\n          value: c,\n          gte: 0\n        }, {\n          name: \"parameters\",\n          type: \"array\",\n          value: n\n        }, {\n          name: \"contract\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: i,\n          optional: !0\n        }, {\n          name: \"tokenValue\",\n          type: \"integer\",\n          value: o,\n          gte: 0,\n          optional: !0\n        }, {\n          name: \"tokenId\",\n          type: \"integer\",\n          value: u,\n          gte: 0,\n          optional: !0\n        }, {\n          name: \"function selector\",\n          type: \"not-empty-string\",\n          value: t\n        }], s)) {\n          if (t = t.replace(\"/s*/g\", \"\"), n.length) {\n            for (var l = new ce(), h = [], f = [], v = 0; v < n.length; v++) {\n              var p = n[v],\n                  g = p.type,\n                  b = p.value;\n              if (!g || !Ke.isString(g) || !g.length) return s(\"Invalid parameter type provided: \" + g);\n              \"address\" == g ? b = rt(b).replace(V, \"0x\") : \"address[]\" == g && (b = b.map(function (e) {\n                return rt(e).replace(V, \"0x\");\n              })), h.push(g), f.push(b);\n            }\n\n            try {\n              h = h.map(function (e) {\n                return /trcToken/.test(e) && (e = e.replace(/trcToken/, \"uint256\")), e;\n              }), n = l.encode(h, f).replace(/^(0x)/, \"\");\n            } catch (e) {\n              return s(e);\n            }\n          } else n = \"\";\n\n          var m = {\n            contract_address: rt(e),\n            owner_address: rt(i),\n            function_selector: t,\n            parameter: n\n          };\n          r._isConstant || (m.call_value = parseInt(c), m.fee_limit = parseInt(d), Ke.isNotNullOrUndefined(o) && (m.call_token_value = parseInt(o)), Ke.isNotNullOrUndefined(u) && (m.token_id = parseInt(u))), r.permissionId && (m.Permission_id = r.permissionId), this.tronWeb[r.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(r.confirmed ? \"solidity\" : \"\", \"/trigger\").concat(r._isConstant ? \"constant\" : \"smart\", \"contract\"), m, \"post\").then(function (e) {\n            return it(e, s);\n          })[\"catch\"](function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"clearABI\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (!r) return this.injectPromise(this.clearABI, e, t);\n        if (!this.tronWeb.isAddress(e)) return r(\"Invalid contract address provided\");\n        if (!this.tronWeb.isAddress(t)) return r(\"Invalid owner address provided\");\n        var n = {\n          contract_address: rt(e),\n          owner_address: rt(t)\n        };\n        this.tronWeb.trx.cache.contracts[e] && delete this.tronWeb.trx.cache.contracts[e], this.tronWeb.fullNode.request(\"wallet/clearabi\", n, \"post\").then(function (e) {\n          return it(e, r);\n        })[\"catch\"](function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"updateBrokerage\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (!r) return this.injectPromise(this.updateBrokerage, e, t);\n        if (!Ke.isNotNullOrUndefined(e)) return r(\"Invalid brokerage provided\");\n        if (!Ke.isInteger(e) || e < 0 || e > 100) return r(\"Brokerage must be an integer between 0 and 100\");\n        if (!this.tronWeb.isAddress(t)) return r(\"Invalid owner address provided\");\n        var n = {\n          brokerage: parseInt(e),\n          owner_address: rt(t)\n        };\n        this.tronWeb.fullNode.request(\"wallet/updateBrokerage\", n, \"post\").then(function (e) {\n          return it(e, r);\n        })[\"catch\"](function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"createToken\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Ke.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.createToken, e, t);\n        var n = e.name,\n            i = void 0 !== n && n,\n            s = e.abbreviation,\n            a = void 0 !== s && s,\n            o = e.description,\n            u = void 0 !== o && o,\n            c = e.url,\n            d = void 0 !== c && c,\n            l = e.totalSupply,\n            h = void 0 === l ? 0 : l,\n            f = e.trxRatio,\n            v = void 0 === f ? 1 : f,\n            p = e.tokenRatio,\n            g = void 0 === p ? 1 : p,\n            b = e.saleStart,\n            m = void 0 === b ? Date.now() : b,\n            y = e.saleEnd,\n            k = void 0 !== y && y,\n            x = e.freeBandwidth,\n            w = void 0 === x ? 0 : x,\n            I = e.freeBandwidthLimit,\n            A = void 0 === I ? 0 : I,\n            P = e.frozenAmount,\n            W = void 0 === P ? 0 : P,\n            _ = e.frozenDuration,\n            S = void 0 === _ ? 0 : _,\n            N = e.voteScore,\n            T = e.precision;\n\n        if (!this.validator.notValid([{\n          name: \"Supply amount\",\n          type: \"positive-integer\",\n          value: h\n        }, {\n          name: \"TRX ratio\",\n          type: \"positive-integer\",\n          value: v\n        }, {\n          name: \"Token ratio\",\n          type: \"positive-integer\",\n          value: g\n        }, {\n          name: \"token abbreviation\",\n          type: \"not-empty-string\",\n          value: a\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: i\n        }, {\n          name: \"token description\",\n          type: \"not-empty-string\",\n          value: u\n        }, {\n          name: \"token url\",\n          type: \"url\",\n          value: d\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"sale start timestamp\",\n          type: \"integer\",\n          value: m,\n          gte: Date.now()\n        }, {\n          name: \"sale end timestamp\",\n          type: \"integer\",\n          value: k,\n          gt: m\n        }, {\n          name: \"Free bandwidth amount\",\n          type: \"integer\",\n          value: w,\n          gte: 0\n        }, {\n          name: \"Free bandwidth limit\",\n          type: \"integer\",\n          value: A,\n          gte: 0\n        }, {\n          name: \"Frozen supply\",\n          type: \"integer\",\n          value: W,\n          gte: 0\n        }, {\n          name: \"Frozen duration\",\n          type: \"integer\",\n          value: S,\n          gte: 0\n        }], r)) {\n          if (Ke.isNotNullOrUndefined(N) && (!Ke.isInteger(N) || N <= 0)) return r(\"voteScore must be a positive integer greater than 0\");\n          if (Ke.isNotNullOrUndefined(T) && (!Ke.isInteger(T) || T <= 0 || T > 6)) return r(\"precision must be a positive integer > 0 and <= 6\");\n          var j = {\n            owner_address: rt(t),\n            name: nt(i),\n            abbr: nt(a),\n            description: nt(u),\n            url: nt(d),\n            total_supply: parseInt(h),\n            trx_num: parseInt(v),\n            num: parseInt(g),\n            start_time: parseInt(m),\n            end_time: parseInt(k),\n            free_asset_net_limit: parseInt(w),\n            public_free_asset_net_limit: parseInt(A),\n            frozen_supply: {\n              frozen_amount: parseInt(W),\n              frozen_days: parseInt(S)\n            }\n          };\n          !this.tronWeb.fullnodeSatisfies(\">=3.5.0\") || parseInt(W) > 0 || delete j.frozen_supply, T && !isNaN(parseInt(T)) && (j.precision = parseInt(T)), N && !isNaN(parseInt(N)) && (j.vote_score = parseInt(N)), e && e.permissionId && (j.Permission_id = e.permissionId), this.tronWeb.fullNode.request(\"wallet/createassetissue\", j, \"post\").then(function (e) {\n            return it(e, r);\n          })[\"catch\"](function (e) {\n            return r(e);\n          });\n        }\n      }\n    }, {\n      key: \"updateAccount\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Ke.isFunction(r) && (n = r, r = {}), Ke.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Ke.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.updateAccount, e, t, r);\n\n        if (!this.validator.notValid([{\n          name: \"Name\",\n          type: \"not-empty-string\",\n          value: e\n        }, {\n          name: \"origin\",\n          type: \"address\",\n          value: t\n        }], n)) {\n          var i = {\n            account_name: nt(e),\n            owner_address: rt(t)\n          };\n          r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request(\"wallet/updateaccount\", i, \"post\").then(function (e) {\n            return it(e, n);\n          })[\"catch\"](function (e) {\n            return n(e);\n          });\n        }\n      }\n    }, {\n      key: \"setAccountId\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Ke.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.setAccountId, e, t);\n        e && Ke.isString(e) && e.startsWith(\"0x\") && (e = e.slice(2)), this.validator.notValid([{\n          name: \"accountId\",\n          type: \"hex\",\n          value: e\n        }, {\n          name: \"accountId\",\n          type: \"string\",\n          lte: 32,\n          gte: 8,\n          value: e\n        }, {\n          name: \"origin\",\n          type: \"address\",\n          value: t\n        }], r) || this.tronWeb.fullNode.request(\"wallet/setaccountid\", {\n          account_id: e,\n          owner_address: rt(t)\n        }, \"post\").then(function (e) {\n          return it(e, r);\n        })[\"catch\"](function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"updateToken\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Ke.isFunction(t) ? (r = t, t = this.tronWeb.defaultAddress.hex) : Ke.isObject(t) && (e = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.updateToken, e, t);\n        var n = e,\n            i = n.description,\n            s = void 0 !== i && i,\n            a = n.url,\n            o = void 0 !== a && a,\n            u = n.freeBandwidth,\n            c = void 0 === u ? 0 : u,\n            d = n.freeBandwidthLimit,\n            l = void 0 === d ? 0 : d;\n\n        if (!this.validator.notValid([{\n          name: \"token description\",\n          type: \"not-empty-string\",\n          value: s\n        }, {\n          name: \"token url\",\n          type: \"url\",\n          value: o\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"Free bandwidth amount\",\n          type: \"positive-integer\",\n          value: c\n        }, {\n          name: \"Free bandwidth limit\",\n          type: \"positive-integer\",\n          value: l\n        }], r)) {\n          var h = {\n            owner_address: rt(t),\n            description: nt(s),\n            url: nt(o),\n            new_limit: parseInt(c),\n            new_public_limit: parseInt(l)\n          };\n          e && e.permissionId && (h.Permission_id = e.permissionId), this.tronWeb.fullNode.request(\"wallet/updateasset\", h, \"post\").then(function (e) {\n            return it(e, r);\n          })[\"catch\"](function (e) {\n            return r(e);\n          });\n        }\n      }\n    }, {\n      key: \"sendAsset\",\n      value: function value() {\n        return this.sendToken.apply(this, arguments);\n      }\n    }, {\n      key: \"purchaseAsset\",\n      value: function value() {\n        return this.purchaseToken.apply(this, arguments);\n      }\n    }, {\n      key: \"createAsset\",\n      value: function value() {\n        return this.createToken.apply(this, arguments);\n      }\n    }, {\n      key: \"updateAsset\",\n      value: function value() {\n        return this.updateToken.apply(this, arguments);\n      }\n    }, {\n      key: \"createProposal\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Ke.isFunction(r) && (n = r, r = {}), Ke.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Ke.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.createProposal, e, t, r);\n\n        if (!this.validator.notValid([{\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }], n)) {\n          var i = \"Invalid proposal parameters provided\";\n          if (!e) return n(i);\n          Ke.isArray(e) || (e = [e]);\n          var s,\n              a = et(e);\n\n          try {\n            for (a.s(); !(s = a.n()).done;) {\n              var o = s.value;\n              if (!Ke.isObject(o)) return n(i);\n            }\n          } catch (e) {\n            a.e(e);\n          } finally {\n            a.f();\n          }\n\n          var u = {\n            owner_address: rt(t),\n            parameters: e\n          };\n          r && r.permissionId && (u.Permission_id = r.permissionId), this.tronWeb.fullNode.request(\"wallet/proposalcreate\", u, \"post\").then(function (e) {\n            return it(e, n);\n          })[\"catch\"](function (e) {\n            return n(e);\n          });\n        }\n      }\n    }, {\n      key: \"deleteProposal\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Ke.isFunction(r) && (n = r, r = {}), Ke.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Ke.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.deleteProposal, e, t, r);\n\n        if (!this.validator.notValid([{\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"proposalID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }], n)) {\n          var i = {\n            owner_address: rt(t),\n            proposal_id: parseInt(e)\n          };\n          r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request(\"wallet/proposaldelete\", i, \"post\").then(function (e) {\n            return it(e, n);\n          })[\"catch\"](function (e) {\n            return n(e);\n          });\n        }\n      }\n    }, {\n      key: \"voteProposal\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Ke.isFunction(n) && (i = n, n = {}), Ke.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Ke.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.voteProposal, e, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"voter\",\n          type: \"address\",\n          value: r\n        }, {\n          name: \"proposalID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }, {\n          name: \"has approval\",\n          type: \"boolean\",\n          value: t\n        }], i)) {\n          var s = {\n            owner_address: rt(r),\n            proposal_id: parseInt(e),\n            is_add_approval: t\n          };\n          n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/proposalapprove\", s, \"post\").then(function (e) {\n            return it(e, i);\n          })[\"catch\"](function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"createTRXExchange\",\n      value: function value(e, t, r) {\n        var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Ke.isFunction(i) && (s = i, i = {}), Ke.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Ke.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.createTRXExchange, e, t, r, n, i);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: e\n        }, {\n          name: \"token balance\",\n          type: \"positive-integer\",\n          value: t\n        }, {\n          name: \"trx balance\",\n          type: \"positive-integer\",\n          value: r\n        }], s)) {\n          var a = {\n            owner_address: rt(n),\n            first_token_id: nt(e),\n            first_token_balance: t,\n            second_token_id: \"5f\",\n            second_token_balance: r\n          };\n          i && i.permissionId && (a.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangecreate\", a, \"post\").then(function (e) {\n            s(null, e);\n          })[\"catch\"](function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"createTokenExchange\",\n      value: function value(e, t, r, n) {\n        var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,\n            s = arguments.length > 5 ? arguments[5] : void 0,\n            a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n        if (Ke.isFunction(s) && (a = s, s = {}), Ke.isFunction(i) ? (a = i, i = this.tronWeb.defaultAddress.hex) : Ke.isObject(i) && (s = i, i = this.tronWeb.defaultAddress.hex), !a) return this.injectPromise(this.createTokenExchange, e, t, r, n, i, s);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: i\n        }, {\n          name: \"first token name\",\n          type: \"not-empty-string\",\n          value: e\n        }, {\n          name: \"second token name\",\n          type: \"not-empty-string\",\n          value: r\n        }, {\n          name: \"first token balance\",\n          type: \"positive-integer\",\n          value: t\n        }, {\n          name: \"second token balance\",\n          type: \"positive-integer\",\n          value: n\n        }], a)) {\n          var o = {\n            owner_address: rt(i),\n            first_token_id: nt(e),\n            first_token_balance: t,\n            second_token_id: nt(r),\n            second_token_balance: n\n          };\n          s && s.permissionId && (o.Permission_id = s.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangecreate\", o, \"post\").then(function (e) {\n            a(null, e);\n          })[\"catch\"](function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"injectExchangeTokens\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Ke.isFunction(i) && (s = i, i = {}), Ke.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Ke.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.injectExchangeTokens, e, t, r, n, i);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: t\n        }, {\n          name: \"token amount\",\n          type: \"integer\",\n          value: r,\n          gte: 1\n        }, {\n          name: \"exchangeID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }], s)) {\n          var a = {\n            owner_address: rt(n),\n            exchange_id: parseInt(e),\n            token_id: nt(t),\n            quant: parseInt(r)\n          };\n          i && i.permissionId && (a.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangeinject\", a, \"post\").then(function (e) {\n            return it(e, s);\n          })[\"catch\"](function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"withdrawExchangeTokens\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            s = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Ke.isFunction(i) && (s = i, i = {}), Ke.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Ke.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.withdrawExchangeTokens, e, t, r, n, i);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: t\n        }, {\n          name: \"token amount\",\n          type: \"integer\",\n          value: r,\n          gte: 1\n        }, {\n          name: \"exchangeID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }], s)) {\n          var a = {\n            owner_address: rt(n),\n            exchange_id: parseInt(e),\n            token_id: nt(t),\n            quant: parseInt(r)\n          };\n          i && i.permissionId && (a.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangewithdraw\", a, \"post\").then(function (e) {\n            return it(e, s);\n          })[\"catch\"](function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"tradeExchangeTokens\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,\n            s = arguments.length > 5 ? arguments[5] : void 0,\n            a = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n        if (Ke.isFunction(s) && (a = s, s = {}), Ke.isFunction(i) ? (a = i, i = this.tronWeb.defaultAddress.hex) : Ke.isObject(i) && (s = i, i = this.tronWeb.defaultAddress.hex), !a) return this.injectPromise(this.tradeExchangeTokens, e, t, r, n, i, s);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: i\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: t\n        }, {\n          name: \"tokenAmountSold\",\n          type: \"integer\",\n          value: r,\n          gte: 1\n        }, {\n          name: \"tokenAmountExpected\",\n          type: \"integer\",\n          value: n,\n          gte: 1\n        }, {\n          name: \"exchangeID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }], a)) {\n          var o = {\n            owner_address: rt(i),\n            exchange_id: parseInt(e),\n            token_id: this.tronWeb.fromAscii(t),\n            quant: parseInt(r),\n            expected: parseInt(n)\n          };\n          s && s.permissionId && (o.Permission_id = s.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangetransaction\", o, \"post\").then(function (e) {\n            return it(e, a);\n          })[\"catch\"](function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"updateSetting\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Ke.isFunction(n) && (i = n, n = {}), Ke.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Ke.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.updateSetting, e, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: r\n        }, {\n          name: \"contract\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"userFeePercentage\",\n          type: \"integer\",\n          value: t,\n          gte: 0,\n          lte: 100\n        }], i)) {\n          var s = {\n            owner_address: rt(r),\n            contract_address: rt(e),\n            consume_user_resource_percent: t\n          };\n          n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/updatesetting\", s, \"post\").then(function (e) {\n            return it(e, i);\n          })[\"catch\"](function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"updateEnergyLimit\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Ke.isFunction(n) && (i = n, n = {}), Ke.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Ke.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.updateEnergyLimit, e, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: r\n        }, {\n          name: \"contract\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"originEnergyLimit\",\n          type: \"integer\",\n          value: t,\n          gte: 0,\n          lte: 1e7\n        }], i)) {\n          var s = {\n            owner_address: rt(r),\n            contract_address: rt(e),\n            origin_energy_limit: t\n          };\n          n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/updateenergylimit\", s, \"post\").then(function (e) {\n            return it(e, i);\n          })[\"catch\"](function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"checkPermissions\",\n      value: function value(e, t) {\n        if (e) {\n          if (e.type !== t || !e.permission_name || !Ke.isString(e.permission_name) || !Ke.isInteger(e.threshold) || e.threshold < 1 || !e.keys) return !1;\n          var r,\n              n = et(e.keys);\n\n          try {\n            for (n.s(); !(r = n.n()).done;) {\n              var i = r.value;\n              if (!this.tronWeb.isAddress(i.address) || !Ke.isInteger(i.weight) || i.weight > e.threshold || i.weight < 1 || 2 === t && !e.operations) return !1;\n            }\n          } catch (e) {\n            n.e(e);\n          } finally {\n            n.f();\n          }\n        }\n\n        return !0;\n      }\n    }, {\n      key: \"updateAccountPermissions\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Ke.isFunction(n) && (i = n, n = !1), Ke.isFunction(r) && (i = r, r = n = !1), Ke.isFunction(t) && (i = t, t = r = n = !1), !i) return this.injectPromise(this.updateAccountPermissions, e, t, r, n);\n        if (!this.tronWeb.isAddress(e)) return i(\"Invalid ownerAddress provided\");\n        if (!this.checkPermissions(t, 0)) return i(\"Invalid ownerPermissions provided\");\n        if (!this.checkPermissions(r, 1)) return i(\"Invalid witnessPermissions provided\");\n        Array.isArray(n) || (n = [n]);\n        var s,\n            a = et(n);\n\n        try {\n          for (a.s(); !(s = a.n()).done;) {\n            var o = s.value;\n            if (!this.checkPermissions(o, 2)) return i(\"Invalid activesPermissions provided\");\n          }\n        } catch (e) {\n          a.e(e);\n        } finally {\n          a.f();\n        }\n\n        var u = {\n          owner_address: e\n        };\n        t && (u.owner = t), r && (u.witness = r), n && (u.actives = 1 === n.length ? n[0] : n), this.tronWeb.fullNode.request(\"wallet/accountpermissionupdate\", u, \"post\").then(function (e) {\n          return it(e, i);\n        })[\"catch\"](function (e) {\n          return i(e);\n        });\n      }\n    }, {\n      key: \"newTxID\",\n      value: (i = f()(l.a.mark(function e(t, r) {\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (r) {\n                  e.next = 2;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.newTxID, t));\n\n              case 2:\n                this.tronWeb.fullNode.request(\"wallet/getsignweight\", t, \"post\").then(function (e) {\n                  e = e.transaction.transaction, \"boolean\" == typeof t.visible && (e.visible = t.visible), r(null, e);\n                })[\"catch\"](function (e) {\n                  return r(\"Error generating a new transaction id.\");\n                });\n\n              case 3:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t) {\n        return i.apply(this, arguments);\n      })\n    }, {\n      key: \"alterTransaction\",\n      value: (n = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2]) {\n                  e.next = 4;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.alterTransaction, t, r));\n\n              case 4:\n                if (!t.signature) {\n                  e.next = 6;\n                  break;\n                }\n\n                return e.abrupt(\"return\", n(\"You can not extend the expiration of a signed transaction.\"));\n\n              case 6:\n                if (!r.data) {\n                  e.next = 12;\n                  break;\n                }\n\n                if (\"hex\" !== r.dataFormat && (r.data = this.tronWeb.toHex(r.data)), r.data = r.data.replace(/^0x/, \"\"), 0 !== r.data.length) {\n                  e.next = 11;\n                  break;\n                }\n\n                return e.abrupt(\"return\", n(\"Invalid data provided\"));\n\n              case 11:\n                t.raw_data.data = r.data;\n\n              case 12:\n                if (!r.extension) {\n                  e.next = 17;\n                  break;\n                }\n\n                if (r.extension = parseInt(1e3 * r.extension), !(isNaN(r.extension) || t.raw_data.expiration + r.extension <= Date.now() + 3e3)) {\n                  e.next = 16;\n                  break;\n                }\n\n                return e.abrupt(\"return\", n(\"Invalid extension provided\"));\n\n              case 16:\n                t.raw_data.expiration += r.extension;\n\n              case 17:\n                this.newTxID(t, n);\n\n              case 18:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e) {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"extendExpiration\",\n      value: (r = f()(l.a.mark(function e(t, r) {\n        var n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (n = i.length > 2 && void 0 !== i[2] && i[2]) {\n                  e.next = 3;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.extendExpiration, t, r));\n\n              case 3:\n                this.alterTransaction(t, {\n                  extension: r\n                }, n);\n\n              case 4:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t) {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"addUpdateData\",\n      value: (t = f()(l.a.mark(function e(t, r) {\n        var n,\n            i,\n            s = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (n = s.length > 2 && void 0 !== s[2] ? s[2] : \"utf8\", i = s.length > 3 && void 0 !== s[3] && s[3], Ke.isFunction(n) && (i = n, n = \"utf8\"), i) {\n                  e.next = 5;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.addUpdateData, t, r, n));\n\n              case 5:\n                this.alterTransaction(t, {\n                  data: r,\n                  dataFormat: n\n                }, i);\n\n              case 6:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, r) {\n        return t.apply(this, arguments);\n      })\n    }]), e;\n  }();\n\n  function at(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function ot(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? at(Object(r), !0).forEach(function (t) {\n        N()(e, t, r[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : at(Object(r)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n      });\n    }\n\n    return e;\n  }\n\n  function ut(e) {\n    return At.address.toHex(e);\n  }\n\n  var ct = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (b()(this, e), !t || !t instanceof At) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = Ge()(this), this.cache = {\n        contracts: {}\n      }, this.validator = new Qe(t);\n    }\n\n    var t, r, n, i, s, a, o, u, c, d, h, v, p, g, m, k, x;\n    return y()(e, [{\n      key: \"_parseToken\",\n      value: function value(e) {\n        return ot(ot({}, e), {}, {\n          name: this.tronWeb.toUtf8(e.name),\n          abbr: e.abbr && this.tronWeb.toUtf8(e.abbr),\n          description: e.description && this.tronWeb.toUtf8(e.description),\n          url: e.url && this.tronWeb.toUtf8(e.url)\n        });\n      }\n    }, {\n      key: \"getCurrentBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getCurrentBlock);\n        this.tronWeb.fullNode.request(\"wallet/getnowblock\").then(function (t) {\n          e(null, t);\n        })[\"catch\"](function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getConfirmedCurrentBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getConfirmedCurrentBlock);\n        this.tronWeb.solidityNode.request(\"walletsolidity/getnowblock\").then(function (t) {\n          e(null, t);\n        })[\"catch\"](function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Ke.isFunction(e) && (t = e, e = this.tronWeb.defaultBlock), t ? !1 === e ? t(\"No block identifier provided\") : (\"earliest\" == e && (e = 0), \"latest\" == e ? this.getCurrentBlock(t) : isNaN(e) && Ke.isHex(e) ? this.getBlockByHash(e, t) : void this.getBlockByNumber(e, t)) : this.injectPromise(this.getBlock, e);\n      }\n    }, {\n      key: \"getBlockByHash\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getBlockByHash, e);\n        this.tronWeb.fullNode.request(\"wallet/getblockbyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Block not found\");\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBlockByNumber\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !Ke.isInteger(e) || e < 0 ? t(\"Invalid block number provided\") : void this.tronWeb.fullNode.request(\"wallet/getblockbynum\", {\n          num: parseInt(e)\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Block not found\");\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getBlockByNumber, e);\n      }\n    }, {\n      key: \"getBlockTransactionCount\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (Ke.isFunction(e) && (t = e, e = this.tronWeb.defaultBlock), !t) return this.injectPromise(this.getBlockTransactionCount, e);\n        this.getBlock(e).then(function (e) {\n          var r = e.transactions;\n          t(null, (void 0 === r ? [] : r).length);\n        })[\"catch\"](function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getTransactionFromBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 ? arguments[1] : void 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Ke.isFunction(t) && (r = t, t = 0), Ke.isFunction(e) && (r = e, e = this.tronWeb.defaultBlock), !r) return this.injectPromise(this.getTransactionFromBlock, e, t);\n        this.getBlock(e).then(function (e) {\n          var n = e.transactions,\n              i = void 0 !== n && n;\n          i ? \"number\" == typeof t ? t >= 0 && t < i.length ? r(null, i[t]) : r(\"Invalid transaction index provided\") : r(null, i) : r(\"Transaction not found in block\");\n        })[\"catch\"](function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"getTransaction\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getTransaction, e);\n        this.tronWeb.fullNode.request(\"wallet/gettransactionbyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Transaction not found\");\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getConfirmedTransaction\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getConfirmedTransaction, e);\n        this.tronWeb.solidityNode.request(\"walletsolidity/gettransactionbyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Transaction not found\");\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getUnconfirmedTransactionInfo\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return this._getTransactionInfoById(e, {\n          confirmed: !1\n        }, t);\n      }\n    }, {\n      key: \"getTransactionInfo\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return this._getTransactionInfoById(e, {\n          confirmed: !0\n        }, t);\n      }\n    }, {\n      key: \"_getTransactionInfoById\",\n      value: function value(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (!r) return this.injectPromise(this._getTransactionInfoById, e, t);\n        this.tronWeb[t.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(t.confirmed ? \"solidity\" : \"\", \"/gettransactioninfobyid\"), {\n          value: e\n        }, \"post\").then(function (e) {\n          r(null, e);\n        })[\"catch\"](function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"getTransactionsToAddress\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        return Ke.isFunction(r) && (n = r, r = 0), Ke.isFunction(t) && (n = t, t = 30), n ? (e = this.tronWeb.address.toHex(e), this.getTransactionsRelated(e, \"to\", t, r, n)) : this.injectPromise(this.getTransactionsToAddress, e, t, r);\n      }\n    }, {\n      key: \"getTransactionsFromAddress\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        return Ke.isFunction(r) && (n = r, r = 0), Ke.isFunction(t) && (n = t, t = 30), n ? (e = this.tronWeb.address.toHex(e), this.getTransactionsRelated(e, \"from\", t, r, n)) : this.injectPromise(this.getTransactionsFromAddress, e, t, r);\n      }\n    }, {\n      key: \"getTransactionsRelated\",\n      value: (x = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = d.length > 0 && void 0 !== d[0] ? d[0] : this.tronWeb.defaultAddress.hex, r = d.length > 1 && void 0 !== d[1] ? d[1] : \"all\", n = d.length > 2 && void 0 !== d[2] ? d[2] : 30, i = d.length > 3 && void 0 !== d[3] ? d[3] : 0, s = d.length > 4 && void 0 !== d[4] && d[4], Ke.isFunction(i) && (s = i, i = 0), Ke.isFunction(n) && (s = n, n = 30), Ke.isFunction(r) && (s = r, r = \"all\"), Ke.isFunction(t) && (s = t, t = this.tronWeb.defaultAddress.hex), s) {\n                  e.next = 11;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.getTransactionsRelated, t, r, n, i));\n\n              case 11:\n                if ([\"to\", \"from\", \"all\"].includes(r)) {\n                  e.next = 13;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s('Invalid direction provided: Expected \"to\", \"from\" or \"all\"'));\n\n              case 13:\n                if (\"all\" != r) {\n                  e.next = 27;\n                  break;\n                }\n\n                return e.prev = 14, e.next = 17, Promise.all([this.getTransactionsRelated(t, \"from\", n, i), this.getTransactionsRelated(t, \"to\", n, i)]);\n\n              case 17:\n                return a = e.sent, o = Ye()(a, 2), u = o[0], c = o[1], e.abrupt(\"return\", s(null, [].concat(R()(u.map(function (e) {\n                  return e.direction = \"from\", e;\n                })), R()(c.map(function (e) {\n                  return e.direction = \"to\", e;\n                }))).sort(function (e, t) {\n                  return t.raw_data.timestamp - e.raw_data.timestamp;\n                })));\n\n              case 24:\n                return e.prev = 24, e.t0 = e[\"catch\"](14), e.abrupt(\"return\", s(e.t0));\n\n              case 27:\n                if (this.tronWeb.isAddress(t)) {\n                  e.next = 29;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Invalid address provided\"));\n\n              case 29:\n                if (!(!Ke.isInteger(n) || n < 0 || i && n < 1)) {\n                  e.next = 31;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Invalid limit provided\"));\n\n              case 31:\n                if (Ke.isInteger(i) && !(i < 0)) {\n                  e.next = 33;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Invalid offset provided\"));\n\n              case 33:\n                t = this.tronWeb.address.toHex(t), this.tronWeb.solidityNode.request(\"walletextension/gettransactions\".concat(r, \"this\"), {\n                  account: {\n                    address: t\n                  },\n                  offset: i,\n                  limit: n\n                }, \"post\").then(function (e) {\n                  var t = e.transaction;\n                  s(null, t);\n                })[\"catch\"](function (e) {\n                  return s(e);\n                });\n\n              case 35:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[14, 24]]);\n      })), function () {\n        return x.apply(this, arguments);\n      })\n    }, {\n      key: \"getAccount\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Ke.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.solidityNode.request(\"walletsolidity/getaccount\", {\n          address: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        })) : t(\"Invalid address provided\") : this.injectPromise(this.getAccount, e);\n      }\n    }, {\n      key: \"getAccountById\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getAccountById, e);\n        this.getAccountInfoById(e, {\n          confirmed: !0\n        }, t);\n      }\n    }, {\n      key: \"getAccountInfoById\",\n      value: function value(e, t, r) {\n        this.validator.notValid([{\n          name: \"accountId\",\n          type: \"hex\",\n          value: e\n        }, {\n          name: \"accountId\",\n          type: \"string\",\n          lte: 32,\n          gte: 8,\n          value: e\n        }], r) || (e.startsWith(\"0x\") && (e = e.slice(2)), this.tronWeb[t.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(t.confirmed ? \"solidity\" : \"\", \"/getaccountbyid\"), {\n          account_id: e\n        }, \"post\").then(function (e) {\n          r(null, e);\n        })[\"catch\"](function (e) {\n          return r(e);\n        }));\n      }\n    }, {\n      key: \"getBalance\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (Ke.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), !t) return this.injectPromise(this.getBalance, e);\n        this.getAccount(e).then(function (e) {\n          var r = e.balance;\n          t(null, void 0 === r ? 0 : r);\n        })[\"catch\"](function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getUnconfirmedAccount\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Ke.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.fullNode.request(\"wallet/getaccount\", {\n          address: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        })) : t(\"Invalid address provided\") : this.injectPromise(this.getUnconfirmedAccount, e);\n      }\n    }, {\n      key: \"getUnconfirmedAccountById\",\n      value: function value(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getUnconfirmedAccountById, e);\n        this.getAccountInfoById(e, {\n          confirmed: !1\n        }, t);\n      }\n    }, {\n      key: \"getUnconfirmedBalance\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (Ke.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), !t) return this.injectPromise(this.getUnconfirmedBalance, e);\n        this.getUnconfirmedAccount(e).then(function (e) {\n          var r = e.balance;\n          t(null, void 0 === r ? 0 : r);\n        })[\"catch\"](function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBandwidth\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Ke.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.fullNode.request(\"wallet/getaccountnet\", {\n          address: e\n        }, \"post\").then(function (e) {\n          var r = e.freeNetUsed,\n              n = void 0 === r ? 0 : r,\n              i = e.freeNetLimit,\n              s = void 0 === i ? 0 : i,\n              a = e.NetUsed,\n              o = void 0 === a ? 0 : a,\n              u = e.NetLimit;\n          t(null, s - n + ((void 0 === u ? 0 : u) - o));\n        })[\"catch\"](function (e) {\n          return t(e);\n        })) : t(\"Invalid address provided\") : this.injectPromise(this.getBandwidth, e);\n      }\n    }, {\n      key: \"getTokensIssuedByAddress\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Ke.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), r ? this.tronWeb.isAddress(t) ? (t = this.tronWeb.address.toHex(t), void this.tronWeb.fullNode.request(\"wallet/getassetissuebyaccount\", {\n          address: t\n        }, \"post\").then(function (t) {\n          var n = t.assetIssue,\n              i = void 0 !== n && n;\n          if (!i) return r(null, {});\n          var s = i.map(function (t) {\n            return e._parseToken(t);\n          }).reduce(function (e, t) {\n            return e[t.name] = t, e;\n          }, {});\n          r(null, s);\n        })[\"catch\"](function (e) {\n          return r(e);\n        })) : r(\"Invalid address provided\") : this.injectPromise(this.getTokensIssuedByAddress, t);\n      }\n    }, {\n      key: \"getTokenFromID\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? (Ke.isInteger(t) && (t = t.toString()), Ke.isString(t) && t.length ? void this.tronWeb.fullNode.request(\"wallet/getassetissuebyname\", {\n          value: this.tronWeb.fromUtf8(t)\n        }, \"post\").then(function (t) {\n          if (!t.name) return r(\"Token does not exist\");\n          r(null, e._parseToken(t));\n        })[\"catch\"](function (e) {\n          return r(e);\n        }) : r(\"Invalid token ID provided\")) : this.injectPromise(this.getTokenFromID, t);\n      }\n    }, {\n      key: \"listNodes\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!t) return this.injectPromise(this.listNodes);\n        this.tronWeb.fullNode.request(\"wallet/listnodes\").then(function (r) {\n          var n = r.nodes;\n          t(null, (void 0 === n ? [] : n).map(function (t) {\n            var r = t.address,\n                n = r.host,\n                i = r.port;\n            return \"\".concat(e.tronWeb.toUtf8(n), \":\").concat(i);\n          }));\n        })[\"catch\"](function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBlockRange\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return Ke.isFunction(t) && (r = t, t = 30), Ke.isFunction(e) && (r = e, e = 0), r ? !Ke.isInteger(e) || e < 0 ? r(\"Invalid start of range provided\") : !Ke.isInteger(t) || t <= e ? r(\"Invalid end of range provided\") : void this.tronWeb.fullNode.request(\"wallet/getblockbylimitnext\", {\n          startNum: parseInt(e),\n          endNum: parseInt(t) + 1\n        }, \"post\").then(function (e) {\n          var t = e.block;\n          r(null, void 0 === t ? [] : t);\n        })[\"catch\"](function (e) {\n          return r(e);\n        }) : this.injectPromise(this.getBlockRange, e, t);\n      }\n    }, {\n      key: \"listSuperRepresentatives\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listSuperRepresentatives);\n        this.tronWeb.fullNode.request(\"wallet/listwitnesses\").then(function (t) {\n          var r = t.witnesses;\n          e(null, void 0 === r ? [] : r);\n        })[\"catch\"](function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"listTokens\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return Ke.isFunction(r) && (n = r, r = 0), Ke.isFunction(t) && (n = t, t = 0), n ? !Ke.isInteger(t) || t < 0 || r && t < 1 ? n(\"Invalid limit provided\") : !Ke.isInteger(r) || r < 0 ? n(\"Invalid offset provided\") : t ? void this.tronWeb.fullNode.request(\"wallet/getpaginatedassetissuelist\", {\n          offset: parseInt(r),\n          limit: parseInt(t)\n        }, \"post\").then(function (t) {\n          var r = t.assetIssue;\n          n(null, (void 0 === r ? [] : r).map(function (t) {\n            return e._parseToken(t);\n          }));\n        })[\"catch\"](function (e) {\n          return n(e);\n        }) : this.tronWeb.fullNode.request(\"wallet/getassetissuelist\").then(function (t) {\n          var r = t.assetIssue;\n          n(null, (void 0 === r ? [] : r).map(function (t) {\n            return e._parseToken(t);\n          }));\n        })[\"catch\"](function (e) {\n          return n(e);\n        }) : this.injectPromise(this.listTokens, t, r);\n      }\n    }, {\n      key: \"timeUntilNextVoteCycle\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.timeUntilNextVoteCycle);\n        this.tronWeb.fullNode.request(\"wallet/getnextmaintenancetime\").then(function (t) {\n          var r = t.num,\n              n = void 0 === r ? -1 : r;\n          if (-1 == n) return e(\"Failed to get time until next vote cycle\");\n          e(null, Math.floor(n / 1e3));\n        })[\"catch\"](function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getContract\",\n      value: function value(e) {\n        var t = this,\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? this.tronWeb.isAddress(e) ? void (this.cache.contracts[e] ? r(null, this.cache.contracts[e]) : (e = this.tronWeb.address.toHex(e), this.tronWeb.fullNode.request(\"wallet/getcontract\", {\n          value: e\n        }).then(function (n) {\n          if (n.Error) return r(\"Contract does not exist\");\n          t.cache.contracts[e] = n, r(null, n);\n        })[\"catch\"](function (e) {\n          return r(e);\n        }))) : r(\"Invalid contract address provided\") : this.injectPromise(this.getContract, e);\n      }\n    }, {\n      key: \"verifyMessage\",\n      value: (k = f()(l.a.mark(function t() {\n        var r,\n            n,\n            i,\n            s,\n            a,\n            o = arguments;\n        return l.a.wrap(function (t) {\n          for (;;) {\n            switch (t.prev = t.next) {\n              case 0:\n                if (r = o.length > 0 && void 0 !== o[0] && o[0], n = o.length > 1 && void 0 !== o[1] && o[1], i = o.length > 2 && void 0 !== o[2] ? o[2] : this.tronWeb.defaultAddress.base58, s = !(o.length > 3 && void 0 !== o[3]) || o[3], a = o.length > 4 && void 0 !== o[4] && o[4], Ke.isFunction(i) && (a = i, i = this.tronWeb.defaultAddress.base58, s = !0), Ke.isFunction(s) && (a = s, s = !0), a) {\n                  t.next = 9;\n                  break;\n                }\n\n                return t.abrupt(\"return\", this.injectPromise(this.verifyMessage, r, n, i, s));\n\n              case 9:\n                if (Ke.isHex(r)) {\n                  t.next = 11;\n                  break;\n                }\n\n                return t.abrupt(\"return\", a(\"Expected hex message input\"));\n\n              case 11:\n                if (!e.verifySignature(r, i, n, s)) {\n                  t.next = 13;\n                  break;\n                }\n\n                return t.abrupt(\"return\", a(null, !0));\n\n              case 13:\n                a(\"Signature does not match\");\n\n              case 14:\n              case \"end\":\n                return t.stop();\n            }\n          }\n        }, t, this);\n      })), function () {\n        return k.apply(this, arguments);\n      })\n    }, {\n      key: \"sign\",\n      value: (m = f()(l.a.mark(function t() {\n        var r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (t) {\n          for (;;) {\n            switch (t.prev = t.next) {\n              case 0:\n                if (r = u.length > 0 && void 0 !== u[0] && u[0], n = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, i = !(u.length > 2 && void 0 !== u[2]) || u[2], s = u.length > 3 && void 0 !== u[3] && u[3], a = u.length > 4 && void 0 !== u[4] && u[4], Ke.isFunction(s) && (a = s, s = !1), Ke.isFunction(i) && (a = i, i = !0, s = !1), Ke.isFunction(n) && (a = n, n = this.tronWeb.defaultPrivateKey, i = !0, s = !1), a) {\n                  t.next = 10;\n                  break;\n                }\n\n                return t.abrupt(\"return\", this.injectPromise(this.sign, r, n, i, s));\n\n              case 10:\n                if (!Ke.isString(r)) {\n                  t.next = 21;\n                  break;\n                }\n\n                if (Ke.isHex(r)) {\n                  t.next = 13;\n                  break;\n                }\n\n                return t.abrupt(\"return\", a(\"Expected hex message input\"));\n\n              case 13:\n                return t.prev = 13, o = e.signString(r, n, i), t.abrupt(\"return\", a(null, o));\n\n              case 18:\n                t.prev = 18, t.t0 = t[\"catch\"](13), a(t.t0);\n\n              case 21:\n                if (Ke.isObject(r)) {\n                  t.next = 23;\n                  break;\n                }\n\n                return t.abrupt(\"return\", a(\"Invalid transaction provided\"));\n\n              case 23:\n                if (s || !r.signature) {\n                  t.next = 25;\n                  break;\n                }\n\n                return t.abrupt(\"return\", a(\"Transaction is already signed\"));\n\n              case 25:\n                if (t.prev = 25, s) {\n                  t.next = 30;\n                  break;\n                }\n\n                if (this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(n)).toLowerCase() === this.tronWeb.address.toHex(r.raw_data.contract[0].parameter.value.owner_address)) {\n                  t.next = 30;\n                  break;\n                }\n\n                return t.abrupt(\"return\", a(\"Private key does not match address in transaction\"));\n\n              case 30:\n                return t.abrupt(\"return\", a(null, Ke.crypto.signTransaction(n, r)));\n\n              case 33:\n                t.prev = 33, t.t1 = t[\"catch\"](25), a(t.t1);\n\n              case 36:\n              case \"end\":\n                return t.stop();\n            }\n          }\n        }, t, this, [[13, 18], [25, 33]]);\n      })), function () {\n        return m.apply(this, arguments);\n      })\n    }, {\n      key: \"multiSign\",\n      value: (g = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], i = u.length > 3 && void 0 !== u[3] && u[3], Ke.isFunction(n) && (i = n, n = 0), Ke.isFunction(r) && (i = r, r = this.tronWeb.defaultPrivateKey, n = 0), i) {\n                  e.next = 8;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.multiSign, t, r, n));\n\n              case 8:\n                if (Ke.isObject(t) && t.raw_data && t.raw_data.contract) {\n                  e.next = 10;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n              case 10:\n                if (t.raw_data.contract[0].Permission_id || !(n > 0)) {\n                  e.next = 30;\n                  break;\n                }\n\n                return t.raw_data.contract[0].Permission_id = n, s = this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(r)).toLowerCase(), e.next = 15, this.getSignWeight(t, n);\n\n              case 15:\n                if (\"PERMISSION_ERROR\" !== (a = e.sent).result.code) {\n                  e.next = 18;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(a.result.message));\n\n              case 18:\n                if (o = !1, a.permission.keys.map(function (e) {\n                  e.address === s && (o = !0);\n                }), o) {\n                  e.next = 22;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(r + \" has no permission to sign\"));\n\n              case 22:\n                if (!a.approved_list || -1 == a.approved_list.indexOf(s)) {\n                  e.next = 24;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(r + \" already sign transaction\"));\n\n              case 24:\n                if (!a.transaction || !a.transaction.transaction) {\n                  e.next = 29;\n                  break;\n                }\n\n                t = a.transaction.transaction, n > 0 && (t.raw_data.contract[0].Permission_id = n), e.next = 30;\n                break;\n\n              case 29:\n                return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n              case 30:\n                return e.prev = 30, e.abrupt(\"return\", i(null, Ke.crypto.signTransaction(r, t)));\n\n              case 34:\n                e.prev = 34, e.t0 = e[\"catch\"](30), i(e.t0);\n\n              case 37:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[30, 34]]);\n      })), function () {\n        return g.apply(this, arguments);\n      })\n    }, {\n      key: \"getApprovedList\",\n      value: (p = f()(l.a.mark(function e(t) {\n        var r,\n            n = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (r = n.length > 1 && void 0 !== n[1] && n[1]) {\n                  e.next = 3;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.getApprovedList, t));\n\n              case 3:\n                if (Ke.isObject(t)) {\n                  e.next = 5;\n                  break;\n                }\n\n                return e.abrupt(\"return\", r(\"Invalid transaction provided\"));\n\n              case 5:\n                this.tronWeb.fullNode.request(\"wallet/getapprovedlist\", t, \"post\").then(function (e) {\n                  r(null, e);\n                })[\"catch\"](function (e) {\n                  return r(e);\n                });\n\n              case 6:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e) {\n        return p.apply(this, arguments);\n      })\n    }, {\n      key: \"getSignWeight\",\n      value: (v = f()(l.a.mark(function e(t, r) {\n        var n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (n = i.length > 2 && void 0 !== i[2] && i[2], Ke.isFunction(r) && (n = r, r = void 0), n) {\n                  e.next = 4;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.getSignWeight, t, r));\n\n              case 4:\n                if (Ke.isObject(t) && t.raw_data && t.raw_data.contract) {\n                  e.next = 6;\n                  break;\n                }\n\n                return e.abrupt(\"return\", n(\"Invalid transaction provided\"));\n\n              case 6:\n                if (Ke.isInteger(r) ? t.raw_data.contract[0].Permission_id = parseInt(r) : \"number\" != typeof t.raw_data.contract[0].Permission_id && (t.raw_data.contract[0].Permission_id = 0), Ke.isObject(t)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\", n(\"Invalid transaction provided\"));\n\n              case 9:\n                this.tronWeb.fullNode.request(\"wallet/getsignweight\", t, \"post\").then(function (e) {\n                  n(null, e);\n                })[\"catch\"](function (e) {\n                  return n(e);\n                });\n\n              case 10:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t) {\n        return v.apply(this, arguments);\n      })\n    }, {\n      key: \"sendRawTransaction\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return Ke.isFunction(t) && (r = t, t = {}), r ? Ke.isObject(e) ? Ke.isObject(t) ? e.signature && Ke.isArray(e.signature) ? void this.tronWeb.fullNode.request(\"wallet/broadcasttransaction\", e, \"post\").then(function (t) {\n          t.result && (t.transaction = e), r(null, t);\n        })[\"catch\"](function (e) {\n          return r(e);\n        }) : r(\"Transaction is not signed\") : r(\"Invalid options provided\") : r(\"Invalid transaction provided\") : this.injectPromise(this.sendRawTransaction, e, t);\n      }\n    }, {\n      key: \"sendTransaction\",\n      value: (h = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = c.length > 0 && void 0 !== c[0] && c[0], r = c.length > 1 && void 0 !== c[1] && c[1], n = c.length > 2 && void 0 !== c[2] ? c[2] : {}, i = c.length > 3 && void 0 !== c[3] && c[3], Ke.isFunction(n) && (i = n, n = {}), \"string\" == typeof n && (n = {\n                  privateKey: n\n                }), i) {\n                  e.next = 8;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.sendTransaction, t, r, n));\n\n              case 8:\n                if (this.tronWeb.isAddress(t)) {\n                  e.next = 10;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Invalid recipient provided\"));\n\n              case 10:\n                if (Ke.isInteger(r) && !(r <= 0)) {\n                  e.next = 12;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Invalid amount provided\"));\n\n              case 12:\n                if ((n = ot({\n                  privateKey: this.tronWeb.defaultPrivateKey,\n                  address: this.tronWeb.defaultAddress.hex\n                }, n)).privateKey || n.address) {\n                  e.next = 15;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Function requires either a private key or address to be set\"));\n\n              case 15:\n                return e.prev = 15, s = n.privateKey ? this.tronWeb.address.fromPrivateKey(n.privateKey) : n.address, e.next = 19, this.tronWeb.transactionBuilder.sendTrx(t, r, s);\n\n              case 19:\n                return a = e.sent, e.next = 22, this.sign(a, n.privateKey || void 0);\n\n              case 22:\n                return o = e.sent, e.next = 25, this.sendRawTransaction(o);\n\n              case 25:\n                return u = e.sent, e.abrupt(\"return\", i(null, u));\n\n              case 29:\n                return e.prev = 29, e.t0 = e[\"catch\"](15), e.abrupt(\"return\", i(e.t0));\n\n              case 32:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[15, 29]]);\n      })), function () {\n        return h.apply(this, arguments);\n      })\n    }, {\n      key: \"sendToken\",\n      value: (d = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = d.length > 0 && void 0 !== d[0] && d[0], r = d.length > 1 && void 0 !== d[1] && d[1], n = d.length > 2 && void 0 !== d[2] && d[2], i = d.length > 3 && void 0 !== d[3] ? d[3] : {}, s = d.length > 4 && void 0 !== d[4] && d[4], Ke.isFunction(i) && (s = i, i = {}), \"string\" == typeof i && (i = {\n                  privateKey: i\n                }), s) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.sendToken, t, r, n, i));\n\n              case 9:\n                if (this.tronWeb.isAddress(t)) {\n                  e.next = 11;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Invalid recipient provided\"));\n\n              case 11:\n                if (Ke.isInteger(r) && !(r <= 0)) {\n                  e.next = 13;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Invalid amount provided\"));\n\n              case 13:\n                if (Ke.isInteger(n) && (n = n.toString()), Ke.isString(n)) {\n                  e.next = 16;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Invalid token ID provided\"));\n\n              case 16:\n                if ((i = ot({\n                  privateKey: this.tronWeb.defaultPrivateKey,\n                  address: this.tronWeb.defaultAddress.hex\n                }, i)).privateKey || i.address) {\n                  e.next = 19;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Function requires either a private key or address to be set\"));\n\n              case 19:\n                return e.prev = 19, a = i.privateKey ? this.tronWeb.address.fromPrivateKey(i.privateKey) : i.address, e.next = 23, this.tronWeb.transactionBuilder.sendToken(t, r, n, a);\n\n              case 23:\n                return o = e.sent, e.next = 26, this.sign(o, i.privateKey || void 0);\n\n              case 26:\n                return u = e.sent, e.next = 29, this.sendRawTransaction(u);\n\n              case 29:\n                return c = e.sent, e.abrupt(\"return\", s(null, c));\n\n              case 33:\n                return e.prev = 33, e.t0 = e[\"catch\"](19), e.abrupt(\"return\", s(e.t0));\n\n              case 36:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[19, 33]]);\n      })), function () {\n        return d.apply(this, arguments);\n      })\n    }, {\n      key: \"freezeBalance\",\n      value: (c = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u,\n            c,\n            d,\n            h = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = h.length > 0 && void 0 !== h[0] ? h[0] : 0, r = h.length > 1 && void 0 !== h[1] ? h[1] : 3, n = h.length > 2 && void 0 !== h[2] ? h[2] : \"BANDWIDTH\", i = h.length > 3 && void 0 !== h[3] ? h[3] : {}, s = h.length > 4 && void 0 !== h[4] ? h[4] : void 0, a = h.length > 5 && void 0 !== h[5] && h[5], Ke.isFunction(s) && (a = s, s = void 0), Ke.isFunction(r) && (a = r, r = 3), Ke.isFunction(n) && (a = n, n = \"BANDWIDTH\"), Ke.isFunction(i) && (a = i, i = {}), \"string\" == typeof i && (i = {\n                  privateKey: i\n                }), a) {\n                  e.next = 13;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.freezeBalance, t, r, n, i, s));\n\n              case 13:\n                if ([\"BANDWIDTH\", \"ENERGY\"].includes(n)) {\n                  e.next = 15;\n                  break;\n                }\n\n                return e.abrupt(\"return\", a('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'));\n\n              case 15:\n                if (Ke.isInteger(t) && !(t <= 0)) {\n                  e.next = 17;\n                  break;\n                }\n\n                return e.abrupt(\"return\", a(\"Invalid amount provided\"));\n\n              case 17:\n                if (Ke.isInteger(r) && !(r < 3)) {\n                  e.next = 19;\n                  break;\n                }\n\n                return e.abrupt(\"return\", a(\"Invalid duration provided, minimum of 3 days\"));\n\n              case 19:\n                if ((i = ot({\n                  privateKey: this.tronWeb.defaultPrivateKey,\n                  address: this.tronWeb.defaultAddress.hex\n                }, i)).privateKey || i.address) {\n                  e.next = 22;\n                  break;\n                }\n\n                return e.abrupt(\"return\", a(\"Function requires either a private key or address to be set\"));\n\n              case 22:\n                return e.prev = 22, o = i.privateKey ? this.tronWeb.address.fromPrivateKey(i.privateKey) : i.address, e.next = 26, this.tronWeb.transactionBuilder.freezeBalance(t, r, n, o, s);\n\n              case 26:\n                return u = e.sent, e.next = 29, this.sign(u, i.privateKey || void 0);\n\n              case 29:\n                return c = e.sent, e.next = 32, this.sendRawTransaction(c);\n\n              case 32:\n                return d = e.sent, e.abrupt(\"return\", a(null, d));\n\n              case 36:\n                return e.prev = 36, e.t0 = e[\"catch\"](22), e.abrupt(\"return\", a(e.t0));\n\n              case 39:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[22, 36]]);\n      })), function () {\n        return c.apply(this, arguments);\n      })\n    }, {\n      key: \"unfreezeBalance\",\n      value: (u = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = c.length > 0 && void 0 !== c[0] ? c[0] : \"BANDWIDTH\", r = c.length > 1 && void 0 !== c[1] ? c[1] : {}, n = c.length > 2 && void 0 !== c[2] ? c[2] : void 0, i = c.length > 3 && void 0 !== c[3] && c[3], Ke.isFunction(n) && (i = n, n = void 0), Ke.isFunction(t) && (i = t, t = \"BANDWIDTH\"), Ke.isFunction(r) && (i = r, r = {}), \"string\" == typeof r && (r = {\n                  privateKey: r\n                }), i) {\n                  e.next = 10;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.unfreezeBalance, t, r, n));\n\n              case 10:\n                if ([\"BANDWIDTH\", \"ENERGY\"].includes(t)) {\n                  e.next = 12;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'));\n\n              case 12:\n                if ((r = ot({\n                  privateKey: this.tronWeb.defaultPrivateKey,\n                  address: this.tronWeb.defaultAddress.hex\n                }, r)).privateKey || r.address) {\n                  e.next = 15;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Function requires either a private key or address to be set\"));\n\n              case 15:\n                return e.prev = 15, s = r.privateKey ? this.tronWeb.address.fromPrivateKey(r.privateKey) : r.address, e.next = 19, this.tronWeb.transactionBuilder.unfreezeBalance(t, s, n);\n\n              case 19:\n                return a = e.sent, e.next = 22, this.sign(a, r.privateKey || void 0);\n\n              case 22:\n                return o = e.sent, e.next = 25, this.sendRawTransaction(o);\n\n              case 25:\n                return u = e.sent, e.abrupt(\"return\", i(null, u));\n\n              case 29:\n                return e.prev = 29, e.t0 = e[\"catch\"](15), e.abrupt(\"return\", i(e.t0));\n\n              case 32:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[15, 29]]);\n      })), function () {\n        return u.apply(this, arguments);\n      })\n    }, {\n      key: \"updateAccount\",\n      value: (o = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : {}, n = u.length > 2 && void 0 !== u[2] && u[2], Ke.isFunction(r) && (n = r, r = {}), \"string\" == typeof r && (r = {\n                  privateKey: r\n                }), n) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.updateAccount, t, r));\n\n              case 7:\n                if (Ke.isString(t) && t.length) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\", n(\"Name must be a string\"));\n\n              case 9:\n                if ((r = ot({\n                  privateKey: this.tronWeb.defaultPrivateKey,\n                  address: this.tronWeb.defaultAddress.hex\n                }, r)).privateKey || r.address) {\n                  e.next = 12;\n                  break;\n                }\n\n                return e.abrupt(\"return\", n(\"Function requires either a private key or address to be set\"));\n\n              case 12:\n                return e.prev = 12, i = r.privateKey ? this.tronWeb.address.fromPrivateKey(r.privateKey) : r.address, e.next = 16, this.tronWeb.transactionBuilder.updateAccount(t, i);\n\n              case 16:\n                return s = e.sent, e.next = 19, this.sign(s, r.privateKey || void 0);\n\n              case 19:\n                return a = e.sent, e.next = 22, this.sendRawTransaction(a);\n\n              case 22:\n                return o = e.sent, e.abrupt(\"return\", n(null, o));\n\n              case 26:\n                return e.prev = 26, e.t0 = e[\"catch\"](12), e.abrupt(\"return\", n(e.t0));\n\n              case 29:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[12, 26]]);\n      })), function () {\n        return o.apply(this, arguments);\n      })\n    }, {\n      key: \"signMessage\",\n      value: function value() {\n        return this.sign.apply(this, arguments);\n      }\n    }, {\n      key: \"sendAsset\",\n      value: function value() {\n        return this.sendToken.apply(this, arguments);\n      }\n    }, {\n      key: \"send\",\n      value: function value() {\n        return this.sendTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"sendTrx\",\n      value: function value() {\n        return this.sendTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"broadcast\",\n      value: function value() {\n        return this.sendRawTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"signTransaction\",\n      value: function value() {\n        return this.sign.apply(this, arguments);\n      }\n    }, {\n      key: \"getProposal\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !Ke.isInteger(e) || e < 0 ? t(\"Invalid proposalID provided\") : void this.tronWeb.fullNode.request(\"wallet/getproposalbyid\", {\n          id: parseInt(e)\n        }, \"post\").then(function (e) {\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getProposal, e);\n      }\n    }, {\n      key: \"listProposals\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listProposals);\n        this.tronWeb.fullNode.request(\"wallet/listproposals\", {}, \"post\").then(function (t) {\n          var r = t.proposals;\n          e(null, void 0 === r ? [] : r);\n        })[\"catch\"](function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getChainParameters\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getChainParameters);\n        this.tronWeb.fullNode.request(\"wallet/getchainparameters\", {}, \"post\").then(function (t) {\n          var r = t.chainParameter;\n          e(null, void 0 === r ? [] : r);\n        })[\"catch\"](function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getAccountResources\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? this.tronWeb.isAddress(e) ? void this.tronWeb.fullNode.request(\"wallet/getaccountresource\", {\n          address: this.tronWeb.address.toHex(e)\n        }, \"post\").then(function (e) {\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        }) : t(\"Invalid address provided\") : this.injectPromise(this.getAccountResources, e);\n      }\n    }, {\n      key: \"getExchangeByID\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !Ke.isInteger(e) || e < 0 ? t(\"Invalid exchangeID provided\") : void this.tronWeb.fullNode.request(\"wallet/getexchangebyid\", {\n          id: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        })[\"catch\"](function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getExchangeByID, e);\n      }\n    }, {\n      key: \"listExchanges\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listExchanges);\n        this.tronWeb.fullNode.request(\"wallet/listexchanges\", {}, \"post\").then(function (t) {\n          var r = t.exchanges;\n          e(null, void 0 === r ? [] : r);\n        }, \"post\")[\"catch\"](function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"listExchangesPaginated\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Ke.isFunction(t) && (r = t, t = 0), Ke.isFunction(e) && (r = e, e = 10), !r) return this.injectPromise(this.listExchangesPaginated, e, t);\n        this.tronWeb.fullNode.request(\"wallet/getpaginatedexchangelist\", {\n          limit: e,\n          offset: t\n        }, \"post\").then(function (e) {\n          var t = e.exchanges;\n          r(null, void 0 === t ? [] : t);\n        })[\"catch\"](function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"getNodeInfo\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getNodeInfo);\n        this.tronWeb.fullNode.request(\"wallet/getnodeinfo\", {}, \"post\").then(function (t) {\n          e(null, t);\n        }, \"post\")[\"catch\"](function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getTokenListByName\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? (Ke.isInteger(t) && (t = t.toString()), Ke.isString(t) && t.length ? void this.tronWeb.fullNode.request(\"wallet/getassetissuelistbyname\", {\n          value: this.tronWeb.fromUtf8(t)\n        }, \"post\").then(function (t) {\n          if (Array.isArray(t.assetIssue)) r(null, t.assetIssue.map(function (t) {\n            return e._parseToken(t);\n          }));else if (!t.name) return r(\"Token does not exist\");\n          r(null, e._parseToken(t));\n        })[\"catch\"](function (e) {\n          return r(e);\n        }) : r(\"Invalid token ID provided\")) : this.injectPromise(this.getTokenListByName, t);\n      }\n    }, {\n      key: \"getTokenByID\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? (Ke.isInteger(t) && (t = t.toString()), Ke.isString(t) && t.length ? void this.tronWeb.fullNode.request(\"wallet/getassetissuebyid\", {\n          value: t\n        }, \"post\").then(function (t) {\n          if (!t.name) return r(\"Token does not exist\");\n          r(null, e._parseToken(t));\n        })[\"catch\"](function (e) {\n          return r(e);\n        }) : r(\"Invalid token ID provided\")) : this.injectPromise(this.getTokenByID, t);\n      }\n    }, {\n      key: \"getReward\",\n      value: (a = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !0, e.abrupt(\"return\", this._getReward(t, r, n));\n\n              case 4:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e) {\n        return a.apply(this, arguments);\n      })\n    }, {\n      key: \"getUnconfirmedReward\",\n      value: (s = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !1, e.abrupt(\"return\", this._getReward(t, r, n));\n\n              case 4:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e) {\n        return s.apply(this, arguments);\n      })\n    }, {\n      key: \"getBrokerage\",\n      value: (i = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !0, e.abrupt(\"return\", this._getBrokerage(t, r, n));\n\n              case 4:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e) {\n        return i.apply(this, arguments);\n      })\n    }, {\n      key: \"getUnconfirmedBrokerage\",\n      value: (n = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !1, e.abrupt(\"return\", this._getBrokerage(t, r, n));\n\n              case 4:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e) {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"_getReward\",\n      value: (r = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = s.length > 0 && void 0 !== s[0] ? s[0] : this.tronWeb.defaultAddress.hex, r = s.length > 1 ? s[1] : void 0, n = s.length > 2 && void 0 !== s[2] && s[2], Ke.isFunction(r) && (n = r, r = {}), Ke.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Ke.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), n) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this._getReward, t, r));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"origin\",\n                  type: \"address\",\n                  value: t\n                }], n)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                i = {\n                  address: ut(t)\n                }, this.tronWeb[r.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(r.confirmed ? \"solidity\" : \"\", \"/getReward\"), i, \"post\").then(function () {\n                  var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                  if (void 0 === e.reward) return n(\"Not found.\");\n                  n(null, e.reward);\n                })[\"catch\"](function (e) {\n                  return n(e);\n                });\n\n              case 11:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function () {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"_getBrokerage\",\n      value: (t = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = s.length > 0 && void 0 !== s[0] ? s[0] : this.tronWeb.defaultAddress.hex, r = s.length > 1 ? s[1] : void 0, n = s.length > 2 && void 0 !== s[2] && s[2], Ke.isFunction(r) && (n = r, r = {}), Ke.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Ke.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), n) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this._getBrokerage, t, r));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"origin\",\n                  type: \"address\",\n                  value: t\n                }], n)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                i = {\n                  address: ut(t)\n                }, this.tronWeb[r.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(r.confirmed ? \"solidity\" : \"\", \"/getBrokerage\"), i, \"post\").then(function () {\n                  var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                  if (void 0 === e.brokerage) return n(\"Not found.\");\n                  n(null, e.brokerage);\n                })[\"catch\"](function (e) {\n                  return n(e);\n                });\n\n              case 11:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function () {\n        return t.apply(this, arguments);\n      })\n    }], [{\n      key: \"verifySignature\",\n      value: function value(e, t, r) {\n        var n = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];\n        e = e.replace(/^0x/, \"\"), r = r.replace(/^0x/, \"\");\n        var i = [].concat(R()(ae(n ? \"\u0019TRON Signed Message:\\n32\" : \"\u0019Ethereum Signed Message:\\n32\")), R()(Ke.code.hexStr2byteArray(e))),\n            s = ie(i),\n            a = oe(s, {\n          recoveryParam: \"1c\" == r.substring(128, 130) ? 1 : 0,\n          r: \"0x\" + r.substring(0, 64),\n          s: \"0x\" + r.substring(64, 128)\n        }),\n            o = \"41\" + a.substr(2),\n            u = At.address.fromHex(o);\n        return u == At.address.fromHex(t);\n      }\n    }, {\n      key: \"signString\",\n      value: function value(e, t) {\n        var r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];\n        e = e.replace(/^0x/, \"\");\n        var n = {\n          toHexString: function toHexString() {\n            return \"0x\" + t;\n          },\n          value: t\n        },\n            i = new ue(n),\n            s = [].concat(R()(ae(r ? \"\u0019TRON Signed Message:\\n32\" : \"\u0019Ethereum Signed Message:\\n32\")), R()(Ke.code.hexStr2byteArray(e))),\n            a = ie(s),\n            o = i.signDigest(a),\n            u = [\"0x\", o.r.substring(2), o.s.substring(2), Number(o.v).toString(16)].join(\"\");\n        return u;\n      }\n    }]), e;\n  }();\n\n  function dt(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function lt(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? dt(Object(r), !0).forEach(function (t) {\n        N()(e, t, r[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : dt(Object(r)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n      });\n    }\n\n    return e;\n  }\n\n  var ht = function ht(e) {\n    return e.map(function (e) {\n      return e.type;\n    });\n  },\n      ft = function ft(e, t) {\n    var r = e.map(function (e) {\n      return e.name;\n    }).filter(function (e) {\n      return !!e;\n    }),\n        n = e.map(function (e) {\n      return e.type;\n    });\n    return Ke.abi.decodeParams(r, n, t);\n  },\n      vt = function () {\n    function e(t, r) {\n      b()(this, e), this.tronWeb = t.tronWeb, this.contract = t, this.abi = r, this.name = r.name || (r.name = r.type), this.inputs = r.inputs || [], this.outputs = r.outputs || [], this.functionSelector = function (e) {\n        return e.name + \"(\" + ht(e.inputs || []).join(\",\") + \")\";\n      }(r), this.signature = this.tronWeb.sha3(this.functionSelector, !1).slice(0, 8), this.injectPromise = Ge()(this), this.defaultOptions = {\n        feeLimit: this.tronWeb.feeLimit,\n        callValue: 0,\n        userFeePercentage: 100,\n        shouldPollResponse: !1\n      };\n    }\n\n    var t, r, n;\n    return y()(e, [{\n      key: \"decodeInput\",\n      value: function value(e) {\n        return ft(this.inputs, \"0x\" + e);\n      }\n    }, {\n      key: \"onMethod\",\n      value: function value() {\n        for (var e = this, t = arguments.length, r = new Array(t), n = 0; n < t; n++) {\n          r[n] = arguments[n];\n        }\n\n        var i = ht(this.inputs);\n        return r.forEach(function (t, n) {\n          \"address\" == i[n] && (r[n] = e.tronWeb.address.toHex(t).replace(V, \"0x\")), \"address[]\" == i[n] && (r[n] = r[n].map(function (t) {\n            return e.tronWeb.address.toHex(t).replace(V, \"0x\");\n          }));\n        }), {\n          call: function call() {\n            for (var t = arguments.length, n = new Array(t), s = 0; s < t; s++) {\n              n[s] = arguments[s];\n            }\n\n            return e._call.apply(e, [i, r].concat(n));\n          },\n          send: function send() {\n            for (var t = arguments.length, n = new Array(t), s = 0; s < t; s++) {\n              n[s] = arguments[s];\n            }\n\n            return e._send.apply(e, [i, r].concat(n));\n          },\n          watch: function watch() {\n            return e._watch.apply(e, arguments);\n          }\n        };\n      }\n    }, {\n      key: \"_call\",\n      value: (n = f()(l.a.mark(function e(t, r) {\n        var n,\n            i,\n            s,\n            a,\n            o = this,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (n = u.length > 2 && void 0 !== u[2] ? u[2] : {}, i = u.length > 3 && void 0 !== u[3] && u[3], Ke.isFunction(n) && (i = n, n = {}), i) {\n                  e.next = 5;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this._call, t, r, n));\n\n              case 5:\n                if (t.length === r.length) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Invalid argument count provided\"));\n\n              case 7:\n                if (this.contract.address) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Smart contract is missing address\"));\n\n              case 9:\n                if (this.contract.deployed) {\n                  e.next = 11;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Calling smart contracts requires you to load the contract first\"));\n\n              case 11:\n                if (s = this.abi.stateMutability, [\"pure\", \"view\"].includes(s.toLowerCase())) {\n                  e.next = 14;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i('Methods with state mutability \"'.concat(s, '\" must use send()')));\n\n              case 14:\n                n = lt(lt({}, this.defaultOptions), {}, {\n                  from: this.tronWeb.defaultAddress.hex\n                }, n), a = r.map(function (e, r) {\n                  return {\n                    type: t[r],\n                    value: e\n                  };\n                }), this.tronWeb.transactionBuilder.triggerSmartContract(this.contract.address, this.functionSelector, n, a, !!n.from && this.tronWeb.address.toHex(n.from), function (e, t) {\n                  if (e) return i(e);\n                  if (!Ke.hasProperty(t, \"constant_result\")) return i(\"Failed to execute\");\n\n                  try {\n                    var r = t.constant_result[0].length;\n\n                    if (0 === r || r % 64 == 8) {\n                      var n = \"The call has been reverted or has thrown an error.\";\n\n                      if (0 !== r) {\n                        n += \" Error message: \";\n\n                        for (var s = \"\", a = t.constant_result[0].substring(8), u = 0; u < r - 8; u += 64) {\n                          s += o.tronWeb.toUtf8(a.substring(u, u + 64));\n                        }\n\n                        n += s.replace(/(\\u0000|\\u000b|\\f)+/g, \" \").replace(/ +/g, \" \").replace(/\\s+$/g, \"\");\n                      }\n\n                      return i(n);\n                    }\n\n                    var c = ft(o.outputs, \"0x\" + t.constant_result[0]);\n                    return 1 === c.length && (c = c[0]), i(null, c);\n                  } catch (e) {\n                    return i(e);\n                  }\n                });\n\n              case 17:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t) {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"_send\",\n      value: (r = f()(l.a.mark(function e(t, r) {\n        var n,\n            i,\n            s,\n            a,\n            o,\n            u,\n            c,\n            d,\n            h,\n            v,\n            p,\n            g = this,\n            b = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (n = b.length > 2 && void 0 !== b[2] ? b[2] : {}, i = b.length > 3 && void 0 !== b[3] ? b[3] : this.tronWeb.defaultPrivateKey, s = b.length > 4 && void 0 !== b[4] && b[4], Ke.isFunction(i) && (s = i, i = this.tronWeb.defaultPrivateKey), Ke.isFunction(n) && (s = n, n = {}), s) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this._send, t, r, n, i));\n\n              case 7:\n                if (t.length === r.length) {\n                  e.next = 9;\n                  break;\n                }\n\n                throw new Error(\"Invalid argument count provided\");\n\n              case 9:\n                if (this.contract.address) {\n                  e.next = 11;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Smart contract is missing address\"));\n\n              case 11:\n                if (this.contract.deployed) {\n                  e.next = 13;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Calling smart contracts requires you to load the contract first\"));\n\n              case 13:\n                if (a = this.abi.stateMutability, ![\"pure\", \"view\"].includes(a.toLowerCase())) {\n                  e.next = 16;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s('Methods with state mutability \"'.concat(a, '\" must use call()')));\n\n              case 16:\n                return [\"payable\"].includes(a.toLowerCase()) || (n.callValue = 0), n = lt(lt({}, this.defaultOptions), {}, {\n                  from: this.tronWeb.defaultAddress.hex\n                }, n), o = r.map(function (e, r) {\n                  return {\n                    type: t[r],\n                    value: e\n                  };\n                }), e.prev = 19, u = i ? this.tronWeb.address.fromPrivateKey(i) : this.tronWeb.defaultAddress.base58, e.next = 23, this.tronWeb.transactionBuilder.triggerSmartContract(this.contract.address, this.functionSelector, n, o, this.tronWeb.address.toHex(u));\n\n              case 23:\n                if ((c = e.sent).result && c.result.result) {\n                  e.next = 26;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Unknown error: \" + JSON.stringify(c, null, 2)));\n\n              case 26:\n                return e.next = 28, this.tronWeb.trx.sign(c.transaction, i);\n\n              case 28:\n                if ((d = e.sent).signature) {\n                  e.next = 33;\n                  break;\n                }\n\n                if (i) {\n                  e.next = 32;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Transaction was not signed properly\"));\n\n              case 32:\n                return e.abrupt(\"return\", s(\"Invalid private key provided\"));\n\n              case 33:\n                return e.next = 35, this.tronWeb.trx.sendRawTransaction(d);\n\n              case 35:\n                if (!(h = e.sent).code) {\n                  e.next = 40;\n                  break;\n                }\n\n                return v = {\n                  error: h.code,\n                  message: h.code\n                }, h.message && (v.message = this.tronWeb.toUtf8(h.message)), e.abrupt(\"return\", s(v));\n\n              case 40:\n                if (n.shouldPollResponse) {\n                  e.next = 42;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(null, d.txID));\n\n              case 42:\n                (p = function () {\n                  var e = f()(l.a.mark(function e() {\n                    var t,\n                        r,\n                        i,\n                        a = arguments;\n                    return l.a.wrap(function (e) {\n                      for (;;) {\n                        switch (e.prev = e.next) {\n                          case 0:\n                            if (20 !== (t = a.length > 0 && void 0 !== a[0] ? a[0] : 0)) {\n                              e.next = 3;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", s({\n                              error: \"Cannot find result in solidity node\",\n                              transaction: d\n                            }));\n\n                          case 3:\n                            return e.next = 5, g.tronWeb.trx.getTransactionInfo(d.txID);\n\n                          case 5:\n                            if (r = e.sent, Object.keys(r).length) {\n                              e.next = 8;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", setTimeout(function () {\n                              p(t + 1);\n                            }, 3e3));\n\n                          case 8:\n                            if (!r.result || \"FAILED\" !== r.result) {\n                              e.next = 10;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", s({\n                              error: g.tronWeb.toUtf8(r.resMessage),\n                              transaction: d,\n                              output: r\n                            }));\n\n                          case 10:\n                            if (Ke.hasProperty(r, \"contractResult\")) {\n                              e.next = 12;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", s({\n                              error: \"Failed to execute: \" + JSON.stringify(r, null, 2),\n                              transaction: d,\n                              output: r\n                            }));\n\n                          case 12:\n                            if (!n.rawResponse) {\n                              e.next = 14;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", s(null, r));\n\n                          case 14:\n                            if (1 === (i = ft(g.outputs, \"0x\" + r.contractResult[0])).length && (i = i[0]), !n.keepTxID) {\n                              e.next = 18;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", s(null, [d.txID, i]));\n\n                          case 18:\n                            return e.abrupt(\"return\", s(null, i));\n\n                          case 19:\n                          case \"end\":\n                            return e.stop();\n                        }\n                      }\n                    }, e);\n                  }));\n                  return function () {\n                    return e.apply(this, arguments);\n                  };\n                }())(), e.next = 49;\n                break;\n\n              case 46:\n                return e.prev = 46, e.t0 = e[\"catch\"](19), e.abrupt(\"return\", s(e.t0));\n\n              case 49:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[19, 46]]);\n      })), function (e, t) {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"_watch\",\n      value: (t = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u = this,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = c.length > 0 && void 0 !== c[0] ? c[0] : {}, r = c.length > 1 && void 0 !== c[1] && c[1], Ke.isFunction(t) && (r = t, t = {}), Ke.isFunction(r)) {\n                  e.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Expected callback to be provided\");\n\n              case 5:\n                if (this.contract.address) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", r(\"Smart contract is missing address\"));\n\n              case 7:\n                if (this.abi.type && /event/i.test(this.abi.type)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\", r(\"Invalid method type for event watching\"));\n\n              case 9:\n                if (this.tronWeb.eventServer) {\n                  e.next = 11;\n                  break;\n                }\n\n                return e.abrupt(\"return\", r(\"No event server configured\"));\n\n              case 11:\n                return n = !1, i = !1, s = Date.now() - 1e3, a = function () {\n                  var e = f()(l.a.mark(function e() {\n                    var r, n, a, o, c, d;\n                    return l.a.wrap(function (e) {\n                      for (;;) {\n                        switch (e.prev = e.next) {\n                          case 0:\n                            return e.prev = 0, r = {\n                              since: s,\n                              eventName: u.name,\n                              sort: \"block_timestamp\",\n                              blockNumber: \"latest\",\n                              filters: t.filters\n                            }, t.resourceNode && (/full/i.test(t.resourceNode) ? r.onlyUnconfirmed = !0 : r.onlyConfirmed = !0), e.next = 5, u.tronWeb.event.getEventsByContractAddress(u.contract.address, r);\n\n                          case 5:\n                            return n = e.sent, a = n.sort(function (e, t) {\n                              return t.block - e.block;\n                            }), o = Ye()(a, 1), c = o[0], d = n.filter(function (e, r) {\n                              return !(t.resourceNode && e.resourceNode && t.resourceNode.toLowerCase() !== e.resourceNode.toLowerCase() || n.slice(0, r).some(function (t) {\n                                return JSON.stringify(t) == JSON.stringify(e);\n                              }) || i && !(e.block > i));\n                            }), c && (i = c.block), e.abrupt(\"return\", d);\n\n                          case 12:\n                            return e.prev = 12, e.t0 = e[\"catch\"](0), e.abrupt(\"return\", Promise.reject(e.t0));\n\n                          case 15:\n                          case \"end\":\n                            return e.stop();\n                        }\n                      }\n                    }, e, null, [[0, 12]]);\n                  }));\n                  return function () {\n                    return e.apply(this, arguments);\n                  };\n                }(), o = function o() {\n                  n && clearInterval(n), n = setInterval(function () {\n                    a().then(function (e) {\n                      return e.forEach(function (e) {\n                        r(null, Ke.parseEvent(e, u.abi));\n                      });\n                    })[\"catch\"](function (e) {\n                      return r(e);\n                    });\n                  }, 3e3);\n                }, e.next = 18, a();\n\n              case 18:\n                return o(), e.abrupt(\"return\", {\n                  start: o,\n                  stop: function stop() {\n                    n && (clearInterval(n), n = !1);\n                  }\n                });\n\n              case 20:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function () {\n        return t.apply(this, arguments);\n      })\n    }]), e;\n  }(),\n      pt = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n          r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],\n          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n      if (b()(this, e), !t || !t instanceof At) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = Ge()(this), this.address = n, this.abi = r, this.eventListener = !1, this.bytecode = !1, this.deployed = !1, this.lastBlock = !1, this.methods = {}, this.methodInstances = {}, this.props = [], this.tronWeb.isAddress(n) ? this.deployed = !0 : this.address = !1, this.loadAbi(r);\n    }\n\n    var t, r, n, i;\n    return y()(e, [{\n      key: \"_getEvents\",\n      value: (i = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o = this,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return t = u.length > 0 && void 0 !== u[0] ? u[0] : {}, e.next = 3, this.tronWeb.event.getEventsByContractAddress(this.address, t);\n\n              case 3:\n                return r = e.sent, n = r.sort(function (e, t) {\n                  return t.block - e.block;\n                }), i = Ye()(n, 1), s = i[0], a = r.filter(function (e, n) {\n                  return !(t.resourceNode && e.resourceNode && t.resourceNode.toLowerCase() !== e.resourceNode.toLowerCase() || r.slice(0, n).some(function (t) {\n                    return JSON.stringify(t) == JSON.stringify(e);\n                  }) || o.lastBlock && !(e.block > o.lastBlock));\n                }), s && (this.lastBlock = s.block), e.abrupt(\"return\", a);\n\n              case 8:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function () {\n        return i.apply(this, arguments);\n      })\n    }, {\n      key: \"_startEventListener\",\n      value: (n = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n = this,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = i.length > 0 && void 0 !== i[0] ? i[0] : {}, r = i.length > 1 ? i[1] : void 0, Ke.isFunction(t) && (r = t, t = {}), this.eventListener && clearInterval(this.eventListener), this.tronWeb.eventServer) {\n                  e.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Event server is not configured\");\n\n              case 6:\n                if (this.address) {\n                  e.next = 8;\n                  break;\n                }\n\n                throw new Error(\"Contract is not configured with an address\");\n\n              case 8:\n                return this.eventCallback = r, e.next = 11, this._getEvents(t);\n\n              case 11:\n                this.eventListener = setInterval(function () {\n                  n._getEvents(t).then(function (e) {\n                    return e.forEach(function (e) {\n                      n.eventCallback && n.eventCallback(e);\n                    });\n                  })[\"catch\"](function (e) {\n                    console.error(\"Failed to get event list\", e);\n                  });\n                }, 3e3);\n\n              case 12:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function () {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"_stopEventListener\",\n      value: function value() {\n        this.eventListener && (clearInterval(this.eventListener), this.eventListener = !1, this.eventCallback = !1);\n      }\n    }, {\n      key: \"hasProperty\",\n      value: function value(e) {\n        return this.hasOwnProperty(e) || this.__proto__.hasOwnProperty(e);\n      }\n    }, {\n      key: \"loadAbi\",\n      value: function value(e) {\n        var t = this;\n        this.abi = e, this.methods = {}, this.props.forEach(function (e) {\n          return delete t[e];\n        }), e.forEach(function (e) {\n          if (e.type && !/constructor/i.test(e.type)) {\n            var r = new vt(t, e),\n                n = r.onMethod.bind(r),\n                i = r.name,\n                s = r.functionSelector,\n                a = r.signature;\n            t.methods[i] = n, t.methods[s] = n, t.methods[a] = n, t.methodInstances[i] = r, t.methodInstances[s] = r, t.methodInstances[a] = r, t.hasProperty(i) || (t[i] = n, t.props.push(i)), t.hasProperty(s) || (t[s] = n, t.props.push(s)), t.hasProperty(a) || (t[a] = n, t.props.push(a));\n          }\n        });\n      }\n    }, {\n      key: \"decodeInput\",\n      value: function value(e) {\n        var t = e.substring(0, 8),\n            r = e.substring(8);\n        if (!this.methodInstances[t]) throw new Error(\"Contract method \" + t + \" not found\");\n        return {\n          name: this.methodInstances[t].name,\n          params: this.methodInstances[t].decodeInput(r)\n        };\n      }\n    }, {\n      key: \"new\",\n      value: (r = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (r = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], Ke.isFunction(r) && (n = r, r = this.tronWeb.defaultPrivateKey), n) {\n                  e.next = 5;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this[\"new\"], t, r));\n\n              case 5:\n                return e.prev = 5, i = this.tronWeb.address.fromPrivateKey(r), e.next = 9, this.tronWeb.transactionBuilder.createSmartContract(t, i);\n\n              case 9:\n                return s = e.sent, e.next = 12, this.tronWeb.trx.sign(s, r);\n\n              case 12:\n                return a = e.sent, e.next = 15, this.tronWeb.trx.sendRawTransaction(a);\n\n              case 15:\n                if (!(o = e.sent).code) {\n                  e.next = 18;\n                  break;\n                }\n\n                return e.abrupt(\"return\", n({\n                  error: o.code,\n                  message: this.tronWeb.toUtf8(o.message)\n                }));\n\n              case 18:\n                return e.next = 20, Ke.sleep(3e3);\n\n              case 20:\n                return e.abrupt(\"return\", this.at(a.contract_address, n));\n\n              case 23:\n                return e.prev = 23, e.t0 = e[\"catch\"](5), e.abrupt(\"return\", n(e.t0));\n\n              case 26:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[5, 23]]);\n      })), function (e) {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"at\",\n      value: (t = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (r = i.length > 1 && void 0 !== i[1] && i[1]) {\n                  e.next = 3;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.at, t));\n\n              case 3:\n                return e.prev = 3, e.next = 6, this.tronWeb.trx.getContract(t);\n\n              case 6:\n                if ((n = e.sent).contract_address) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\", r(\"Unknown error: \" + JSON.stringify(n, null, 2)));\n\n              case 9:\n                return this.address = n.contract_address, this.bytecode = n.bytecode, this.deployed = !0, this.loadAbi(n.abi && n.abi.entrys ? n.abi.entrys : []), e.abrupt(\"return\", r(null, this));\n\n              case 16:\n                if (e.prev = 16, e.t0 = e[\"catch\"](3), !e.t0.toString().includes(\"does not exist\")) {\n                  e.next = 20;\n                  break;\n                }\n\n                return e.abrupt(\"return\", r(\"Contract has not been deployed on the network\"));\n\n              case 20:\n                return e.abrupt(\"return\", r(e.t0));\n\n              case 21:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[3, 16]]);\n      })), function (e) {\n        return t.apply(this, arguments);\n      })\n    }, {\n      key: \"events\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (Ke.isFunction(e) && (t = e, e = {}), !Ke.isFunction(t)) throw new Error(\"Callback function expected\");\n        var r = this;\n        return {\n          start: function start() {\n            var n = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n            return n ? (r._startEventListener(e, t).then(function () {\n              n();\n            })[\"catch\"](function (e) {\n              n(e);\n            }), this) : (r._startEventListener(e, t), this);\n          },\n          stop: function stop() {\n            r._stopEventListener();\n          }\n        };\n      }\n    }]), e;\n  }(),\n      gt = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n          r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n      if (b()(this, e), !t || !t instanceof At) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.pluginNoOverride = [\"register\"], this.disablePlugins = r.disablePlugins;\n    }\n\n    return y()(e, [{\n      key: \"register\",\n      value: function value(e, t) {\n        var r = {\n          requires: \"0.0.0\",\n          components: {}\n        },\n            n = {\n          libs: [],\n          plugged: [],\n          skipped: []\n        };\n        if (this.disablePlugins) return n.error = \"This instance of TronWeb has plugins disabled.\", n;\n        var i = new e(this.tronWeb);\n        if (Ke.isFunction(i.pluginInterface) && (r = i.pluginInterface(t)), !ze.a.satisfies(At.version, r.requires)) throw new Error(\"The plugin is not compatible with this version of TronWeb\");\n\n        if (r.fullClass) {\n          var s = i.constructor.name,\n              a = s.substring(0, 1).toLowerCase() + s.substring(1);\n          s !== a && (At[s] = e, this.tronWeb[a] = i, n.libs.push(s));\n        } else for (var o in r.components) {\n          if (this.tronWeb.hasOwnProperty(o)) {\n            var u = r.components[o],\n                c = this.tronWeb[o].pluginNoOverride || [];\n\n            for (var d in u) {\n              \"constructor\" === d || this.tronWeb[o][d] && (c.includes(d) || /^_/.test(d)) ? n.skipped.push(d) : (this.tronWeb[o][d] = u[d].bind(this.tronWeb[o]), n.plugged.push(d));\n            }\n          }\n        }\n\n        return n;\n      }\n    }]), e;\n  }(),\n      bt = r(21),\n      mt = r.n(bt),\n      yt = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (b()(this, e), !(t && t instanceof At)) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = Ge()(this);\n    }\n\n    return y()(e, [{\n      key: \"setServer\",\n      value: function value() {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"healthcheck\";\n        if (!t) return this.tronWeb.eventServer = !1;\n        if (Ke.isString(t) && (t = new Re.HttpProvider(t)), !this.tronWeb.isValidProvider(t)) throw new Error(\"Invalid event server provided\");\n        this.tronWeb.eventServer = t, this.tronWeb.eventServer.isConnected = function () {\n          return e.tronWeb.eventServer.request(r).then(function () {\n            return !0;\n          })[\"catch\"](function () {\n            return !1;\n          });\n        };\n      }\n    }, {\n      key: \"getEventsByContractAddress\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            n = Object.assign({\n          sinceTimestamp: 0,\n          eventName: !1,\n          blockNumber: !1,\n          size: 20,\n          page: 1\n        }, t),\n            i = n.sinceTimestamp,\n            s = n.since,\n            a = n.fromTimestamp,\n            o = n.eventName,\n            u = n.blockNumber,\n            c = n.size,\n            d = n.page,\n            l = n.onlyConfirmed,\n            h = n.onlyUnconfirmed,\n            f = n.previousLastEventFingerprint,\n            v = n.previousFingerprint,\n            g = n.fingerprint,\n            b = n.rawResponse,\n            m = n.sort,\n            y = n.filters;\n        if (!r) return this.injectPromise(this.getEventsByContractAddress, e, t);\n        if (a = a || i || s, !this.tronWeb.eventServer) return r(\"No event server configured\");\n        var k = [];\n        if (!this.tronWeb.isAddress(e)) return r(\"Invalid contract address provided\");\n        if (o && !e) return r(\"Usage of event name filtering requires a contract address\");\n        if (void 0 !== a && !Ke.isInteger(a)) return r(\"Invalid fromTimestamp provided\");\n        if (!Ke.isInteger(c)) return r(\"Invalid size provided\");\n        if (c > 200 && (console.warn(\"Defaulting to maximum accepted size: 200\"), c = 200), !Ke.isInteger(d)) return r(\"Invalid page provided\");\n        if (u && !o) return r(\"Usage of block number filtering requires an event name\");\n        e && k.push(this.tronWeb.address.fromHex(e)), o && k.push(o), u && k.push(u);\n        var x = {\n          size: c,\n          page: d\n        };\n        return \"object\" === p()(y) && Object.keys(y).length > 0 && (x.filters = JSON.stringify(y)), a && (x.fromTimestamp = x.since = a), l && (x.onlyConfirmed = l), h && !l && (x.onlyUnconfirmed = h), m && (x.sort = m), (g = g || v || f) && (x.fingerprint = g), this.tronWeb.eventServer.request(\"event/contract/\".concat(k.join(\"/\"), \"?\").concat(mt.a.stringify(x))).then(function () {\n          var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n          return e ? Ke.isArray(e) ? r(null, !0 === b ? e : e.map(function (e) {\n            return Ke.mapEvent(e);\n          })) : r(e) : r(\"Unknown error occurred\");\n        })[\"catch\"](function (e) {\n          return r(e.response && e.response.data || e);\n        });\n      }\n    }, {\n      key: \"getEventsByTransactionID\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return Ke.isFunction(t) && (r = t, t = {}), r ? this.tronWeb.eventServer ? this.tronWeb.eventServer.request(\"event/transaction/\".concat(e)).then(function () {\n          var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n          return e ? Ke.isArray(e) ? r(null, !0 === t.rawResponse ? e : e.map(function (e) {\n            return Ke.mapEvent(e);\n          })) : r(e) : r(\"Unknown error occurred\");\n        })[\"catch\"](function (e) {\n          return r(e.response && e.response.data || e);\n        }) : r(\"No event server configured\") : this.injectPromise(this.getEventsByTransactionID, e, t);\n      }\n    }]), e;\n  }();\n\n  function kt(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function xt(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? kt(Object(r), !0).forEach(function (t) {\n        N()(e, t, r[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : kt(Object(r)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n      });\n    }\n\n    return e;\n  }\n\n  var wt = function () {\n    function e(t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n          i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n      b()(this, e), this.mainchain = n;\n      var s = t.fullHost,\n          a = t.fullNode,\n          o = t.solidityNode,\n          u = t.eventServer,\n          c = t.mainGatewayAddress,\n          d = t.sideGatewayAddress,\n          l = t.sideChainId;\n      this.sidechain = new r(s || a, s || o, s || u, i), this.isAddress = this.mainchain.isAddress, this.utils = this.mainchain.utils, this.setMainGatewayAddress(c), this.setSideGatewayAddress(d), this.setChainId(l), this.injectPromise = Ge()(this), this.validator = new Qe(this.sidechain);\n      var h = this;\n      this.sidechain.trx.sign = function () {\n        return h.sign.apply(h, arguments);\n      }, this.sidechain.trx.multiSign = function () {\n        return h.multiSign.apply(h, arguments);\n      };\n    }\n\n    var t, r, n, i, s, a, o, u, c, d, h, v, p, g, m, k, x, w, I, A, P;\n    return y()(e, [{\n      key: \"setMainGatewayAddress\",\n      value: function value(e) {\n        if (!this.isAddress(e)) throw new Error(\"Invalid main gateway address provided\");\n        this.mainGatewayAddress = e;\n      }\n    }, {\n      key: \"setSideGatewayAddress\",\n      value: function value(e) {\n        if (!this.isAddress(e)) throw new Error(\"Invalid side gateway address provided\");\n        this.sideGatewayAddress = e;\n      }\n    }, {\n      key: \"setChainId\",\n      value: function value(e) {\n        if (!this.utils.isString(e) || !e) throw new Error(\"Invalid side chainId provided\");\n        this.chainId = e;\n      }\n    }, {\n      key: \"signTransaction\",\n      value: function value(e, t) {\n        \"string\" == typeof e && (e = this.utils.code.hexStr2byteArray(e));\n        var r = this.utils.code.hexStr2byteArray(this.chainId),\n            n = this.utils.code.hexStr2byteArray(t.txID).concat(r),\n            i = this.sidechain.utils.ethersUtils.sha256(n),\n            s = this.utils.crypto.ECKeySign(this.utils.code.hexStr2byteArray(i.replace(/^0x/, \"\")), e);\n        return Array.isArray(t.signature) ? t.signature.includes(s) || t.signature.push(s) : t.signature = [s], t;\n      }\n    }, {\n      key: \"multiSign\",\n      value: (P = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : this.sidechain.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], i = u.length > 3 && void 0 !== u[3] && u[3], this.utils.isFunction(n) && (i = n, n = 0), this.utils.isFunction(r) && (i = r, r = this.mainchain.defaultPrivateKey, n = 0), i) {\n                  e.next = 8;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.multiSign, t, r, n));\n\n              case 8:\n                if (this.utils.isObject(t) && t.raw_data && t.raw_data.contract) {\n                  e.next = 10;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n              case 10:\n                if (t.raw_data.contract[0].Permission_id || !(n > 0)) {\n                  e.next = 30;\n                  break;\n                }\n\n                return t.raw_data.contract[0].Permission_id = n, s = this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(r)).toLowerCase(), e.next = 15, this.sidechain.trx.getSignWeight(t, n);\n\n              case 15:\n                if (\"PERMISSION_ERROR\" !== (a = e.sent).result.code) {\n                  e.next = 18;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(a.result.message));\n\n              case 18:\n                if (o = !1, a.permission.keys.map(function (e) {\n                  e.address === s && (o = !0);\n                }), o) {\n                  e.next = 22;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(r + \" has no permission to sign\"));\n\n              case 22:\n                if (!a.approved_list || -1 == a.approved_list.indexOf(s)) {\n                  e.next = 24;\n                  break;\n                }\n\n                return e.abrupt(\"return\", i(r + \" already sign transaction\"));\n\n              case 24:\n                if (!a.transaction || !a.transaction.transaction) {\n                  e.next = 29;\n                  break;\n                }\n\n                (t = a.transaction.transaction).raw_data.contract[0].Permission_id = n, e.next = 30;\n                break;\n\n              case 29:\n                return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n              case 30:\n                return e.prev = 30, e.abrupt(\"return\", i(null, this.signTransaction(r, t)));\n\n              case 34:\n                e.prev = 34, e.t0 = e[\"catch\"](30), i(e.t0);\n\n              case 37:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[30, 34]]);\n      })), function () {\n        return P.apply(this, arguments);\n      })\n    }, {\n      key: \"sign\",\n      value: (A = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            s,\n            a,\n            o = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = o.length > 0 && void 0 !== o[0] && o[0], r = o.length > 1 && void 0 !== o[1] ? o[1] : this.sidechain.defaultPrivateKey, n = !(o.length > 2 && void 0 !== o[2]) || o[2], i = o.length > 3 && void 0 !== o[3] && o[3], s = o.length > 4 && void 0 !== o[4] && o[4], this.utils.isFunction(i) && (s = i, i = !1), this.utils.isFunction(n) && (s = n, n = !0, i = !1), this.utils.isFunction(r) && (s = r, r = this.sidechain.defaultPrivateKey, n = !0, i = !1), s) {\n                  e.next = 10;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.sign, t, r, n, i));\n\n              case 10:\n                if (!this.utils.isString(t)) {\n                  e.next = 21;\n                  break;\n                }\n\n                if (this.utils.isHex(t)) {\n                  e.next = 13;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Expected hex message input\"));\n\n              case 13:\n                return e.prev = 13, a = this.sidechain.trx.signString(t, r, n), e.abrupt(\"return\", s(null, a));\n\n              case 18:\n                e.prev = 18, e.t0 = e[\"catch\"](13), s(e.t0);\n\n              case 21:\n                if (this.utils.isObject(t)) {\n                  e.next = 23;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Invalid transaction provided\"));\n\n              case 23:\n                if (i || !t.signature) {\n                  e.next = 25;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Transaction is already signed\"));\n\n              case 25:\n                if (e.prev = 25, i) {\n                  e.next = 30;\n                  break;\n                }\n\n                if (this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(r)).toLowerCase() === this.sidechain.address.toHex(t.raw_data.contract[0].parameter.value.owner_address)) {\n                  e.next = 30;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Private key does not match address in transaction\"));\n\n              case 30:\n                return e.abrupt(\"return\", s(null, this.signTransaction(r, t)));\n\n              case 33:\n                e.prev = 33, e.t1 = e[\"catch\"](25), s(e.t1);\n\n              case 36:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[13, 18], [25, 33]]);\n      })), function () {\n        return A.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrx\",\n      value: (I = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (i = c.length > 3 && void 0 !== c[3] ? c[3] : {}, s = c.length > 4 && void 0 !== c[4] ? c[4] : this.mainchain.defaultPrivateKey, a = c.length > 5 && void 0 !== c[5] && c[5], this.utils.isFunction(s) && (a = s, s = this.mainchain.defaultPrivateKey), this.utils.isFunction(i) && (a = i, i = {}), a) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.depositTrx, t, r, n, i, s));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"callValue\",\n                  type: \"integer\",\n                  value: t,\n                  gte: 0\n                }, {\n                  name: \"depositFee\",\n                  type: \"integer\",\n                  value: r,\n                  gte: 0\n                }, {\n                  name: \"feeLimit\",\n                  type: \"integer\",\n                  value: n,\n                  gte: 0,\n                  lte: 1e9\n                }], a)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                return i = xt({\n                  callValue: Number(t) + Number(r),\n                  feeLimit: n\n                }, i), e.prev = 10, e.next = 13, this.mainchain.contract().at(this.mainGatewayAddress);\n\n              case 13:\n                return o = e.sent, e.next = 16, o.depositTRX().send(i, s);\n\n              case 16:\n                return u = e.sent, e.abrupt(\"return\", a(null, u));\n\n              case 20:\n                return e.prev = 20, e.t0 = e[\"catch\"](10), e.abrupt(\"return\", a(e.t0));\n\n              case 23:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[10, 20]]);\n      })), function (e, t, r) {\n        return I.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrc10\",\n      value: (w = f()(l.a.mark(function e(t, r, n, i) {\n        var s,\n            a,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (s = d.length > 4 && void 0 !== d[4] ? d[4] : {}, a = d.length > 5 && void 0 !== d[5] ? d[5] : this.mainchain.defaultPrivateKey, o = d.length > 6 && void 0 !== d[6] && d[6], this.utils.isFunction(a) && (o = a, a = this.mainchain.defaultPrivateKey), this.utils.isFunction(s) && (o = s, s = {}), o) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.depositTrc10, t, r, n, i, s, a));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"tokenValue\",\n                  type: \"integer\",\n                  value: r,\n                  gte: 0\n                }, {\n                  name: \"depositFee\",\n                  type: \"integer\",\n                  value: n,\n                  gte: 0\n                }, {\n                  name: \"feeLimit\",\n                  type: \"integer\",\n                  value: i,\n                  gte: 0,\n                  lte: 1e9\n                }, {\n                  name: \"tokenId\",\n                  type: \"integer\",\n                  value: t,\n                  gte: 0\n                }], o)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                return s = xt(xt({\n                  tokenId: t,\n                  tokenValue: r,\n                  feeLimit: i\n                }, s), {}, {\n                  callValue: n\n                }), e.prev = 10, e.next = 13, this.mainchain.contract().at(this.mainGatewayAddress);\n\n              case 13:\n                return u = e.sent, e.next = 16, u.depositTRC10(t, r).send(s, a);\n\n              case 16:\n                c = e.sent, o(null, c), e.next = 23;\n                break;\n\n              case 20:\n                return e.prev = 20, e.t0 = e[\"catch\"](10), e.abrupt(\"return\", o(e.t0));\n\n              case 23:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[10, 20]]);\n      })), function (e, t, r, n) {\n        return w.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrc\",\n      value: (x = f()(l.a.mark(function e(t, r, n, i, s) {\n        var a,\n            o,\n            u,\n            c,\n            d,\n            h,\n            f = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (a = f.length > 5 && void 0 !== f[5] ? f[5] : {}, o = f.length > 6 && void 0 !== f[6] ? f[6] : this.mainchain.defaultPrivateKey, u = f.length > 7 && void 0 !== f[7] && f[7], this.utils.isFunction(o) && (u = o, o = this.mainchain.defaultPrivateKey), this.utils.isFunction(a) && (u = a, a = {}), u) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.depositTrc, t, r, n, i, s, a, o));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"functionSelector\",\n                  type: \"not-empty-string\",\n                  value: t\n                }, {\n                  name: \"num\",\n                  type: \"integer\",\n                  value: r,\n                  gte: 0\n                }, {\n                  name: \"fee\",\n                  type: \"integer\",\n                  value: n,\n                  gte: 0\n                }, {\n                  name: \"feeLimit\",\n                  type: \"integer\",\n                  value: i,\n                  gte: 0,\n                  lte: 1e9\n                }, {\n                  name: \"contractAddress\",\n                  type: \"address\",\n                  value: s\n                }], u)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                if (a = xt(xt({\n                  feeLimit: i\n                }, a), {}, {\n                  callValue: n,\n                  tokenId: \"\",\n                  tokenValue: 0\n                }), e.prev = 10, c = null, \"approve\" !== t) {\n                  e.next = 21;\n                  break;\n                }\n\n                return e.next = 15, this.mainchain.contract().at(s);\n\n              case 15:\n                return d = e.sent, e.next = 18, d.approve(this.mainGatewayAddress, r).send(a, o);\n\n              case 18:\n                c = e.sent, e.next = 44;\n                break;\n\n              case 21:\n                return e.next = 23, this.mainchain.contract().at(this.mainGatewayAddress);\n\n              case 23:\n                h = e.sent, e.t0 = t, e.next = \"depositTRC20\" === e.t0 ? 27 : \"depositTRC721\" === e.t0 ? 31 : \"retryDeposit\" === e.t0 ? 35 : \"retryMapping\" === e.t0 ? 39 : 43;\n                break;\n\n              case 27:\n                return e.next = 29, h.depositTRC20(s, r).send(a, o);\n\n              case 29:\n                return c = e.sent, e.abrupt(\"break\", 44);\n\n              case 31:\n                return e.next = 33, h.depositTRC721(s, r).send(a, o);\n\n              case 33:\n                return c = e.sent, e.abrupt(\"break\", 44);\n\n              case 35:\n                return e.next = 37, h.retryDeposit(r).send(a, o);\n\n              case 37:\n                return c = e.sent, e.abrupt(\"break\", 44);\n\n              case 39:\n                return e.next = 41, h.retryMapping(r).send(a, o);\n\n              case 41:\n                return c = e.sent, e.abrupt(\"break\", 44);\n\n              case 43:\n                return e.abrupt(\"break\", 44);\n\n              case 44:\n                u(null, c), e.next = 50;\n                break;\n\n              case 47:\n                return e.prev = 47, e.t1 = e[\"catch\"](10), e.abrupt(\"return\", u(e.t1));\n\n              case 50:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[10, 47]]);\n      })), function (e, t, r, n, i) {\n        return x.apply(this, arguments);\n      })\n    }, {\n      key: \"approveTrc20\",\n      value: (k = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, a = u.length > 5 && void 0 !== u[5] && u[5], o = \"approve\", e.abrupt(\"return\", this.depositTrc(o, t, 0, r, n, i, s, a));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return k.apply(this, arguments);\n      })\n    }, {\n      key: \"approveTrc721\",\n      value: (m = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, a = u.length > 5 && void 0 !== u[5] && u[5], o = \"approve\", e.abrupt(\"return\", this.depositTrc(o, t, 0, r, n, i, s, a));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return m.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrc20\",\n      value: (g = f()(l.a.mark(function e(t, r, n, i) {\n        var s,\n            a,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return s = c.length > 4 && void 0 !== c[4] ? c[4] : {}, a = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, o = c.length > 6 && void 0 !== c[6] && c[6], u = \"depositTRC20\", e.abrupt(\"return\", this.depositTrc(u, t, r, n, i, s, a, o));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r, n) {\n        return g.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrc721\",\n      value: (p = f()(l.a.mark(function e(t, r, n, i) {\n        var s,\n            a,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return s = c.length > 4 && void 0 !== c[4] ? c[4] : {}, a = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, o = c.length > 6 && void 0 !== c[6] && c[6], u = \"depositTRC721\", e.abrupt(\"return\", this.depositTrc(u, t, r, n, i, s, a, o));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r, n) {\n        return p.apply(this, arguments);\n      })\n    }, {\n      key: \"mappingTrc\",\n      value: (v = f()(l.a.mark(function e(t, r, n, i) {\n        var s,\n            a,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (s = d.length > 4 && void 0 !== d[4] ? d[4] : {}, a = d.length > 5 && void 0 !== d[5] ? d[5] : this.mainchain.defaultPrivateKey, o = d.length > 6 ? d[6] : void 0, this.utils.isFunction(a) && (o = a, a = this.mainchain.defaultPrivateKey), this.utils.isFunction(s) && (o = s, s = {}), o) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.mappingTrc, t, r, n, i, s, a));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"trxHash\",\n                  type: \"not-empty-string\",\n                  value: t\n                }, {\n                  name: \"mappingFee\",\n                  type: \"integer\",\n                  value: r,\n                  gte: 0\n                }, {\n                  name: \"feeLimit\",\n                  type: \"integer\",\n                  value: n,\n                  gte: 0,\n                  lte: 1e9\n                }], o)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                return t = t.startsWith(\"0x\") ? t : \"0x\" + t, s = xt(xt({\n                  feeLimit: n\n                }, s), {}, {\n                  callValue: r\n                }), e.prev = 11, e.next = 14, this.mainchain.contract().at(this.mainGatewayAddress);\n\n              case 14:\n                if (u = e.sent, c = null, \"mappingTRC20\" !== i) {\n                  e.next = 22;\n                  break;\n                }\n\n                return e.next = 19, u.mappingTRC20(t).send(s, a);\n\n              case 19:\n                c = e.sent, e.next = 29;\n                break;\n\n              case 22:\n                if (\"mappingTRC721\" !== i) {\n                  e.next = 28;\n                  break;\n                }\n\n                return e.next = 25, u.mappingTRC721(t).send(s, a);\n\n              case 25:\n                c = e.sent, e.next = 29;\n                break;\n\n              case 28:\n                o(new Error(\"type must be trc20 or trc721\"));\n\n              case 29:\n                o(null, c), e.next = 35;\n                break;\n\n              case 32:\n                return e.prev = 32, e.t0 = e[\"catch\"](11), e.abrupt(\"return\", o(e.t0));\n\n              case 35:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[11, 32]]);\n      })), function (e, t, r, n) {\n        return v.apply(this, arguments);\n      })\n    }, {\n      key: \"mappingTrc20\",\n      value: (h = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, a = u.length > 5 && void 0 !== u[5] && u[5], o = \"mappingTRC20\", e.abrupt(\"return\", this.mappingTrc(t, r, n, o, i, s, a));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return h.apply(this, arguments);\n      })\n    }, {\n      key: \"mappingTrc721\",\n      value: (d = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, a = u.length > 5 && void 0 !== u[5] && u[5], o = \"mappingTRC721\", e.abrupt(\"return\", this.mappingTrc(t, r, n, o, i, s, a));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return d.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrx\",\n      value: (c = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (i = c.length > 3 && void 0 !== c[3] ? c[3] : {}, s = c.length > 4 && void 0 !== c[4] ? c[4] : this.mainchain.defaultPrivateKey, a = c.length > 5 && void 0 !== c[5] && c[5], this.utils.isFunction(s) && (a = s, s = this.mainchain.defaultPrivateKey), this.utils.isFunction(i) && (a = i, i = {}), a) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.withdrawTrx, t, r, n, i, s));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"callValue\",\n                  type: \"integer\",\n                  value: t,\n                  gte: 0\n                }, {\n                  name: \"withdrawFee\",\n                  type: \"integer\",\n                  value: r,\n                  gte: 0\n                }, {\n                  name: \"feeLimit\",\n                  type: \"integer\",\n                  value: n,\n                  gte: 0,\n                  lte: 1e9\n                }], a)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                return i = xt({\n                  callValue: Number(t) + Number(r),\n                  feeLimit: n\n                }, i), e.prev = 10, e.next = 13, this.sidechain.contract().at(this.sideGatewayAddress);\n\n              case 13:\n                return o = e.sent, e.next = 16, o.withdrawTRX().send(i, s);\n\n              case 16:\n                return u = e.sent, e.abrupt(\"return\", a(null, u));\n\n              case 20:\n                return e.prev = 20, e.t0 = e[\"catch\"](10), e.abrupt(\"return\", a(e.t0));\n\n              case 23:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[10, 20]]);\n      })), function (e, t, r) {\n        return c.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrc10\",\n      value: (u = f()(l.a.mark(function e(t, r, n, i) {\n        var s,\n            a,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (s = d.length > 4 && void 0 !== d[4] ? d[4] : {}, a = d.length > 5 && void 0 !== d[5] ? d[5] : this.mainchain.defaultPrivateKey, o = d.length > 6 && void 0 !== d[6] && d[6], this.utils.isFunction(a) && (o = a, a = this.mainchain.defaultPrivateKey), this.utils.isFunction(s) && (o = s, s = {}), o) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.withdrawTrc10, t, r, n, i, s, a));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"tokenId\",\n                  type: \"integer\",\n                  value: t,\n                  gte: 0\n                }, {\n                  name: \"tokenValue\",\n                  type: \"integer\",\n                  value: r,\n                  gte: 0\n                }, {\n                  name: \"withdrawFee\",\n                  type: \"integer\",\n                  value: n,\n                  gte: 0\n                }, {\n                  name: \"feeLimit\",\n                  type: \"integer\",\n                  value: i,\n                  gte: 0,\n                  lte: 1e9\n                }], o)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                return s = xt({\n                  tokenValue: r,\n                  tokenId: t,\n                  callValue: n,\n                  feeLimit: i\n                }, s), e.prev = 10, e.next = 13, this.sidechain.contract().at(this.sideGatewayAddress);\n\n              case 13:\n                return u = e.sent, e.next = 16, u.withdrawTRC10(t, r).send(s, a);\n\n              case 16:\n                return c = e.sent, e.abrupt(\"return\", o(null, c));\n\n              case 20:\n                return e.prev = 20, e.t0 = e[\"catch\"](10), e.abrupt(\"return\", o(e.t0));\n\n              case 23:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[10, 20]]);\n      })), function (e, t, r, n) {\n        return u.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrc\",\n      value: (o = f()(l.a.mark(function e(t, r, n, i, s) {\n        var a,\n            o,\n            u,\n            c,\n            d,\n            h,\n            v,\n            p,\n            g,\n            b,\n            m = this,\n            y = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (a = y.length > 5 && void 0 !== y[5] ? y[5] : {}, o = y.length > 6 && void 0 !== y[6] ? y[6] : this.mainchain.defaultPrivateKey, u = y.length > 7 && void 0 !== y[7] && y[7], this.utils.isFunction(o) && (u = o, o = this.mainchain.defaultPrivateKey), this.utils.isFunction(a) && (u = a, a = {}), u) {\n                  e.next = 7;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.withdrawTrc, t, r, n, i, s, a, o));\n\n              case 7:\n                if (!this.validator.notValid([{\n                  name: \"functionSelector\",\n                  type: \"not-empty-string\",\n                  value: t\n                }, {\n                  name: \"numOrId\",\n                  type: \"integer\",\n                  value: r,\n                  gte: 0\n                }, {\n                  name: \"withdrawFee\",\n                  type: \"integer\",\n                  value: n,\n                  gte: 0\n                }, {\n                  name: \"feeLimit\",\n                  type: \"integer\",\n                  value: i,\n                  gte: 0,\n                  lte: 1e9\n                }, {\n                  name: \"contractAddress\",\n                  type: \"address\",\n                  value: s\n                }], u)) {\n                  e.next = 9;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 9:\n                return a = xt(xt({\n                  feeLimit: i\n                }, a), {}, {\n                  callValue: n\n                }), c = [{\n                  type: \"uint256\",\n                  value: r\n                }], e.prev = 11, d = o ? this.sidechain.address.fromPrivateKey(o) : this.sidechain.defaultAddress.base58, e.next = 15, this.sidechain.transactionBuilder.triggerSmartContract(s, t, a, c, this.sidechain.address.toHex(d));\n\n              case 15:\n                if ((h = e.sent).result && h.result.result) {\n                  e.next = 18;\n                  break;\n                }\n\n                return e.abrupt(\"return\", u(\"Unknown error: \" + JSON.stringify(h.transaction, null, 2)));\n\n              case 18:\n                return e.next = 20, this.sidechain.trx.sign(h.transaction, o);\n\n              case 20:\n                if ((v = e.sent).signature) {\n                  e.next = 25;\n                  break;\n                }\n\n                if (o) {\n                  e.next = 24;\n                  break;\n                }\n\n                return e.abrupt(\"return\", u(\"Transaction was not signed properly\"));\n\n              case 24:\n                return e.abrupt(\"return\", u(\"Invalid private key provided\"));\n\n              case 25:\n                return e.next = 27, this.sidechain.trx.sendRawTransaction(v);\n\n              case 27:\n                if (!(p = e.sent).code) {\n                  e.next = 32;\n                  break;\n                }\n\n                return g = {\n                  error: p.code,\n                  message: p.code\n                }, p.message && (g.message = this.sidechain.toUtf8(p.message)), e.abrupt(\"return\", u(g));\n\n              case 32:\n                if (a.shouldPollResponse) {\n                  e.next = 34;\n                  break;\n                }\n\n                return e.abrupt(\"return\", u(null, v.txID));\n\n              case 34:\n                (b = function () {\n                  var e = f()(l.a.mark(function e() {\n                    var t,\n                        r,\n                        n,\n                        i = arguments;\n                    return l.a.wrap(function (e) {\n                      for (;;) {\n                        switch (e.prev = e.next) {\n                          case 0:\n                            if (20 != (t = i.length > 0 && void 0 !== i[0] ? i[0] : 0)) {\n                              e.next = 3;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", u({\n                              error: \"Cannot find result in solidity node\",\n                              transaction: v\n                            }));\n\n                          case 3:\n                            return e.next = 5, m.sidechain.trx.getTransactionInfo(v.txID);\n\n                          case 5:\n                            if (r = e.sent, Object.keys(r).length) {\n                              e.next = 8;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", setTimeout(function () {\n                              b(t + 1);\n                            }, 3e3));\n\n                          case 8:\n                            if (!r.result || \"FAILED\" != r.result) {\n                              e.next = 10;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", u({\n                              error: m.sidechain.toUtf8(r.resMessage),\n                              transaction: v,\n                              output: r\n                            }));\n\n                          case 10:\n                            if (m.utils.hasProperty(r, \"contractResult\")) {\n                              e.next = 12;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", u({\n                              error: \"Failed to execute: \" + JSON.stringify(r, null, 2),\n                              transaction: v,\n                              output: r\n                            }));\n\n                          case 12:\n                            if (!a.rawResponse) {\n                              e.next = 14;\n                              break;\n                            }\n\n                            return e.abrupt(\"return\", u(null, r));\n\n                          case 14:\n                            return 1 === (n = decodeOutput(m.outputs, \"0x\" + r.contractResult[0])).length && (n = n[0]), e.abrupt(\"return\", u(null, n));\n\n                          case 17:\n                          case \"end\":\n                            return e.stop();\n                        }\n                      }\n                    }, e);\n                  }));\n                  return function () {\n                    return e.apply(this, arguments);\n                  };\n                }())(), e.next = 41;\n                break;\n\n              case 38:\n                return e.prev = 38, e.t0 = e[\"catch\"](11), e.abrupt(\"return\", u(e.t0));\n\n              case 41:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[11, 38]]);\n      })), function (e, t, r, n, i) {\n        return o.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrc20\",\n      value: (a = f()(l.a.mark(function e(t, r, n, i, s) {\n        var a,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return a = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, o = c.length > 6 && void 0 !== c[6] && c[6], u = \"withdrawal(uint256)\", e.abrupt(\"return\", this.withdrawTrc(u, t, r, n, i, s, a, o));\n\n              case 4:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r, n, i) {\n        return a.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrc721\",\n      value: (s = f()(l.a.mark(function e(t, r, n, i, s) {\n        var a,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return a = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, o = c.length > 6 && void 0 !== c[6] && c[6], u = \"withdrawal(uint256)\", e.abrupt(\"return\", this.withdrawTrc(u, t, r, n, i, s, a, o));\n\n              case 4:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r, n, i) {\n        return s.apply(this, arguments);\n      })\n    }, {\n      key: \"injectFund\",\n      value: (i = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u,\n            c,\n            d,\n            h,\n            f = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (i = f.length > 3 && void 0 !== f[3] ? f[3] : this.mainchain.defaultPrivateKey, s = f.length > 4 && void 0 !== f[4] && f[4], this.utils.isFunction(i) && (s = i, i = this.mainchain.defaultPrivateKey), this.utils.isFunction(n) && (s = n, n = {}), s) {\n                  e.next = 6;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.injectFund, t, r, n, i));\n\n              case 6:\n                if (!this.validator.notValid([{\n                  name: \"num\",\n                  type: \"integer\",\n                  value: t,\n                  gte: 0\n                }, {\n                  name: \"feeLimit\",\n                  type: \"integer\",\n                  value: r,\n                  gte: 0,\n                  lte: 1e9\n                }], s)) {\n                  e.next = 8;\n                  break;\n                }\n\n                return e.abrupt(\"return\");\n\n              case 8:\n                return e.prev = 8, a = this.sidechain.address.fromPrivateKey(i), o = this.sidechain.address.toHex(a), e.next = 13, this.sidechain.fullNode.request(\"/wallet/fundinject\", {\n                  owner_address: o,\n                  amount: t\n                }, \"post\");\n\n              case 13:\n                return u = e.sent, e.next = 16, this.sidechain.trx.sign(u, i);\n\n              case 16:\n                if ((c = e.sent).signature) {\n                  e.next = 21;\n                  break;\n                }\n\n                if (i) {\n                  e.next = 20;\n                  break;\n                }\n\n                return e.abrupt(\"return\", s(\"Transaction was not signed properly\"));\n\n              case 20:\n                return e.abrupt(\"return\", s(\"Invalid private key provided\"));\n\n              case 21:\n                return e.next = 23, this.sidechain.trx.sendRawTransaction(c);\n\n              case 23:\n                if (!(d = e.sent).code) {\n                  e.next = 28;\n                  break;\n                }\n\n                return h = {\n                  error: d.code,\n                  message: d.code\n                }, d.message && (h.message = this.mainchain.toUtf8(d.message)), e.abrupt(\"return\", s(h));\n\n              case 28:\n                return e.abrupt(\"return\", s(null, c.txID));\n\n              case 31:\n                return e.prev = 31, e.t0 = e[\"catch\"](8), e.abrupt(\"return\", s(e.t0));\n\n              case 34:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[8, 31]]);\n      })), function (e, t, r) {\n        return i.apply(this, arguments);\n      })\n    }, {\n      key: \"retryWithdraw\",\n      value: (n = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.sidechain.defaultPrivateKey, a = u.length > 5 && void 0 !== u[5] && u[5], o = \"retryWithdraw(uint256)\", e.abrupt(\"return\", this.withdrawTrc(o, t, r, n, this.sideGatewayAddress, i, s, a));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"retryDeposit\",\n      value: (r = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, a = u.length > 5 && void 0 !== u[5] && u[5], o = \"retryDeposit\", e.abrupt(\"return\", this.depositTrc(o, t, r, n, this.mainGatewayAddress, i, s, a));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, t, n) {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"retryMapping\",\n      value: (t = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            s,\n            a,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, s = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, a = u.length > 5 && void 0 !== u[5] && u[5], o = \"retryMapping\", e.abrupt(\"return\", this.depositTrc(o, t, r, n, this.mainGatewayAddress, i, s, a));\n\n              case 5:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function (e, r, n) {\n        return t.apply(this, arguments);\n      })\n    }]), e;\n  }();\n\n  function It(e) {\n    var t = function () {\n      if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n      if (Reflect.construct.sham) return !1;\n      if (\"function\" == typeof Proxy) return !0;\n\n      try {\n        return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n      } catch (e) {\n        return !1;\n      }\n    }();\n\n    return function () {\n      var r,\n          n = _()(e);\n\n      if (t) {\n        var i = _()(this).constructor;\n\n        r = Reflect.construct(n, arguments, i);\n      } else r = n.apply(this, arguments);\n\n      return P()(this, r);\n    };\n  }\n\n  var At = function (e) {\n    I()(s, e);\n    var t,\n        r,\n        n,\n        i = It(s);\n\n    function s() {\n      var e,\n          t,\n          r = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n          n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n          a = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n          o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n          u = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n      return b()(this, s), e = i.call(this), \"object\" === p()(r) && (r.fullNode || r.fullHost) ? (t = r.fullNode || r.fullHost, o = n, n = r.solidityNode || r.fullHost, a = r.eventServer || r.fullHost, u = r.privateKey) : t = r, Ke.isString(t) && (t = new Re.HttpProvider(t)), Ke.isString(n) && (n = new Re.HttpProvider(n)), Ke.isString(a) && (a = new Re.HttpProvider(a)), e.event = new yt(x()(e)), e.transactionBuilder = new st(x()(e)), e.trx = new ct(x()(e)), e.plugin = new gt(x()(e), r), e.utils = Ke, e.setFullNode(t), e.setSolidityNode(n), e.setEventServer(a), e.providers = Re, e.BigNumber = Ee.a, e.defaultBlock = !1, e.defaultPrivateKey = !1, e.defaultAddress = {\n        hex: !1,\n        base58: !1\n      }, [\"sha3\", \"toHex\", \"toUtf8\", \"fromUtf8\", \"toAscii\", \"fromAscii\", \"toDecimal\", \"fromDecimal\", \"toSun\", \"fromSun\", \"toBigNumber\", \"isAddress\", \"createAccount\", \"address\", \"version\"].forEach(function (t) {\n        e[t] = s[t];\n      }), \"object\" === p()(o) && (o.fullNode || o.fullHost) ? e.sidechain = new wt(o, s, x()(e), u) : u = u || o, u && e.setPrivateKey(u), e.fullnodeVersion = \"3.5.0\", e.feeLimit = 2e7, e.injectPromise = Ge()(x()(e)), e;\n    }\n\n    return y()(s, [{\n      key: \"getFullnodeVersion\",\n      value: (n = f()(l.a.mark(function e() {\n        var t;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return e.prev = 0, e.next = 3, this.trx.getNodeInfo();\n\n              case 3:\n                t = e.sent, this.fullnodeVersion = t.configNodeInfo.codeVersion, 2 === this.fullnodeVersion.split(\".\").length && (this.fullnodeVersion += \".0\"), e.next = 11;\n                break;\n\n              case 8:\n                e.prev = 8, e.t0 = e[\"catch\"](0), this.fullnodeVersion = \"3.5.0\";\n\n              case 11:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[0, 8]]);\n      })), function () {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"setDefaultBlock\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if ([!1, \"latest\", \"earliest\", 0].includes(e)) return this.defaultBlock = e;\n        if (!Ke.isInteger(e) || !e) throw new Error(\"Invalid block ID provided\");\n        this.defaultBlock = Math.abs(e);\n      }\n    }, {\n      key: \"setPrivateKey\",\n      value: function value(e) {\n        try {\n          this.setAddress(this.address.fromPrivateKey(e));\n        } catch (e) {\n          throw new Error(\"Invalid private key provided\");\n        }\n\n        this.defaultPrivateKey = e, this.emit(\"privateKeyChanged\", e);\n      }\n    }, {\n      key: \"setAddress\",\n      value: function value(e) {\n        if (!this.isAddress(e)) throw new Error(\"Invalid address provided\");\n        var t = this.address.toHex(e),\n            r = this.address.fromHex(e);\n        this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== r && (this.defaultPrivateKey = !1), this.defaultAddress = {\n          hex: t,\n          base58: r\n        }, this.emit(\"addressChanged\", {\n          hex: t,\n          base58: r\n        });\n      }\n    }, {\n      key: \"fullnodeSatisfies\",\n      value: function value(e) {\n        return ze.a.satisfies(this.fullnodeVersion, e);\n      }\n    }, {\n      key: \"isValidProvider\",\n      value: function value(e) {\n        return Object.values(Re).some(function (t) {\n          return e instanceof t;\n        });\n      }\n    }, {\n      key: \"setFullNode\",\n      value: function value(e) {\n        if (Ke.isString(e) && (e = new Re.HttpProvider(e)), !this.isValidProvider(e)) throw new Error(\"Invalid full node provided\");\n        this.fullNode = e, this.fullNode.setStatusPage(\"wallet/getnowblock\"), this.getFullnodeVersion();\n      }\n    }, {\n      key: \"setSolidityNode\",\n      value: function value(e) {\n        if (Ke.isString(e) && (e = new Re.HttpProvider(e)), !this.isValidProvider(e)) throw new Error(\"Invalid solidity node provided\");\n        this.solidityNode = e, this.solidityNode.setStatusPage(\"walletsolidity/getnowblock\");\n      }\n    }, {\n      key: \"setEventServer\",\n      value: function value() {\n        var e;\n        (e = this.event).setServer.apply(e, arguments);\n      }\n    }, {\n      key: \"currentProviders\",\n      value: function value() {\n        return {\n          fullNode: this.fullNode,\n          solidityNode: this.solidityNode,\n          eventServer: this.eventServer\n        };\n      }\n    }, {\n      key: \"currentProvider\",\n      value: function value() {\n        return this.currentProviders();\n      }\n    }, {\n      key: \"getEventResult\",\n      value: function value() {\n        for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++) {\n          r[n] = arguments[n];\n        }\n\n        return \"object\" !== p()(r[1]) && (r[1] = {\n          sinceTimestamp: r[1] || 0,\n          eventName: r[2] || !1,\n          blockNumber: r[3] || !1,\n          size: r[4] || 20,\n          page: r[5] || 1\n        }, r.splice(2, 4), Ke.isFunction(r[2]) || (Ke.isFunction(r[1].page) ? (r[2] = r[1].page, r[1].page = 1) : Ke.isFunction(r[1].size) && (r[2] = r[1].size, r[1].size = 20, r[1].page = 1))), (e = this.event).getEventsByContractAddress.apply(e, r);\n      }\n    }, {\n      key: \"getEventByTransactionID\",\n      value: function value() {\n        var e;\n        return (e = this.event).getEventsByTransactionID.apply(e, arguments);\n      }\n    }, {\n      key: \"contract\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return new pt(this, e, t);\n      }\n    }, {\n      key: \"isConnected\",\n      value: (r = f()(l.a.mark(function e() {\n        var t,\n            r = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (t = r.length > 0 && void 0 !== r[0] && r[0]) {\n                  e.next = 3;\n                  break;\n                }\n\n                return e.abrupt(\"return\", this.injectPromise(this.isConnected));\n\n              case 3:\n                return e.t0 = t, e.next = 6, this.fullNode.isConnected();\n\n              case 6:\n                return e.t1 = e.sent, e.next = 9, this.solidityNode.isConnected();\n\n              case 9:\n                if (e.t2 = e.sent, e.t3 = this.eventServer, !e.t3) {\n                  e.next = 15;\n                  break;\n                }\n\n                return e.next = 14, this.eventServer.isConnected();\n\n              case 14:\n                e.t3 = e.sent;\n\n              case 15:\n                return e.t4 = e.t3, e.t5 = {\n                  fullNode: e.t1,\n                  solidityNode: e.t2,\n                  eventServer: e.t4\n                }, e.abrupt(\"return\", (0, e.t0)(null, e.t5));\n\n              case 18:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      })), function () {\n        return r.apply(this, arguments);\n      })\n    }], [{\n      key: \"sha3\",\n      value: function value(e) {\n        var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];\n        return (t ? \"0x\" : \"\") + ie(Buffer.from(e, \"utf-8\")).toString().substring(2);\n      }\n    }, {\n      key: \"toHex\",\n      value: function value(e) {\n        if (Ke.isBoolean(e)) return s.fromDecimal(+e);\n        if (Ke.isBigNumber(e)) return s.fromDecimal(e);\n        if (\"object\" === p()(e)) return s.fromUtf8(JSON.stringify(e));\n\n        if (Ke.isString(e)) {\n          if (/^(-|)0x/.test(e)) return e;\n          if (!isFinite(e) || /^\\s*$/.test(e)) return s.fromUtf8(e);\n        }\n\n        var t = s.fromDecimal(e);\n        if (\"0xNaN\" === t) throw new Error(\"The passed value is not convertible to a hex string\");\n        return t;\n      }\n    }, {\n      key: \"toUtf8\",\n      value: function value(e) {\n        if (Ke.isHex(e)) return e = e.replace(/^0x/, \"\"), Buffer.from(e, \"hex\").toString(\"utf8\");\n        throw new Error(\"The passed value is not a valid hex string\");\n      }\n    }, {\n      key: \"fromUtf8\",\n      value: function value(e) {\n        if (!Ke.isString(e)) throw new Error(\"The passed value is not a valid utf-8 string\");\n        return \"0x\" + Buffer.from(e, \"utf8\").toString(\"hex\");\n      }\n    }, {\n      key: \"toAscii\",\n      value: function value(e) {\n        if (Ke.isHex(e)) {\n          var t = \"\",\n              r = 0,\n              n = e.length;\n\n          for (\"0x\" === e.substring(0, 2) && (r = 2); r < n; r += 2) {\n            var i = parseInt(e.substr(r, 2), 16);\n            t += String.fromCharCode(i);\n          }\n\n          return t;\n        }\n\n        throw new Error(\"The passed value is not a valid hex string\");\n      }\n    }, {\n      key: \"fromAscii\",\n      value: function value(e, t) {\n        if (!Ke.isString(e)) throw new Error(\"The passed value is not a valid utf-8 string\");\n        return \"0x\" + Buffer.from(e, \"ascii\").toString(\"hex\").padEnd(t, \"0\");\n      }\n    }, {\n      key: \"toDecimal\",\n      value: function value(e) {\n        return s.toBigNumber(e).toNumber();\n      }\n    }, {\n      key: \"fromDecimal\",\n      value: function value(e) {\n        var t = s.toBigNumber(e),\n            r = t.toString(16);\n        return t.isLessThan(0) ? \"-0x\" + r.substr(1) : \"0x\" + r;\n      }\n    }, {\n      key: \"fromSun\",\n      value: function value(e) {\n        var t = s.toBigNumber(e).div(1e6);\n        return Ke.isBigNumber(e) ? t : t.toString(10);\n      }\n    }, {\n      key: \"toSun\",\n      value: function value(e) {\n        var t = s.toBigNumber(e).times(1e6);\n        return Ke.isBigNumber(e) ? t : t.toString(10);\n      }\n    }, {\n      key: \"toBigNumber\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\n        return Ke.isBigNumber(e) ? e : Ke.isString(e) && /^(-|)0x/.test(e) ? new Ee.a(e.replace(\"0x\", \"\"), 16) : new Ee.a(e.toString(10), 10);\n      }\n    }, {\n      key: \"isAddress\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!Ke.isString(e)) return !1;\n        if (42 === e.length) try {\n          return s.isAddress(Ke.crypto.getBase58CheckAddress(Ke.code.hexStr2byteArray(e)));\n        } catch (e) {\n          return !1;\n        }\n\n        try {\n          return Ke.crypto.isAddressValid(e);\n        } catch (e) {\n          return !1;\n        }\n      }\n    }, {\n      key: \"createAccount\",\n      value: (t = f()(l.a.mark(function e() {\n        var t;\n        return l.a.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                return t = Ke.accounts.generateAccount(), e.abrupt(\"return\", t);\n\n              case 2:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e);\n      })), function () {\n        return t.apply(this, arguments);\n      })\n    }, {\n      key: \"address\",\n      get: function get() {\n        return {\n          fromHex: function fromHex(e) {\n            return Ke.isHex(e) ? Ke.crypto.getBase58CheckAddress(Ke.code.hexStr2byteArray(e.replace(/^0x/, \"41\"))) : e;\n          },\n          toHex: function toHex(e) {\n            return Ke.isHex(e) ? e.toLowerCase().replace(/^0x/, \"41\") : Ke.code.byteArray2hexStr(Ke.crypto.decodeBase58Address(e)).toLowerCase();\n          },\n          fromPrivateKey: function fromPrivateKey(e) {\n            try {\n              return Ke.crypto.pkToAddress(e);\n            } catch (e) {\n              return !1;\n            }\n          }\n        };\n      }\n    }]), s;\n  }(He.a);\n\n  N()(At, \"providers\", Re), N()(At, \"BigNumber\", Ee.a), N()(At, \"TransactionBuilder\", st), N()(At, \"Trx\", ct), N()(At, \"Contract\", pt), N()(At, \"Plugin\", gt), N()(At, \"Event\", yt), N()(At, \"version\", Le.a), N()(At, \"utils\", Ke);\n}])[\"default\"];","map":{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:/external \"@babel/runtime/regenerator\"","webpack:/external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:/external \"@babel/runtime/helpers/classCallCheck\"","webpack:/external \"@babel/runtime/helpers/createClass\"","webpack:/external \"@babel/runtime/helpers/defineProperty\"","webpack:/external \"injectpromise\"","webpack:/external \"@babel/runtime/helpers/typeof\"","webpack:/external \"@babel/runtime/helpers/toConsumableArray\"","webpack:/external \"@babel/runtime/helpers/slicedToArray\"","webpack:/external \"bignumber.js\"","webpack:/external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:/external \"ethers\"","webpack:/external \"semver\"","webpack:/external \"elliptic\"","webpack:/external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:/external \"@babel/runtime/helpers/inherits\"","webpack:/external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:/external \"axios\"","webpack:/external \"validator\"","webpack:/external \"eventemitter3\"","webpack:/external \"querystring\"","webpack:///src/utils/base64.js","webpack:///src/utils/bytes.js","webpack:///src/utils/address.js","webpack:///src/utils/code.js","webpack:///src/utils/base58.js","webpack:///src/utils/ethersUtils.js","webpack:///src/utils/crypto.js","webpack:///src/utils/accounts.js","webpack:///src/utils/abi.js","webpack:///src/utils/index.js","webpack:///src/lib/providers/index.js","webpack:///src/lib/providers/HttpProvider.js","webpack:///src/lib/transactionBuilder.js","webpack:///src/paramValidator/index.js","webpack:///src/lib/trx.js","webpack:///src/lib/contract/method.js","webpack:///src/lib/contract/index.js","webpack:///src/lib/plugin.js","webpack:///src/lib/event.js","webpack:///src/lib/sidechain.js","webpack:///src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Base64","this","_keyStr","encode","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","input","length","charCodeAt","isNaN","charAt","encodeIgnoreUtf8","inputBytes","decode","replace","indexOf","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","byteArray","Array","utftext","_utf8_encode","string","c2","c3","byte2hexStr","byte","Error","str","bytesToString","arr","one","toString","v","match","bytesLength","store","slice","st","parseInt","hextoString","hex","split","out","tmp","byteArray2hexStr","base64DecodeFromString","string64","base64EncodeToString","bytes","ADDRESS_PREFIX_REGEX","bin2String","array","arrayEquals","array1","array2","strict","JSON","stringify","stringToBytes","len","push","hexChar2byte","isHexChar","hexStr2byteArray","j","k","strToDate","test","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","Date","isNumber","getStringType","ALPHABET","ALPHABET_MAP","encode58","buffer","digits","carry","reverse","map","digit","join","decode58","keccak256","utils","sha256","toUtf8Bytes","recoverAddress","SigningKey","AbiCoder","getBase58CheckAddress","addressBytes","hash0","SHA256","checkSum","concat","decodeBase58Address","base58Sting","address","offset","checkSum1","signTransaction","priKeyBytes","transaction","txID","signature","ECKeySign","isArray","includes","arrayToBase64String","a","btoa","signBytes","privateKey","contents","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","getRawData","serializeBinary","genPriKey","EC","genKeyPair","getPrivate","priKeyHex","computeAddress","pubBytes","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","hash1","isAddressValid","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","hashBytes","sign","id","recoveryParam","rHex","sHex","msgBytes","msgHex","passwordToAddress","password","pkToAddress","generateAccount","pubKeyBytes","publicKey","base58","abiCoder","decodeParams","names","types","ignoreMethodHash","type","reduce","obj","arg","index","substr","toLowerCase","encodeParams","values","TronWeb","toHex","isValidURL","url","validator","isURL","protocols","require_tld","isObject","isJson","parse","ex","isBoolean","bool","isBigNumber","number","BigNumber","constructor","isString","isFunction","isHex","isInteger","Number","hasProperty","hasProperties","properties","mapEvent","event","data","block","block_number","timestamp","block_timestamp","contract","contract_address","event_name","transaction_id","result","resourceNode","resource_Node","_unconfirmed","unconfirmed","_fingerprint","fingerprint","parseEvent","inputs","abi","padLeft","padding","amount","res","isNotNullOrUndefined","val","sleep","millis","Promise","setTimeout","resolve","code","accounts","crypto","ethersUtils","HttpProvider","host","timeout","user","headers","statusPage","instance","axios","baseURL","auth","request","then","payload","method","keys","params","self","fromUtf8","tronWeb","resultManager","callback","message","toUtf8","TransactionBuilder","injectPromise","injectpromise","Validator","to","from","defaultAddress","options","sendTrx","notValid","msg","gt","to_address","owner_address","permissionId","Permission_id","fullNode","err","tokenID","sendToken","asset_name","issuerAddress","buyer","purchaseToken","duration","resource","receiverAddress","undefined","freezeBalance","optional","gte","frozen_balance","frozen_duration","receiver_address","unfreezeBalance","withdrawBlockRewards","applyForSR","votes","voterAddress","vote","invalid","entries","srAddress","voteCount","vote_address","vote_count","createSmartContract","feeLimit","userFeePercentage","originEnergyLimit","callValue","tokenValue","tokenId","token_id","bytecode","parameters","entrys","payable","some","func","lte","constructorParams","find","it","args","fee_limit","call_value","consume_user_resource_percent","origin_energy_limit","parameter","call_token_value","splice","_triggerSmartContract","_isConstant","triggerSmartContract","confirmed","contractAddress","functionSelector","assign","function_selector","ownerAddress","clearABI","isAddress","trx","cache","contracts","brokerage","updateBrokerage","createToken","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","now","saleEnd","freeBandwidth","freeBandwidthLimit","frozenAmount","frozenDuration","voteScore","precision","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","fullnodeSatisfies","vote_score","accountName","updateAccount","account_name","accountId","setAccountId","startsWith","account_id","updateToken","new_limit","new_public_limit","createProposal","proposalID","deleteProposal","proposal_id","isApproval","voteProposal","is_add_approval","tokenName","tokenBalance","trxBalance","createTRXExchange","first_token_id","first_token_balance","second_token_id","second_token_balance","resources","firstTokenName","firstTokenBalance","secondTokenName","secondTokenBalance","createTokenExchange","exchangeID","tokenAmount","injectExchangeTokens","exchange_id","quant","withdrawExchangeTokens","tokenAmountSold","tokenAmountExpected","tradeExchangeTokens","fromAscii","expected","updateSetting","updateEnergyLimit","permissions","permission_name","threshold","weight","operations","ownerPermissions","witnessPermissions","activesPermissions","updateAccountPermissions","checkPermissions","activesPermission","owner","witness","actives","newTxID","newTransaction","visible","alterTransaction","dataFormat","raw_data","extension","expiration","extendExpiration","addUpdateData","param","Function","normalized","no","lt","se","notPositive","notEqual","Trx","token","getCurrentBlock","getConfirmedCurrentBlock","solidityNode","defaultBlock","getBlock","getBlockByHash","getBlockByNumber","blockHash","blockID","getBlockTransactionCount","transactions","getTransactionFromBlock","transactionID","getTransaction","getConfirmedTransaction","_getTransactionInfoById","limit","getTransactionsToAddress","getTransactionsRelated","getTransactionsFromAddress","direction","all","tx","sort","b","account","getAccount","getAccountById","getAccountInfoById","getBalance","balance","getUnconfirmedAccount","getUnconfirmedAccountById","getUnconfirmedBalance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","_parseToken","getTokenFromID","listNodes","nodes","port","start","end","getBlockRange","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","Math","floor","getContract","useTronHeader","verifyMessage","verifySignature","messageBytes","messageDigest","recovered","tronAddress","base58Address","fromHex","defaultPrivateKey","multisig","signatureHex","signString","fromPrivateKey","toHexString","signingKey","signDigest","multiSign","signWeight","getSignWeight","foundKey","permission","approved_list","getApprovedList","signedTransaction","sendRawTransaction","sendTransaction","transactionBuilder","getProposal","proposal","listProposals","proposals","getChainParameters","chainParameter","getAccountResources","getExchangeByID","exchange","listExchanges","exchanges","listExchangesPaginated","getNodeInfo","info","getTokenListByName","getTokenByID","_getReward","_getBrokerage","reward","getParamTypes","decodeOutput","filter","Method","outputs","getFunctionSelector","sha3","defaultOptions","shouldPollResponse","forEach","methodArgs","_call","send","_send","watch","_watch","deployed","stateMutability","constant_result","msg2","chunk","broadcast","error","checkResult","getTransactionInfo","resMessage","rawResponse","decoded","contractResult","keepTxID","eventServer","listener","lastBlock","since","getEvents","eventName","blockNumber","filters","onlyUnconfirmed","onlyConfirmed","events","getEventsByContractAddress","latestEvent","newEvents","priorEvent","reject","bindListener","clearInterval","setInterval","stop","Contract","eventListener","methods","methodInstances","props","loadAbi","eventCallback","_getEvents","console","__proto__","prop","methodCall","onMethod","methodName","inputData","decodeInput","at","startCallback","_startEventListener","_stopEventListener","Plugin","pluginNoOverride","disablePlugins","pluginInterface","requires","components","libs","plugged","skipped","plugin","semver","satisfies","version","fullClass","className","classInstanceName","component","Event","healthcheck","providers","isValidProvider","isConnected","sinceTimestamp","fromTimestamp","size","page","previousLastEventFingerprint","previousFingerprint","routeParams","warn","qs","querystring","response","getEventsByTransactionID","SideChain","sideOptions","mainchain","fullHost","mainGatewayAddress","sideGatewayAddress","sideChainId","sidechain","setMainGatewayAddress","setSideGatewayAddress","setChainId","chainId","chainIdByteArr","byteArr","byteArrHash","depositFee","depositTrx","contractInstance","depositTRX","depositTrc10","depositTRC10","fee","depositTrc","approveInstance","approve","depositTRC20","depositTRC721","retryDeposit","retryMapping","trxHash","mappingFee","mappingTrc","mappingTRC20","mappingTRC721","withdrawFee","withdrawTrx","withdrawTRX","withdrawTrc10","withdrawTRC10","numOrId","withdrawTrc","injectFund","hexAddress","nonce","retryWithdrawFee","retryDepositFee","retryMappingFee","EventEmitter","setFullNode","setSolidityNode","setEventServer","setPrivateKey","fullnodeVersion","nodeInfo","configNodeInfo","codeVersion","abs","setAddress","emit","provider","knownProvider","setStatusPage","getFullnodeVersion","setServer","currentProviders","prefix","Buffer","fromDecimal","isFinite","padEnd","toBigNumber","toNumber","isLessThan","sun","div","times"],"mappings":"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","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"injectpromise\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"ethers\");","module.exports = require(\"semver\");","module.exports = require(\"elliptic\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"axios\");","module.exports = require(\"validator\");","module.exports = require(\"eventemitter3\");","module.exports = require(\"querystring\");","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}\n","import {Base64} from './base64';\n\nexport function byte2hexStr(byte) {\n    if (typeof byte !== 'number')\n        throw new Error('Input must be a number');\n\n    if (byte < 0 || byte > 255)\n        throw new Error('Input must be a byte');\n\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n\n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.replace(/^0x/, '').split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n\n    return str;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n","export const ADDRESS_SIZE = 34;\nexport const ADDRESS_PREFIX = \"41\";\nexport const ADDRESS_PREFIX_BYTE = 0x41;\nexport const ADDRESS_PREFIX_REGEX = /^(41)/;\n","import {\n    byte2hexStr,\n    bytesToString,\n    hextoString,\n    byteArray2hexStr,\n    base64DecodeFromString,\n    base64EncodeToString\n} from './bytes';\n\nexport function bin2String(array) {\n    // TODO Do we need this alias?\n    return bytesToString(array);\n}\n\nexport function arrayEquals(array1, array2, strict) {\n    if (array1.length != array2.length)\n        return false;\n\n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (strict) {\n            if (array1[i] != array2[i])\n                return false;\n        } else if (JSON.stringify(array1[i]) != JSON.stringify(array2[i]))\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport {byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString}\n\nexport function hexChar2byte(c) {\n    let d;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n\n    if (typeof d === 'number')\n        return d;\n    else\n        throw new Error('The passed hex char is not a valid hex char');\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        } else\n            throw new Error('The passed hex char is not a valid hex string')\n    }\n\n    return byteArray;\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(str))\n        throw new Error('The passed date string is not valid')\n\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10);\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n\n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    // TODO Should we return 1 if someone passes a full, 42-chars long address?\n    // if (str.length == 42 && /^41/.test(str)) {\n    //     for (; i < 40; i++) {\n    //         var c = str.charAt(i+2);\n    //\n    //         if (!isHexChar(c))\n    //             break;\n    //     }\n    // } else\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; // All Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; // At least one visible character\n    }\n\n    return -1;\n}\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0)\n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++)\n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++)\n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0)\n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++)\n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}\n","\nimport {utils} from 'ethers';\n\nconst keccak256 = utils.keccak256;\nconst sha256 = utils.sha256;\nconst toUtf8Bytes = utils.toUtf8Bytes;\nconst recoverAddress = utils.recoverAddress;\nconst SigningKey = utils.SigningKey;\nconst AbiCoder = utils.AbiCoder;\n\nexport {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    recoverAddress,\n    SigningKey,\n    AbiCoder\n}\n","import {ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE, ADDRESS_SIZE} from './address';\nimport {base64EncodeToString} from './code';\nimport {base64DecodeFromString, hexStr2byteArray} from './code';\nimport {encode58, decode58} from './base58';\nimport {byte2hexStr, byteArray2hexStr} from './bytes';\nimport {ec as EC} from 'elliptic';\nimport {keccak256, sha256} from './ethersUtils';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    throw new Error('Invalid address provided');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    if (Array.isArray(transaction.signature)) {\n        if (!transaction.signature.includes(signature))\n            transaction.signature.push(signature);\n    } else\n        transaction.signature = [signature];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString().substring(2);\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n\n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n\n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n\n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const msgHex = byteArray2hexStr(msgBytes);\n    const hashHex = sha256('0x' + msgHex).replace(/^0x/, '')\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n","import {byteArray2hexStr} from './bytes';\nimport {\n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n\n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}\n","import {AbiCoder} from './ethersUtils';\nimport TronWeb from 'index';\nimport {ADDRESS_PREFIX, ADDRESS_PREFIX_REGEX} from 'utils/address';\n\nconst abiCoder = new AbiCoder();\n\nexport function decodeParams(names, types, output, ignoreMethodHash) {\n\n    if (!output || typeof output === 'boolean') {\n        ignoreMethodHash = output;\n        output = types;\n        types = names;\n        names = [];\n    }\n\n    if (ignoreMethodHash && output.replace(/^0x/, '').length % 64 === 8)\n        output = '0x' + output.replace(/^0x/, '').substring(8);\n\n    if (output.replace(/^0x/, '').length % 64)\n        throw new Error('The encoded string is not valid. Its length must be a multiple of 64.');\n\n    // workaround for unsupported trcToken type\n    types = types.map(type => {\n        if (/trcToken/.test(type)) {\n            type = type.replace(/trcToken/, 'uint256')\n        }\n        return type\n    })\n\n    return abiCoder.decode(types, output).reduce((obj, arg, index) => {\n        if (types[index] == 'address')\n            arg = ADDRESS_PREFIX + arg.substr(2).toLowerCase();\n\n        if (names.length)\n            obj[names[index]] = arg;\n        else obj.push(arg);\n\n        return obj;\n    }, names.length ? {} : []);\n}\n\nexport function encodeParams(types, values) {\n\n    for (let i = 0; i < types.length; i++) {\n        if (types[i] === 'address') {\n            values[i] = TronWeb.address.toHex(values[i]).replace(ADDRESS_PREFIX_REGEX, '0x');\n        }\n    }\n\n    return abiCoder.encode(types, values);\n}\n","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\nimport * as abi from './abi';\nimport * as ethersUtils from './ethersUtils';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\nimport {ADDRESS_PREFIX} from 'utils/address';\n\nconst utils = {\n    isValidURL(url) {\n        if (typeof url !== 'string')\n            return false;\n        return validator.isURL(url.toString(), {\n            protocols: ['http', 'https'],\n            require_tld: false\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return (typeof string === 'string'\n            && !isNaN(parseInt(string, 16))\n            && /^(0x|)[a-fA-F0-9]+$/.test(string));\n    },\n\n    isInteger(number) {\n        if (number === null)\n            return false\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    mapEvent(event) {\n        let data = {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result,\n            resourceNode: event.resource_Node || (event._unconfirmed ? 'fullNode' : 'solidityNode')\n        };\n        if (event._unconfirmed) {\n            data.unconfirmed = event._unconfirmed\n        }\n        if (event._fingerprint) {\n            data.fingerprint = event._fingerprint;\n        }\n        return data;\n    },\n\n    parseEvent(event, {inputs: abi}) {\n        if (!event.result)\n            return event;\n\n        if (this.isObject(event.result)) {\n            for (var i = 0; i < abi.length; i++) {\n                let obj = abi[i];\n                if (obj.type == 'address' && obj.name in event.result)\n                    event.result[obj.name] = ADDRESS_PREFIX + event.result[obj.name].substr(2).toLowerCase();\n            }\n        } else if (this.isArray(event.result)) {\n            event.result = event.result.reduce((obj, result, index) => {\n                const {\n                    name,\n                    type\n                } = abi[index];\n\n                if (type == 'address')\n                    result = ADDRESS_PREFIX + result.substr(2).toLowerCase();\n\n                obj[name] = result;\n\n                return obj;\n            }, {});\n        }\n\n        return event;\n    },\n\n    padLeft(input, padding, amount) {\n        let res = input.toString();\n\n        while (res.length < amount)\n            res = padding + res;\n\n        return res;\n    },\n\n    isNotNullOrUndefined(val) {\n        return val !== null && typeof val !== 'undefined';\n    },\n\n    async sleep(millis = 1000){\n        return new Promise(resolve => setTimeout(resolve, millis));\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto,\n    abi,\n    ethersUtils\n};\n","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if (!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if (isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if (!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        host = host.replace(/\\/+$/, '');\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({\n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && Object.keys(payload).length ? payload : null,\n            params: method == 'get' && payload,\n            url,\n            method\n        }).then(({data}) => data);\n    }\n};\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport {AbiCoder} from 'utils/ethersUtils';\nimport Validator from 'paramValidator';\nimport {ADDRESS_PREFIX_REGEX} from 'utils/address';\nimport injectpromise from 'injectpromise';\n\nlet self;\n\n//helpers\n\nfunction toHex(value) {\n    return TronWeb.address.toHex(value);\n}\n\nfunction fromUtf8(value) {\n    return self.tronWeb.fromUtf8(value);\n}\n\nfunction resultManager(transaction, callback) {\n    if (transaction.Error)\n        return callback(transaction.Error);\n\n    if (transaction.result && transaction.result.message) {\n        return callback(\n            self.tronWeb.toUtf8(transaction.result.message)\n        );\n    }\n\n    return callback(null, transaction);\n}\n\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        self = this;\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.validator = new Validator(tronWeb);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(from)) {\n            options = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from, options);\n\n        // accept amounts passed as strings\n        amount = parseInt(amount)\n\n        if (this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer TRX to the same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(to),\n            owner_address: toHex(from),\n            amount: amount,\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(from)) {\n            options = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from, options);\n\n        amount = parseInt(amount)\n        if (this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from,\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer tokens to the same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenID\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(to),\n            owner_address: toHex(from),\n            asset_name: fromUtf8(tokenID),\n            amount: parseInt(amount)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/transferasset', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(buyer)) {\n            options = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'buyer',\n                type: 'address',\n                value: buyer\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                names: ['buyer', 'issuer'],\n                type: 'notEqual',\n                msg: 'Cannot purchase tokens from same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenID\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(issuerAddress),\n            owner_address: toHex(buyer),\n            asset_name: fromUtf8(tokenID),\n            amount: parseInt(amount)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        } else if (utils.isObject(receiverAddress)) {\n            options = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, address, receiverAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n                optional: true\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'duration',\n                type: 'integer',\n                gte: 3,\n                value: duration\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration),\n            resource: resource\n        }\n\n        if (utils.isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress) !== toHex(address)) {\n            data.receiver_address = toHex(receiverAddress)\n        }\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    unfreezeBalance(resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        } else if (utils.isObject(receiverAddress)) {\n            options = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, address, receiverAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n                optional: true\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            resource: resource\n        }\n\n        if (utils.isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress) !== toHex(address)) {\n            data.receiver_address = toHex(receiverAddress)\n        }\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/unfreezebalance', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/withdrawbalance', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    applyForSR(\n        address = this.tronWeb.defaultAddress.hex,\n        url = false,\n        options,\n        callback = false\n    ) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (utils.isObject(url) && utils.isValidURL(address)) {\n            options = url;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.applyForSR, address, url, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'url',\n                type: 'url',\n                value: url,\n                msg: 'Invalid url provided'\n            }\n        ], callback))\n            return;\n\n\n        const data = {\n            owner_address: toHex(address),\n            url: fromUtf8(url)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/createwitness', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(voterAddress)) {\n            options = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.vote, votes, voterAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress\n            },\n            {\n                name: 'votes',\n                type: 'notEmptyObject',\n                value: votes\n            }\n        ], callback))\n            return;\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([srAddress, voteCount]) => {\n            if (invalid)\n                return;\n\n            if (this.validator.notValid([\n                {\n                    name: 'SR',\n                    type: 'address',\n                    value: srAddress\n                },\n                {\n                    name: 'vote count',\n                    type: 'integer',\n                    gt: 0,\n                    value: voteCount,\n                    msg: 'Invalid vote count provided for SR: ' + srAddress\n                }\n            ]))\n                return invalid = true;\n\n            return {\n                vote_address: toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if (invalid)\n            return;\n\n        const data = {\n            owner_address: toHex(voterAddress),\n            votes,\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        const feeLimit = options.feeLimit || this.tronWeb.feeLimit;\n        let userFeePercentage = options.userFeePercentage;\n        if (typeof userFeePercentage !== 'number' && !userFeePercentage) {\n            userFeePercentage = 100;\n        }\n        const originEnergyLimit = options.originEnergyLimit || 10_000_000;\n        const callValue = options.callValue || 0;\n        const tokenValue = options.tokenValue;\n        const tokenId = options.tokenId || options.token_id;\n\n        let {\n            abi = false,\n            bytecode = false,\n            parameters = [],\n            name = \"\"\n        } = options;\n\n        if (abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch {\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if (abi.entrys)\n            abi = abi.entrys;\n\n        if (!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n\n        const payable = abi.some(func => {\n            return func.type == 'constructor' && func.payable;\n        });\n\n        if (this.validator.notValid([\n            {\n                name: 'bytecode',\n                type: 'hex',\n                value: bytecode\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0,\n                lte: 1_000_000_000\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        if (payable && callValue == 0 && tokenValue == 0)\n            return callback('When contract is payable, options.callValue or options.tokenValue must be a positive integer');\n\n        if (!payable && (callValue > 0 || tokenValue > 0))\n            return callback('When contract is not payable, options.callValue and options.tokenValue must be 0');\n\n\n        var constructorParams = abi.find(\n            (it) => {\n                return it.type === 'constructor';\n            }\n        );\n\n        if (typeof constructorParams !== 'undefined' && constructorParams) {\n            const abiCoder = new AbiCoder();\n            const types = [];\n            const values = [];\n            constructorParams = constructorParams.inputs;\n\n            if (parameters.length != constructorParams.length)\n                return callback(`constructor needs ${constructorParams.length} but ${parameters.length} provided`);\n\n            for (let i = 0; i < parameters.length; i++) {\n                let type = constructorParams[i].type;\n                let value = parameters[i];\n\n                if (!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if (type == 'address')\n                    value = toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n                else if (type == 'address[]')\n                    value = value.map(v => toHex(v).replace(ADDRESS_PREFIX_REGEX, '0x'));\n\n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        const args = {\n            owner_address: toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: userFeePercentage,\n            origin_energy_limit: originEnergyLimit,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters,\n            name\n        };\n\n        // tokenValue and tokenId can cause errors if provided when the trx10 proposal has not been approved yet. So we set them only if they are passed to the method.\n        if (utils.isNotNullOrUndefined(tokenValue))\n            args.call_token_value = parseInt(tokenValue)\n        if (utils.isNotNullOrUndefined(tokenId))\n            args.token_id = parseInt(tokenId)\n        if (options && options.permissionId)\n            args.Permission_id = options.permissionId;\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', args, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    triggerSmartContract(...params) {\n        if (typeof params[2] !== 'object') {\n            params[2] = {\n                feeLimit: params[2],\n                callValue: params[3]\n            }\n            params.splice(3, 1)\n        }\n        return this._triggerSmartContract(...params);\n    }\n\n    triggerConstantContract(...params) {\n        params[2]._isConstant = true\n        return this.triggerSmartContract(...params);\n    }\n\n    triggerConfirmedConstantContract(...params) {\n        params[2]._isConstant = true\n        params[2].confirmed = true\n        return this.triggerSmartContract(...params);\n    }\n\n    _triggerSmartContract(\n        contractAddress,\n        functionSelector,\n        options = {},\n        parameters = [],\n        issuerAddress = this.tronWeb.defaultAddress.hex,\n        callback = false\n    ) {\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if (!callback) {\n            return this.injectPromise(\n                this._triggerSmartContract,\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress\n            );\n        }\n\n        let {\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit,\n        } = Object.assign({\n            callValue: 0,\n            feeLimit: this.tronWeb.feeLimit\n        }, options)\n\n        if (this.validator.notValid([\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0,\n                lte: 1_000_000_000\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n                optional: true\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'function selector',\n                type: 'not-empty-string',\n                value: functionSelector\n            }\n        ], callback))\n            return;\n\n        functionSelector = functionSelector.replace('/\\s*/g', '');\n\n        if (parameters.length) {\n            const abiCoder = new AbiCoder();\n            let types = [];\n            const values = [];\n\n            for (let i = 0; i < parameters.length; i++) {\n                let {type, value} = parameters[i];\n\n                if (!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if (type == 'address')\n                    value = toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n                else if (type == 'address[]')\n                    value = value.map(v => toHex(v).replace(ADDRESS_PREFIX_REGEX, '0x'));\n\n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                // workaround for unsupported trcToken type\n                types = types.map(type => {\n                    if (/trcToken/.test(type)) {\n                        type = type.replace(/trcToken/, 'uint256')\n                    }\n                    return type\n                })\n\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        const args = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(issuerAddress),\n            function_selector: functionSelector,\n            parameter: parameters\n        };\n\n        if (!options._isConstant) {\n            args.call_value = parseInt(callValue)\n            args.fee_limit = parseInt(feeLimit)\n            if (utils.isNotNullOrUndefined(tokenValue))\n                args.call_token_value = parseInt(tokenValue)\n            if (utils.isNotNullOrUndefined(tokenId))\n                args.token_id = parseInt(tokenId)\n        }\n\n        if (options.permissionId) {\n            args.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/trigger${options._isConstant ? 'constant' : 'smart'}contract`, args, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    clearABI(contractAddress, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.clearABI, contractAddress, ownerAddress);\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid owner address provided');\n\n        const data = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(ownerAddress)\n        };\n\n        if (this.tronWeb.trx.cache.contracts[contractAddress]) {\n            delete this.tronWeb.trx.cache.contracts[contractAddress]\n        }\n        this.tronWeb.fullNode.request('wallet/clearabi', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n\n    }\n\n    updateBrokerage(brokerage, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.updateBrokerage, brokerage, ownerAddress);\n\n        if (!utils.isNotNullOrUndefined(brokerage))\n            return callback('Invalid brokerage provided');\n\n        if (!utils.isInteger(brokerage) || brokerage < 0 || brokerage > 100)\n            return callback('Brokerage must be an integer between 0 and 100');\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid owner address provided');\n\n        const data = {\n            brokerage: parseInt(brokerage),\n            owner_address: toHex(ownerAddress)\n        };\n\n        this.tronWeb.fullNode.request('wallet/updateBrokerage', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0,\n            // for now there is no default for the following values\n            voteScore,\n            precision\n        } = options;\n\n        if (this.validator.notValid([\n            {\n                name: 'Supply amount',\n                type: 'positive-integer',\n                value: totalSupply\n            },\n            {\n                name: 'TRX ratio',\n                type: 'positive-integer',\n                value: trxRatio\n            },\n            {\n                name: 'Token ratio',\n                type: 'positive-integer',\n                value: tokenRatio\n            },\n            {\n                name: 'token abbreviation',\n                type: 'not-empty-string',\n                value: abbreviation\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: name\n            },\n            {\n                name: 'token description',\n                type: 'not-empty-string',\n                value: description\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'sale start timestamp',\n                type: 'integer',\n                value: saleStart,\n                gte: Date.now()\n            },\n            {\n                name: 'sale end timestamp',\n                type: 'integer',\n                value: saleEnd,\n                gt: saleStart\n            },\n            {\n                name: 'Free bandwidth amount',\n                type: 'integer',\n                value: freeBandwidth,\n                gte: 0\n            },\n            {\n                name: 'Free bandwidth limit',\n                type: 'integer',\n                value: freeBandwidthLimit,\n                gte: 0\n            },\n            {\n                name: 'Frozen supply',\n                type: 'integer',\n                value: frozenAmount,\n                gte: 0\n            },\n            {\n                name: 'Frozen duration',\n                type: 'integer',\n                value: frozenDuration,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        if (utils.isNotNullOrUndefined(voteScore) && (!utils.isInteger(voteScore) || voteScore <= 0))\n            return callback('voteScore must be a positive integer greater than 0');\n\n        if (utils.isNotNullOrUndefined(precision) && (!utils.isInteger(precision) || precision <= 0 || precision > 6))\n            return callback('precision must be a positive integer > 0 and <= 6');\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            name: fromUtf8(name),\n            abbr: fromUtf8(abbreviation),\n            description: fromUtf8(description),\n            url: fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }\n        if (this.tronWeb.fullnodeSatisfies('>=3.5.0') && !(parseInt(frozenAmount) > 0)) {\n            delete data.frozen_supply\n        }\n        if (precision && !isNaN(parseInt(precision))) {\n            data.precision = parseInt(precision);\n        }\n        if (voteScore && !isNaN(parseInt(voteScore))) {\n            data.vote_score = parseInt(voteScore)\n        }\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    updateAccount(accountName = false, address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.updateAccount, accountName, address, options);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'Name',\n                type: 'not-empty-string',\n                value: accountName\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            account_name: fromUtf8(accountName),\n            owner_address: toHex(address),\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/updateaccount', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    setAccountId(accountId, address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.setAccountId, accountId, address);\n        }\n\n        if (accountId && utils.isString(accountId) && accountId.startsWith('0x')) {\n            accountId = accountId.slice(2);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: accountId\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: accountId\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n\n        this.tronWeb.fullNode.request('wallet/setaccountid', {\n            account_id: accountId,\n            owner_address: toHex(address),\n        }, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n\n        if (this.validator.notValid([\n            {\n                name: 'token description',\n                type: 'not-empty-string',\n                value: description\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'Free bandwidth amount',\n                type: 'positive-integer',\n                value: freeBandwidth\n            },\n            {\n                name: 'Free bandwidth limit',\n                type: 'positive-integer',\n                value: freeBandwidthLimit\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            description: fromUtf8(description),\n            url: fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/updateasset', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n\n    /**\n     * Creates a proposal to modify the network.\n     * Can only be created by a current Super Representative.\n     */\n    createProposal(parameters = false, issuerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createProposal, parameters, issuerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            }\n        ], callback))\n            return;\n\n        const invalid = 'Invalid proposal parameters provided';\n\n        if (!parameters)\n            return callback(invalid);\n\n        if (!utils.isArray(parameters))\n            parameters = [parameters];\n\n        for (let parameter of parameters) {\n            if (!utils.isObject(parameter))\n                return callback(invalid);\n        }\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            parameters: parameters\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/proposalcreate', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Deletes a network modification proposal that the owner issued.\n     * Only current Super Representative can vote on a proposal.\n     */\n    deleteProposal(proposalID = false, issuerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.deleteProposal, proposalID, issuerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            proposal_id: parseInt(proposalID)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/proposaldelete', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Adds a vote to an issued network modification proposal.\n     * Only current Super Representative can vote on a proposal.\n     */\n    voteProposal(proposalID = false, isApproval = false, voterAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(voterAddress)) {\n            options = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.voteProposal, proposalID, isApproval, voterAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0\n            },\n            {\n                name: 'has approval',\n                type: 'boolean',\n                value: isApproval\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(voterAddress),\n            proposal_id: parseInt(proposalID),\n            is_add_approval: isApproval\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/proposalapprove', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and TRX.\n     * Token Name should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTRXExchange(tokenName, tokenBalance, trxBalance, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTRXExchange, tokenName, tokenBalance, trxBalance, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token balance',\n                type: 'positive-integer',\n                value: tokenBalance\n            },\n            {\n                name: 'trx balance',\n                type: 'positive-integer',\n                value: trxBalance\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            first_token_id: fromUtf8(tokenName),\n            first_token_balance: tokenBalance,\n            second_token_id: '5f', // Constant for TRX.\n            second_token_balance: trxBalance\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangecreate', data, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and another token.\n     * DO NOT USE THIS FOR TRX.\n     * Token Names should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTokenExchange(firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTokenExchange, firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'first token name',\n                type: 'not-empty-string',\n                value: firstTokenName\n            },\n            {\n                name: 'second token name',\n                type: 'not-empty-string',\n                value: secondTokenName\n            },\n            {\n                name: 'first token balance',\n                type: 'positive-integer',\n                value: firstTokenBalance\n            },\n            {\n                name: 'second token balance',\n                type: 'positive-integer',\n                value: secondTokenBalance\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            first_token_id: fromUtf8(firstTokenName),\n            first_token_balance: firstTokenBalance,\n            second_token_id: fromUtf8(secondTokenName),\n            second_token_balance: secondTokenBalance\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangecreate', data, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Adds tokens into a bancor style exchange.\n     * Will add both tokens at market rate.\n     * Use \"_\" for the constant value for TRX.\n     */\n    injectExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.injectExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangeinject', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Withdraws tokens from a bancor style exchange.\n     * Will withdraw at market rate both tokens.\n     * Use \"_\" for the constant value for TRX.\n     */\n    withdrawExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangewithdraw', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Trade tokens on a bancor style exchange.\n     * Expected value is a validation and used to cap the total amt of token 2 spent.\n     * Use \"_\" for the constant value for TRX.\n     */\n    tradeExchangeTokens(exchangeID = false,\n                        tokenName = false,\n                        tokenAmountSold = 0,\n                        tokenAmountExpected = 0,\n                        ownerAddress = this.tronWeb.defaultAddress.hex,\n                        options,\n                        callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.tradeExchangeTokens, exchangeID, tokenName, tokenAmountSold, tokenAmountExpected, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'tokenAmountSold',\n                type: 'integer',\n                value: tokenAmountSold,\n                gte: 1\n            },\n            {\n                name: 'tokenAmountExpected',\n                type: 'integer',\n                value: tokenAmountExpected,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName),\n            quant: parseInt(tokenAmountSold),\n            expected: parseInt(tokenAmountExpected)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangetransaction', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Update userFeePercentage.\n     */\n    updateSetting(contractAddress = false,\n                  userFeePercentage = false,\n                  ownerAddress = this.tronWeb.defaultAddress.hex,\n                  options,\n                  callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateSetting, contractAddress, userFeePercentage, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            contract_address: toHex(contractAddress),\n            consume_user_resource_percent: userFeePercentage\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/updatesetting', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Update energy limit.\n     */\n    updateEnergyLimit(contractAddress = false,\n                      originEnergyLimit = false,\n                      ownerAddress = this.tronWeb.defaultAddress.hex,\n                      options,\n                      callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateEnergyLimit, contractAddress, originEnergyLimit, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            contract_address: toHex(contractAddress),\n            origin_energy_limit: originEnergyLimit\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/updateenergylimit', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    checkPermissions(permissions, type) {\n        if (permissions) {\n            if (permissions.type !== type\n                || !permissions.permission_name\n                || !utils.isString(permissions.permission_name)\n                || !utils.isInteger(permissions.threshold)\n                || permissions.threshold < 1\n                || !permissions.keys\n            ) {\n                return false\n            }\n            for (let key of permissions.keys) {\n                if (!this.tronWeb.isAddress(key.address)\n                    || !utils.isInteger(key.weight)\n                    || key.weight > permissions.threshold\n                    || key.weight < 1\n                    || (type === 2 && !permissions.operations)\n                ) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n\n    updateAccountPermissions(ownerAddress = this.tronWeb.defaultAddress.hex,\n                             ownerPermissions = false,\n                             witnessPermissions = false,\n                             activesPermissions = false,\n                             callback = false) {\n\n        if (utils.isFunction(activesPermissions)) {\n            callback = activesPermissions;\n            activesPermissions = false;\n        }\n\n        if (utils.isFunction(witnessPermissions)) {\n            callback = witnessPermissions;\n            witnessPermissions = activesPermissions = false;\n        }\n\n        if (utils.isFunction(ownerPermissions)) {\n            callback = ownerPermissions;\n            ownerPermissions = witnessPermissions = activesPermissions = false;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateAccountPermissions, ownerAddress, ownerPermissions, witnessPermissions, activesPermissions);\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if (!this.checkPermissions(ownerPermissions, 0)) {\n            return callback('Invalid ownerPermissions provided');\n        }\n\n        if (!this.checkPermissions(witnessPermissions, 1)) {\n            return callback('Invalid witnessPermissions provided');\n        }\n\n        if (!Array.isArray(activesPermissions)) {\n            activesPermissions = [activesPermissions]\n        }\n\n        for (let activesPermission of activesPermissions) {\n            if (!this.checkPermissions(activesPermission, 2)) {\n                return callback('Invalid activesPermissions provided');\n            }\n        }\n\n        const data = {\n            owner_address: ownerAddress\n        }\n        if (ownerPermissions) {\n            data.owner = ownerPermissions\n        }\n        if (witnessPermissions) {\n            data.witness = witnessPermissions\n        }\n        if (activesPermissions) {\n            data.actives = activesPermissions.length === 1 ? activesPermissions[0] : activesPermissions\n        }\n\n        this.tronWeb.fullNode.request('wallet/accountpermissionupdate', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    async newTxID(transaction, callback) {\n\n        if (!callback)\n            return this.injectPromise(this.newTxID, transaction);\n\n        this.tronWeb.fullNode\n            .request(\n                'wallet/getsignweight',\n                transaction,\n                'post'\n            )\n            .then(newTransaction => {\n                newTransaction = newTransaction.transaction.transaction\n                if (typeof transaction.visible === 'boolean') {\n                    newTransaction.visible = transaction.visible\n                }\n                callback(null, newTransaction)\n            })\n            .catch(err => callback('Error generating a new transaction id.'));\n    }\n\n    async alterTransaction(transaction, options = {}, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.alterTransaction, transaction, options);\n\n        if (transaction.signature)\n            return callback('You can not extend the expiration of a signed transaction.')\n\n        if (options.data) {\n            if (options.dataFormat !== 'hex')\n                options.data = this.tronWeb.toHex(options.data);\n            options.data = options.data.replace(/^0x/, '')\n            if (options.data.length === 0)\n                return callback('Invalid data provided');\n            transaction.raw_data.data = options.data;\n        }\n\n        if (options.extension) {\n            options.extension = parseInt(options.extension * 1000);\n            if (isNaN(options.extension) || transaction.raw_data.expiration + options.extension <= Date.now() + 3000)\n                return callback('Invalid extension provided');\n            transaction.raw_data.expiration += options.extension;\n        }\n\n        this.newTxID(transaction, callback)\n    }\n\n    async extendExpiration(transaction, extension, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.extendExpiration, transaction, extension);\n\n        this.alterTransaction(transaction, {extension}, callback);\n    }\n\n    async addUpdateData(transaction, data, dataFormat = 'utf8', callback = false) {\n\n        if (utils.isFunction(dataFormat)) {\n            callback = dataFormat;\n            dataFormat = 'utf8';\n        }\n\n        if (!callback)\n            return this.injectPromise(this.addUpdateData, transaction, data, dataFormat);\n\n        this.alterTransaction(transaction, {data, dataFormat}, callback);\n    }\n\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Validator {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n    }\n\n    invalid(param) {\n        return param.msg || `Invalid ${param.name}${param.type === 'address' ? ' address' : ''} provided`;\n    }\n\n    notPositive(param) {\n        return `${param.name} must be a positive integer`;\n    }\n\n    notEqual(param) {\n        return param.msg || `${param.names[0]} can not be equal to ${param.names[1]}`;\n    }\n\n    notValid(params = [], callback = new Function) {\n\n        let normalized = {};\n        let no = false;\n        for (const param of params) {\n            let {\n                name,\n                names,\n                value,\n                type,\n                gt,\n                lt,\n                gte,\n                lte,\n                se,\n                optional\n            } = param;\n            if (optional && (\n                !utils.isNotNullOrUndefined(value)\n                || (type !== 'boolean' && value === false)))\n                continue;\n            normalized[param.name] = param.value;\n            switch (type) {\n\n                case 'address':\n                    if (!this.tronWeb.isAddress(value)) {\n                        no = true;\n                    } else {\n                        normalized[name] = this.tronWeb.address.toHex(value);\n                    }\n                    break;\n\n                case 'integer':\n                    if (!utils.isInteger(value) ||\n                        (typeof gt === 'number' && value <= param.gt) ||\n                        (typeof lt === 'number' && value >= param.lt) ||\n                        (typeof gte === 'number' && value < param.gte) ||\n                        (typeof lte === 'number' && value > param.lte)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'positive-integer':\n                    if (!utils.isInteger(value) || value <= 0) {\n                        callback(this.notPositive(param));\n                        return;\n                    }\n                    break;\n\n                case 'tokenId':\n                    if (!utils.isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEmptyObject':\n                    if (!utils.isObject(value) || !Object.keys(value).length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEqual':\n                    if (normalized[names[0]] === normalized[names[1]]) {\n                        callback(this.notEqual(param));\n                        return true;\n                    }\n                    break;\n\n                case 'resource':\n                    if (!['BANDWIDTH', 'ENERGY'].includes(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'url':\n                    if (!utils.isValidURL(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'hex':\n                    if (!utils.isHex(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'array':\n                    if (!Array.isArray(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'not-empty-string':\n                    if (!utils.isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'boolean':\n                    if (!utils.isBoolean(value)) {\n                        no = true;\n                    }\n                    break;\n                case 'string':\n                    if (!utils.isString(value) ||\n                        (typeof gt === 'number' && value.length <= param.gt) ||\n                        (typeof lt === 'number' && value.length >= param.lt) ||\n                        (typeof gte === 'number' && value.length < param.gte) ||\n                        (typeof lte === 'number' && value.length > param.lte)) {\n                        no = true;\n                    }\n                    break;\n            }\n            if (no) {\n                callback(this.invalid(param));\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport {keccak256, toUtf8Bytes, recoverAddress, SigningKey} from 'utils/ethersUtils';\nimport {ADDRESS_PREFIX} from 'utils/address';\nimport Validator from \"../paramValidator\";\nimport injectpromise from 'injectpromise';\n\nconst TRX_MESSAGE_HEADER = '\\x19TRON Signed Message:\\n32';\n// it should be: '\\x15TRON Signed Message:\\n32';\nconst ETH_MESSAGE_HEADER = '\\x19Ethereum Signed Message:\\n32';\n\nfunction toHex(value) {\n    return TronWeb.address.toHex(value);\n}\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.cache = {\n            contracts: {}\n        }\n        this.validator = new Validator(tronWeb);\n    }\n\n    _parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getCurrentBlock);\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedCurrentBlock(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getConfirmedCurrentBlock);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if (block === false)\n            return callback('No block identifier provided');\n\n        if (block == 'earliest')\n            block = 0;\n\n        if (block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if (isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', {\n            value: blockHash\n        }, 'post').then(block => {\n            if (!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if (!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', {\n            num: parseInt(blockID)\n        }, 'post').then(block => {\n            if (!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({transactions = []}) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionFromBlock(block = this.tronWeb.defaultBlock, index, callback = false) {\n        if (utils.isFunction(index)) {\n            callback = index;\n            index = 0;\n        }\n\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionFromBlock, block, index);\n\n        this.getBlock(block).then(({transactions = false}) => {\n            if (!transactions)\n                callback('Transaction not found in block');\n            else if (typeof index == 'number') {\n                if (index >= 0 && index < transactions.length)\n                    callback(null, transactions[index]);\n                else\n                    callback('Invalid transaction index provided');\n            } else\n                callback(null, transactions);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if (!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedTransaction(transactionID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getConfirmedTransaction, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if (!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedTransactionInfo(transactionID, callback = false) {\n        return this._getTransactionInfoById(transactionID, {confirmed: false}, callback)\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        return this._getTransactionInfoById(transactionID, {confirmed: true}, callback)\n    }\n\n    _getTransactionInfoById(transactionID, options, callback = false) {\n        if (!callback)\n            return this.injectPromise(this._getTransactionInfoById, transactionID, options);\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/gettransactioninfobyid`, {\n            value: transactionID\n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if (!['to', 'from', 'all'].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n\n        if (direction == 'all') {\n            try {\n                const [from, to] = await Promise.all([\n                    this.getTransactionsRelated(address, 'from', limit, offset),\n                    this.getTransactionsRelated(address, 'to', limit, offset)\n                ])\n\n                return callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => {\n                    return b.raw_data.timestamp - a.raw_data.timestamp\n                }));\n            } catch (ex) {\n                return callback(ex);\n            }\n        }\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if (!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({transaction}) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getAccountById(id = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getAccountById, id);\n\n        this.getAccountInfoById(id, {confirmed: true}, callback);\n    }\n\n    getAccountInfoById(id, options, callback) {\n        if (this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: id\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: id\n            }\n        ], callback))\n            return;\n\n        if (id.startsWith('0x')) {\n            id = id.slice(2);\n        }\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getaccountbyid`, {\n            account_id: id\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedAccount, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccountById(id, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedAccountById, id);\n\n        this.getAccountInfoById(id, {confirmed: false}, callback);\n    }\n\n    getUnconfirmedBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedBalance, address);\n\n        this.getUnconfirmedAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0}) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({assetIssue = false}) => {\n            if (!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this._parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({nodes = []}) => {\n            callback(null, nodes.map(({address: {host, port}}) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if (utils.isFunction(end)) {\n            callback = end;\n            end = 30;\n        }\n\n        if (utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if (!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if (!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', {\n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({block = []}) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({witnesses = []}) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if (!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if (!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({assetIssue = []}) => {\n                callback(null, assetIssue.map(token => this._parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({assetIssue = []}) => {\n            callback(null, assetIssue.map(token => this._parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({num = -1}) => {\n            if (num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (this.cache.contracts[contractAddress]) {\n            callback(null, this.cache.contracts[contractAddress]);\n            return;\n        }\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if (contract.Error)\n                return callback('Contract does not exist');\n            this.cache.contracts[contractAddress] = contract;\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    async verifyMessage(message = false, signature = false, address = this.tronWeb.defaultAddress.base58, useTronHeader = true, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.base58;\n            useTronHeader = true;\n        }\n\n        if (utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.verifyMessage, message, signature, address, useTronHeader);\n\n        if (!utils.isHex(message))\n            return callback('Expected hex message input');\n\n        if (Trx.verifySignature(message, address, signature, useTronHeader))\n            return callback(null, true);\n\n        callback('Signature does not match');\n    }\n\n    static verifySignature(message, address, signature, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        signature = signature.replace(/^0x/, '');\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n\n        const messageDigest = keccak256(messageBytes);\n        const recovered = recoverAddress(messageDigest, {\n            recoveryParam: signature.substring(128, 130) == '1c' ? 1 : 0,\n            r: '0x' + signature.substring(0, 64),\n            s: '0x' + signature.substring(64, 128)\n        });\n\n        const tronAddress = ADDRESS_PREFIX + recovered.substr(2);\n        const base58Address = TronWeb.address.fromHex(tronAddress);\n\n        return base58Address == TronWeb.address.fromHex(address);\n    }\n\n    async sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, useTronHeader = true, multisig = false, callback = false) {\n\n        if (utils.isFunction(multisig)) {\n            callback = multisig;\n            multisig = false;\n        }\n\n        if (utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n\n        if (!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader, multisig);\n\n        // Message signing\n        if (utils.isString(transaction)) {\n\n            if (!utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signatureHex = Trx.signString(transaction, privateKey, useTronHeader)\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if (!multisig && transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            if (!multisig) {\n                const address = this.tronWeb.address.toHex(\n                    this.tronWeb.address.fromPrivateKey(privateKey)\n                ).toLowerCase();\n\n                if (address !== this.tronWeb.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address))\n                    return callback('Private key does not match address in transaction');\n            }\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    static signString(message, privateKey, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        const value ={\n            toHexString: function() {\n                return '0x' + privateKey\n            },\n            value: privateKey\n        }\n        const signingKey = new SigningKey(value);\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n        const messageDigest = keccak256(messageBytes);\n        const signature = signingKey.signDigest(messageDigest);\n        const signatureHex = [\n            '0x',\n            signature.r.substring(2),\n            signature.s.substring(2),\n            Number(signature.v).toString(16)\n        ].join('');\n        return signatureHex\n    }\n\n    async multiSign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, permissionId = false, callback = false) {\n\n        if (utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = 0;\n        }\n\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            permissionId = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.multiSign, transaction, privateKey, permissionId);\n\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            return callback('Invalid transaction provided');\n\n        // If owner permission or permission id exists in transaction, do sign directly\n        // If no permission id inside transaction or user passes permission id, use old way to reset permission id\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(privateKey)).toLowerCase();\n            const signWeight = await this.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                return callback(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map(key => {\n                if (key.address === address)\n                    foundKey = true;\n            });\n\n            if (!foundKey)\n                return callback(privateKey + ' has no permission to sign');\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                return callback(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                if (permissionId > 0) {\n                    transaction.raw_data.contract[0].Permission_id = permissionId;\n                }\n            } else {\n                return callback('Invalid transaction provided');\n            }\n        }\n\n        // sign\n        try {\n            return callback(null, utils.crypto.signTransaction(privateKey, transaction));\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    async getApprovedList(transaction, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getApprovedList, transaction);\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n\n        this.tronWeb.fullNode.request(\n            'wallet/getapprovedlist',\n            transaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async getSignWeight(transaction, permissionId, callback = false) {\n        if (utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = undefined;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getSignWeight, transaction, permissionId);\n\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            return callback('Invalid transaction provided');\n\n        if (utils.isInteger(permissionId)) {\n            transaction.raw_data.contract[0].Permission_id = parseInt(permissionId);\n        } else if (typeof transaction.raw_data.contract[0].Permission_id !== 'number') {\n            transaction.raw_data.contract[0].Permission_id = 0;\n        }\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n\n        this.tronWeb.fullNode.request(\n            'wallet/getsignweight',\n            transaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    sendRawTransaction(signedTransaction = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction, options);\n\n        if (!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if (!utils.isObject(options))\n            return callback('Invalid options provided');\n\n        if (!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction',\n            signedTransaction,\n            'post'\n        ).then(result => {\n            if (result.result)\n                result.transaction = signedTransaction;\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, options);\n\n        if (!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, options);\n\n        if (!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Freezes an amount of TRX.\n     * Will give bandwidth OR Energy and TRON Power(voting rights)\n     * to the owner of the frozen tokens.\n     *\n     * @param amount - is the number of frozen trx\n     * @param duration - is the duration in days to be frozen\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n        if (utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, options, receiverAddress);\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if (!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const freezeBalance = await this.tronWeb.transactionBuilder.freezeBalance(amount, duration, resource, address, receiverAddress);\n            const signedTransaction = await this.sign(freezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Unfreeze TRX that has passed the minimum freeze duration.\n     * Unfreezing will remove bandwidth and TRON Power.\n     *\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async unfreezeBalance(resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = 'BANDWIDTH';\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, options, receiverAddress);\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const unfreezeBalance = await this.tronWeb.transactionBuilder.unfreezeBalance(resource, address, receiverAddress);\n            const signedTransaction = await this.sign(unfreezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Modify account name\n     * Note: Username is allowed to edit only once.\n     *\n     * @param privateKey - Account private Key\n     * @param accountName - name of the account\n     * @param callback\n     *\n     * @return modified Transaction Object\n     */\n    async updateAccount(accountName = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback) {\n            return this.injectPromise(this.updateAccount, accountName, options);\n        }\n\n        if (!utils.isString(accountName) || !accountName.length) {\n            return callback('Name must be a string');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const updateAccount = await this.tronWeb.transactionBuilder.updateAccount(accountName, address);\n            const signedTransaction = await this.sign(updateAccount, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    signMessage(...args) {\n        return this.sign(...args);\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n\n    /**\n     * Gets a network modification proposal by ID.\n     */\n    getProposal(proposalID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getProposal, proposalID);\n\n        if (!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/getproposalbyid', {\n            id: parseInt(proposalID),\n        }, 'post').then(proposal => {\n            callback(null, proposal);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listProposals(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listProposals);\n\n        this.tronWeb.fullNode.request('wallet/listproposals', {}, 'post').then(({proposals = []}) => {\n            callback(null, proposals);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all parameters available for network modification proposals.\n     */\n    getChainParameters(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getChainParameters);\n\n        this.tronWeb.fullNode.request('wallet/getchainparameters', {}, 'post').then(({chainParameter = []}) => {\n            callback(null, chainParameter);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the account resources\n     */\n    getAccountResources(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getAccountResources, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/getaccountresource', {\n            address: this.tronWeb.address.toHex(address),\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the exchange ID.\n     */\n    getExchangeByID(exchangeID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getExchangeByID, exchangeID);\n\n        if (!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        this.tronWeb.fullNode.request('wallet/getexchangebyid', {\n            id: exchangeID,\n        }, 'post').then(exchange => {\n            callback(null, exchange);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists the exchanges\n     */\n    listExchanges(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchanges', {}, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }, 'post').catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listExchangesPaginated(limit = 10, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 10;\n        }\n        if (!callback)\n            return this.injectPromise(this.listExchangesPaginated, limit, offset);\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedexchangelist', {\n            limit,\n            offset\n        }, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get info about thre node\n     */\n    getNodeInfo(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getNodeInfo);\n\n        this.tronWeb.fullNode.request('wallet/getnodeinfo', {}, 'post').then(info => {\n            callback(null, info);\n        }, 'post').catch(err => callback(err));\n    }\n\n\n    getTokenListByName(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenListByName, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuelistbyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if (Array.isArray(token.assetIssue)) {\n                callback(null, token.assetIssue.map(t => this._parseToken(t)));\n            } else if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    getTokenByID(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenByID, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyid', {\n            value: tokenID\n        }, 'post').then(token => {\n            if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    async getReward(address, options = {}, callback = false) {\n        options.confirmed = true;\n        return this._getReward(address, options, callback);\n    }\n\n    async getUnconfirmedReward(address, options = {}, callback = false) {\n        options.confirmed = false;\n        return this._getReward(address, options, callback);\n    }\n\n    async getBrokerage(address, options = {}, callback = false) {\n        options.confirmed = true;\n        return this._getBrokerage(address, options, callback);\n    }\n\n    async getUnconfirmedBrokerage(address, options = {}, callback = false) {\n        options.confirmed = false;\n        return this._getBrokerage(address, options, callback);\n    }\n\n    async _getReward(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._getReward, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            address: toHex(address)\n        };\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getReward`, data, 'post')\n            .then((result = {}) => {\n\n                if (typeof result.reward === 'undefined')\n                    return callback('Not found.');\n\n                callback(null, result.reward);\n            }).catch(err => callback(err));\n    }\n\n\n    async _getBrokerage(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._getBrokerage, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            address: toHex(address)\n        };\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getBrokerage`, data, 'post')\n            .then((result = {}) => {\n\n                if (typeof result.brokerage === 'undefined')\n                    return callback('Not found.');\n\n                callback(null, result.brokerage);\n            }).catch(err => callback(err));\n    }\n\n};\n","import utils from 'utils';\nimport {ADDRESS_PREFIX_REGEX} from 'utils/address';\nimport injectpromise from 'injectpromise';\n\nconst getFunctionSelector = abi => {\n    return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\n}\n\nconst getParamTypes = params => {\n    return params.map(({type}) => type);\n}\n\nconst decodeOutput = (abi, output) => {\n    const names = abi.map(({name}) => name).filter(name => !!name);\n    const types = abi.map(({type}) => type);\n\n    return utils.abi.decodeParams(names, types, output);\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;\n        this.name = abi.name || (abi.name = abi.type);\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.functionSelector = getFunctionSelector(abi);\n        this.signature = this.tronWeb.sha3(this.functionSelector, false).slice(0, 8);\n        this.injectPromise = injectpromise(this);\n\n        this.defaultOptions = {\n            feeLimit: this.tronWeb.feeLimit,\n            callValue: 0,\n            userFeePercentage: 100,\n            shouldPollResponse: false // Only used for sign()\n        };\n    }\n\n    decodeInput(data) {\n        return decodeOutput(this.inputs, '0x' + data);\n    }\n\n    onMethod(...args) {\n        const types = getParamTypes(this.inputs);\n\n        args.forEach((arg, index) => {\n            if (types[index] == 'address')\n                args[index] = this.tronWeb.address.toHex(arg).replace(ADDRESS_PREFIX_REGEX, '0x')\n\n            if (types[index] == 'address[]') {\n                args[index] = args[index].map(address => {\n                    return this.tronWeb.address.toHex(address).replace(ADDRESS_PREFIX_REGEX, '0x')\n                })\n            }\n        });\n\n        return {\n            call: (...methodArgs) => this._call(types, args, ...methodArgs),\n            send: (...methodArgs) => this._send(types, args, ...methodArgs),\n            watch: (...methodArgs) => this._watch(...methodArgs)\n        }\n    }\n\n    async _call(types, args, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._call, types, args, options);\n\n        if (types.length !== args.length)\n            return callback('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (!['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector,\n            options,\n            parameters,\n            options.from ? this.tronWeb.address.toHex(options.from) : false,\n            (err, transaction) => {\n                if (err)\n                    return callback(err);\n\n                if (!utils.hasProperty(transaction, 'constant_result'))\n                    return callback('Failed to execute');\n\n                try {\n\n                    const len = transaction.constant_result[0].length\n                    if (len === 0 || len % 64 === 8) {\n                        let msg = 'The call has been reverted or has thrown an error.'\n                        if (len !== 0) {\n                            msg += ' Error message: '\n                            let msg2 = ''\n                            let chunk = transaction.constant_result[0].substring(8)\n                            for (let i = 0; i < len - 8; i += 64) {\n                                msg2 += this.tronWeb.toUtf8(chunk.substring(i, i + 64))\n                            }\n                            msg += msg2.replace(/(\\u0000|\\u000b|\\f)+/g, ' ').replace(/ +/g, ' ').replace(/\\s+$/g, '');\n                        }\n                        return callback(msg)\n                    }\n\n                    let output = decodeOutput(this.outputs, '0x' + transaction.constant_result[0]);\n\n                    if (output.length === 1)\n                        output = output[0];\n\n                    return callback(null, output);\n                } catch (ex) {\n                    return callback(ex);\n                }\n            });\n    }\n\n    async _send(types, args, options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._send, types, args, options, privateKey);\n\n        if (types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n        // If a function isn't payable, dont provide a callValue.\n        if (!['payable'].includes(stateMutability.toLowerCase()))\n            options.callValue = 0;\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        try {\n            const address = privateKey ? this.tronWeb.address.fromPrivateKey(privateKey) : this.tronWeb.defaultAddress.base58;\n            const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n                this.contract.address,\n                this.functionSelector,\n                options,\n                parameters,\n                this.tronWeb.address.toHex(address)\n            );\n\n            if (!transaction.result || !transaction.result.result)\n                return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n            // If privateKey is false, this won't be signed here. We assume sign functionality will be replaced.\n            const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.tronWeb.toUtf8(broadcast.message);\n                return callback(err)\n            }\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index === 20) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result === 'FAILED') {\n                    return callback({\n                        error: this.tronWeb.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (options.rawResponse)\n                    return callback(null, output);\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1)\n                    decoded = decoded[0];\n\n                if (options.keepTxID) {\n                    return callback(null, [signedTransaction.txID, decoded]);\n                }\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async _watch(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!utils.isFunction(callback))\n            throw new Error('Expected callback to be provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.abi.type || !/event/i.test(this.abi.type))\n            return callback('Invalid method type for event watching');\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        let listener = false;\n        let lastBlock = false;\n        let since = Date.now() - 1000;\n\n        const getEvents = async () => {\n            try {\n\n                const params = {\n                    since,\n                    eventName: this.name,\n                    sort: 'block_timestamp',\n                    blockNumber: 'latest',\n                    filters: options.filters\n                }\n                if (options.resourceNode) {\n                    if (/full/i.test(options.resourceNode))\n                        params.onlyUnconfirmed = true\n                    else\n                        params.onlyConfirmed = true\n                }\n\n                const events = await this.tronWeb.event.getEventsByContractAddress(this.contract.address, params);\n                const [latestEvent] = events.sort((a, b) => b.block - a.block);\n                const newEvents = events.filter((event, index) => {\n\n                    if (options.resourceNode && event.resourceNode &&\n                        options.resourceNode.toLowerCase() !== event.resourceNode.toLowerCase()) {\n                        return false\n                    }\n\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if (duplicate)\n                        return false;\n\n                    if (!lastBlock)\n                        return true;\n\n                    return event.block > lastBlock;\n                });\n\n                if (latestEvent)\n                    lastBlock = latestEvent.block;\n\n                return newEvents;\n            } catch (ex) {\n                return Promise.reject(ex);\n            }\n\n        };\n\n        const bindListener = () => {\n            if (listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                getEvents().then(events => events.forEach(event => {\n                    callback(null, utils.parseEvent(event, this.abi))\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await getEvents();\n        bindListener();\n\n        return {\n            start: bindListener,\n            stop: () => {\n                if (!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\nimport injectpromise from 'injectpromise';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;\n        this.deployed = false;\n        this.lastBlock = false;\n\n        this.methods = {};\n        this.methodInstances = {};\n        this.props = [];\n\n        if (this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents(options = {}) {\n        const events = await this.tronWeb.event.getEventsByContractAddress(this.address, options);\n        const [latestEvent] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n\n            if (options.resourceNode && event.resourceNode &&\n                options.resourceNode.toLowerCase() !== event.resourceNode.toLowerCase()) {\n                return false\n            }\n\n            const duplicate = events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n\n            if (duplicate)\n                return false;\n\n            if (!this.lastBlock)\n                return true;\n\n            return event.block > this.lastBlock;\n        });\n\n        if (latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(options = {}, callback) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (this.eventListener)\n            clearInterval(this.eventListener);\n\n        if (!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if (!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents(options);\n\n        this.eventListener = setInterval(() => {\n            this._getEvents(options).then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if (!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    hasProperty(property) {\n        return this.hasOwnProperty(property) || this.__proto__.hasOwnProperty(property);\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        this.props.forEach(prop => delete this[prop]);\n\n        abi.forEach(func => {\n            // Don't build a method for constructor function. That's handled through contract create.\n            if (!func.type || /constructor/i.test(func.type))\n                return;\n\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            const {\n                name,\n                functionSelector,\n                signature\n            } = method;\n\n            this.methods[name] = methodCall;\n            this.methods[functionSelector] = methodCall;\n            this.methods[signature] = methodCall;\n\n            this.methodInstances[name] = method;\n            this.methodInstances[functionSelector] = method;\n            this.methodInstances[signature] = method;\n\n            if (!this.hasProperty(name)) {\n                this[name] = methodCall;\n                this.props.push(name);\n            }\n\n            if (!this.hasProperty(functionSelector)) {\n                this[functionSelector] = methodCall;\n                this.props.push(functionSelector);\n            }\n\n            if (!this.hasProperty(signature)) {\n                this[signature] = methodCall;\n                this.props.push(signature);\n            }\n        });\n    }\n\n    decodeInput(data) {\n\n        const methodName = data.substring(0, 8);\n        const inputData = data.substring(8);\n\n        if (!this.methodInstances[methodName])\n            throw new Error('Contract method ' + methodName + \" not found\");\n\n        const methodInstance = this.methodInstances[methodName];\n\n        return {\n            name: methodInstance.name,\n            params: this.methodInstances[methodName].decodeInput(inputData),\n        }\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (contract.code)\n                return callback({\n                    error: contract.code,\n                    message: this.tronWeb.toUtf8(contract.message)\n                })\n\n            await utils.sleep(3000);\n            return this.at(signedTransaction.contract_address, callback);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async at(contractAddress, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if (!contract.contract_address)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi ? contract.abi.entrys ? contract.abi.entrys : [] : []);\n\n            return callback(null, this);\n        } catch (ex) {\n            if (ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }\n    }\n\n    events(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if (!startCallback) {\n                    self._startEventListener(options, callback);\n                    return this;\n                }\n\n                self._startEventListener(options, callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport semver from 'semver';\n\nexport default class Plugin {\n\n    constructor(tronWeb = false, options = {}) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.pluginNoOverride = ['register'];\n        this.disablePlugins = options.disablePlugins;\n    }\n\n    register(Plugin, options) {\n        let pluginInterface = {\n            requires: '0.0.0',\n            components: {}\n        }\n        let result = {\n            libs: [],\n            plugged: [],\n            skipped: []\n        }\n        if (this.disablePlugins) {\n            result.error = 'This instance of TronWeb has plugins disabled.'\n            return result;\n        }\n        const plugin = new Plugin(this.tronWeb)\n        if (utils.isFunction(plugin.pluginInterface)) {\n            pluginInterface = plugin.pluginInterface(options)\n        }\n        if (semver.satisfies(TronWeb.version, pluginInterface.requires)) {\n            if (pluginInterface.fullClass) {\n                // plug the entire class at the same level of tronWeb.trx\n                let className = plugin.constructor.name\n                let classInstanceName = className.substring(0, 1).toLowerCase() + className.substring(1)\n                if (className !== classInstanceName) {\n                    TronWeb[className] = Plugin\n                    this.tronWeb[classInstanceName] = plugin\n                    result.libs.push(className)\n                }\n            } else {\n                // plug methods into a class, like trx\n                for (let component in pluginInterface.components) {\n                    if (!this.tronWeb.hasOwnProperty(component)) {\n                        continue\n                    }\n                    let methods = pluginInterface.components[component]\n                    let pluginNoOverride = this.tronWeb[component].pluginNoOverride || []\n                    for (let method in methods) {\n                        if (method === 'constructor' || (this.tronWeb[component][method] &&\n                            (pluginNoOverride.includes(method) // blacklisted methods\n                                || /^_/.test(method)) // private methods\n                        )) {\n                            result.skipped.push(method)\n                            continue\n                        }\n                        this.tronWeb[component][method] = methods[method].bind(this.tronWeb[component])\n                        result.plugged.push(method)\n                    }\n                }\n            }\n        } else {\n            throw new Error('The plugin is not compatible with this version of TronWeb')\n        }\n        return result\n    }\n}\n\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport providers from \"./providers\";\nimport querystring from \"querystring\";\nimport injectpromise from 'injectpromise';\n\nexport default class Event {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb || !(tronWeb instanceof TronWeb))\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n    }\n\n    setServer(eventServer = false, healthcheck = 'healthcheck') {\n        if (!eventServer)\n            return this.tronWeb.eventServer = false;\n\n        if (utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        if (!this.tronWeb.isValidProvider(eventServer))\n            throw new Error('Invalid event server provided');\n\n        this.tronWeb.eventServer = eventServer;\n        this.tronWeb.eventServer.isConnected = () => this.tronWeb.eventServer.request(healthcheck).then(() => true).catch(() => false);\n    }\n\n    getEventsByContractAddress(contractAddress = false, options = {}, callback = false) {\n\n        let {\n            sinceTimestamp,\n            since,\n            fromTimestamp,\n            eventName,\n            blockNumber,\n            size,\n            page,\n            onlyConfirmed,\n            onlyUnconfirmed,\n            previousLastEventFingerprint,\n            previousFingerprint,\n            fingerprint,\n            rawResponse,\n            sort,\n            filters\n        } = Object.assign({\n            sinceTimestamp: 0,\n            eventName: false,\n            blockNumber: false,\n            size: 20,\n            page: 1\n        }, options)\n\n        if (!callback)\n            return this.injectPromise(this.getEventsByContractAddress, contractAddress, options);\n\n        fromTimestamp = fromTimestamp || sinceTimestamp || since;\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        const routeParams = [];\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n\n        if (typeof fromTimestamp !== 'undefined' && !utils.isInteger(fromTimestamp))\n            return callback('Invalid fromTimestamp provided');\n\n        if (!utils.isInteger(size))\n            return callback('Invalid size provided');\n\n        if (size > 200) {\n            console.warn('Defaulting to maximum accepted size: 200');\n            size = 200;\n        }\n\n        if (!utils.isInteger(page))\n            return callback('Invalid page provided');\n\n        if (blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if (contractAddress)\n            routeParams.push(this.tronWeb.address.fromHex(contractAddress));\n\n        if (eventName)\n            routeParams.push(eventName);\n\n        if (blockNumber)\n            routeParams.push(blockNumber);\n\n        const qs = {\n            size,\n            page\n        }\n\n        if (typeof filters === 'object' && Object.keys(filters).length > 0) {\n            qs.filters = JSON.stringify(filters);\n        }\n\n        if (fromTimestamp) {\n            qs.fromTimestamp = qs.since = fromTimestamp;\n        }\n\n        if (onlyConfirmed)\n            qs.onlyConfirmed = onlyConfirmed\n\n        if (onlyUnconfirmed && !onlyConfirmed)\n            qs.onlyUnconfirmed = onlyUnconfirmed\n\n        if (sort)\n            qs.sort = sort\n\n        fingerprint = fingerprint || previousFingerprint || previousLastEventFingerprint\n        if (fingerprint)\n            qs.fingerprint = fingerprint\n\n        return this.tronWeb.eventServer.request(`event/contract/${routeParams.join('/')}?${querystring.stringify(qs)}`).then((data = false) => {\n            if (!data)\n                return callback('Unknown error occurred');\n\n            if (!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                rawResponse === true ? data : data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n\n    getEventsByTransactionID(transactionID = false, options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getEventsByTransactionID, transactionID, options);\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        return this.tronWeb.eventServer.request(`event/transaction/${transactionID}`).then((data = false) => {\n            if (!data)\n                return callback('Unknown error occurred');\n\n            if (!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                options.rawResponse === true ? data : data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n}\n\n","import injectpromise from 'injectpromise';\nimport Validator from 'paramValidator';\n\nexport default class SideChain {\n    constructor(sideOptions, TronWeb = false, mainchain = false, privateKey = false) {\n        this.mainchain = mainchain;\n        const { fullHost, fullNode, solidityNode, eventServer, mainGatewayAddress, sideGatewayAddress, sideChainId } = sideOptions;\n        this.sidechain = new TronWeb(fullHost || fullNode, fullHost || solidityNode, fullHost || eventServer, privateKey);\n        this.isAddress = this.mainchain.isAddress;\n        this.utils = this.mainchain.utils;\n        this.setMainGatewayAddress(mainGatewayAddress);\n        this.setSideGatewayAddress(sideGatewayAddress);\n        this.setChainId(sideChainId);\n        this.injectPromise = injectpromise(this);\n        this.validator = new Validator(this.sidechain);\n\n        const self = this;\n        this.sidechain.trx.sign = (...args) => {\n            return self.sign(...args);\n        };\n        this.sidechain.trx.multiSign = (...args) => {\n            return self.multiSign(...args);\n        };\n    }\n    setMainGatewayAddress(mainGatewayAddress) {\n        if (!this.isAddress(mainGatewayAddress))\n            throw new Error('Invalid main gateway address provided');\n        this.mainGatewayAddress = mainGatewayAddress;\n    }\n\n    setSideGatewayAddress(sideGatewayAddress) {\n        if (!this.isAddress(sideGatewayAddress))\n            throw new Error('Invalid side gateway address provided');\n        this.sideGatewayAddress = sideGatewayAddress;\n    }\n\n    setChainId(sideChainId) {\n        if (!this.utils.isString(sideChainId) || !sideChainId)\n            throw new Error('Invalid side chainId provided');\n        this.chainId = sideChainId;\n    }\n\n    signTransaction(priKeyBytes, transaction) {\n        if (typeof priKeyBytes === 'string') {\n            priKeyBytes = this.utils.code.hexStr2byteArray(priKeyBytes);\n        }\n        let chainIdByteArr = this.utils.code.hexStr2byteArray(this.chainId);\n\n        let byteArr = this.utils.code.hexStr2byteArray(transaction.txID).concat(chainIdByteArr);\n        let byteArrHash = this.sidechain.utils.ethersUtils.sha256(byteArr);\n\n        const signature = this.utils.crypto.ECKeySign(this.utils.code.hexStr2byteArray(byteArrHash.replace(/^0x/, '')), priKeyBytes);\n\n        if (Array.isArray(transaction.signature)) {\n            if (!transaction.signature.includes(signature))\n                transaction.signature.push(signature);\n        } else\n            transaction.signature = [signature];\n        return transaction;\n    }\n\n    async multiSign(transaction = false, privateKey = this.sidechain.defaultPrivateKey, permissionId = false, callback = false) {\n        if (this.utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = 0;\n        }\n\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n            permissionId = 0;\n        }\n\n        if (!callback) return this.injectPromise(this.multiSign, transaction, privateKey, permissionId);\n\n        if (!this.utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract) return callback('Invalid transaction provided');\n\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(privateKey)).toLowerCase();\n            const signWeight = await this.sidechain.trx.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                return callback(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map(key => {\n                if (key.address === address) foundKey = true;\n            });\n\n            if (!foundKey) return callback(privateKey + ' has no permission to sign');\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                return callback(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                transaction.raw_data.contract[0].Permission_id = permissionId;\n            } else {\n                return callback('Invalid transaction provided');\n            }\n        }\n        // sign\n        try {\n            return callback(null, this.signTransaction(privateKey, transaction));\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    async sign(transaction = false, privateKey = this.sidechain.defaultPrivateKey, useTronHeader = true, multisig = false, callback = false) {\n        if (this.utils.isFunction(multisig)) {\n            callback = multisig;\n            multisig = false;\n        }\n\n        if (this.utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.sidechain.defaultPrivateKey;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader, multisig);\n\n        // Message signing\n        if (this.utils.isString(transaction)) {\n\n            if (!this.utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signatureHex = this.sidechain.trx.signString(transaction, privateKey, useTronHeader);\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if (!this.utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if (!multisig && transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            if (!multisig) {\n                const address = this.sidechain.address.toHex(\n                    this.sidechain.address.fromPrivateKey(privateKey)\n                ).toLowerCase();\n                if (address !== this.sidechain.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address))\n                    return callback('Private key does not match address in transaction');\n            }\n            return callback(null,\n                this.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    /**\n    * deposit asset to sidechain\n    */\n    async depositTrx(\n        callValue,\n        depositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrx, callValue, depositFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'depositFee',\n                type: 'integer',\n                value: depositFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            callValue: Number(callValue) + Number(depositFee),\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            const result = await contractInstance.depositTRX().send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async depositTrc10(\n        tokenId,\n        tokenValue,\n        depositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrc10, tokenId, tokenValue, depositFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0\n            },\n            {\n                name: 'depositFee',\n                type: 'integer',\n                value: depositFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            tokenId,\n            tokenValue,\n            feeLimit,\n            ...options,\n            callValue: depositFee\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            const result = await contractInstance.depositTRC10(tokenId, tokenValue).send(options, privateKey);\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async depositTrc(\n        functionSelector,\n        num,\n        fee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrc, functionSelector, num, fee, feeLimit, contractAddress, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'functionSelector',\n                type: 'not-empty-string',\n                value: functionSelector\n            },\n            {\n                name: 'num',\n                type: 'integer',\n                value: num,\n                gte: 0\n            },\n            {\n                name: 'fee',\n                type: 'integer',\n                value: fee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            },\n            {\n                name: 'contractAddress',\n                type: 'address',\n                value: contractAddress\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            feeLimit,\n            ...options,\n            callValue: fee,\n            tokenId: '',\n            tokenValue: 0\n        };\n        try {\n            let result = null;\n            if (functionSelector === 'approve') {\n                const approveInstance = await this.mainchain.contract().at(contractAddress);\n                result = await approveInstance.approve(this.mainGatewayAddress, num).send(options, privateKey);\n            } else {\n                const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n                switch (functionSelector) {\n                    case 'depositTRC20':\n                        result = await contractInstance.depositTRC20(contractAddress, num).send(options, privateKey);\n                        break;\n                    case 'depositTRC721':\n                        result = await contractInstance.depositTRC721(contractAddress, num).send(options, privateKey);\n                        break;\n                    case 'retryDeposit':\n                        result = await contractInstance.retryDeposit(num).send(options, privateKey);\n                        break;\n                    case 'retryMapping':\n                        result = await contractInstance.retryMapping(num).send(options, privateKey);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async approveTrc20(\n        num,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'approve';\n        return this.depositTrc(\n            functionSelector,\n            num,\n            0,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async approveTrc721(\n        id,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'approve';\n        return this.depositTrc(\n            functionSelector,\n            id,\n            0,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async depositTrc20(\n        num,\n        depositFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'depositTRC20';\n        return this.depositTrc(\n            functionSelector,\n            num,\n            depositFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async depositTrc721(\n        id,\n        depositFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'depositTRC721';\n        return this.depositTrc(\n            functionSelector,\n            id,\n            depositFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    /**\n     * mapping asset TRC20 or TRC721 to DAppChain\n     */\n    async mappingTrc(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        functionSelector,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.mappingTrc, trxHash, mappingFee, feeLimit, functionSelector, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'trxHash',\n                type: 'not-empty-string',\n                value: trxHash\n            },\n            {\n                name: 'mappingFee',\n                type: 'integer',\n                value: mappingFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            }\n        ], callback)) {\n            return;\n        }\n        trxHash = trxHash.startsWith('0x') ? trxHash : ('0x' + trxHash);\n        options = {\n            feeLimit,\n            ...options,\n            callValue: mappingFee\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            let result = null;\n            if (functionSelector === 'mappingTRC20') {\n                result = await contractInstance.mappingTRC20(trxHash).send(options, privateKey);\n            } else if (functionSelector === 'mappingTRC721') {\n                result = await contractInstance.mappingTRC721(trxHash).send(options, privateKey);\n            } else {\n                callback(new Error('type must be trc20 or trc721'));\n            }\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async mappingTrc20(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'mappingTRC20';\n        return this.mappingTrc(\n            trxHash,\n            mappingFee,\n            feeLimit,\n            functionSelector,\n            options,\n            privateKey,\n            callback);\n    }\n\n    async mappingTrc721(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'mappingTRC721';\n        return this.mappingTrc(\n            trxHash,\n            mappingFee,\n            feeLimit,\n            functionSelector,\n            options,\n            privateKey,\n            callback);\n    }\n\n    /**\n     * withdraw trx from sidechain to mainchain\n     */\n    async withdrawTrx(\n        callValue,\n        withdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrx, callValue, withdrawFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            callValue: Number(callValue) + Number(withdrawFee),\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.sidechain.contract().at(this.sideGatewayAddress);\n            const result = await contractInstance.withdrawTRX().send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc10(\n        tokenId,\n        tokenValue,\n        withdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrc10, tokenId, tokenValue, withdrawFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            tokenValue,\n            tokenId,\n            callValue: withdrawFee,\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.sidechain.contract().at(this.sideGatewayAddress);\n            const result = await contractInstance.withdrawTRC10(tokenId, tokenValue).send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc(\n        functionSelector,\n        numOrId,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrc, functionSelector, numOrId, withdrawFee, feeLimit, contractAddress, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'functionSelector',\n                type: 'not-empty-string',\n                value: functionSelector\n            },\n            {\n                name: 'numOrId',\n                type: 'integer',\n                value: numOrId,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            },\n            {\n                name: 'contractAddress',\n                type: 'address',\n                value: contractAddress\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            feeLimit,\n            ...options,\n            callValue: withdrawFee\n        };\n        const parameters = [\n            {\n                type: 'uint256',\n                value: numOrId\n            }\n        ];\n\n        try {\n            const address = privateKey ? this.sidechain.address.fromPrivateKey(privateKey) : this.sidechain.defaultAddress.base58;\n            const transaction = await this.sidechain.transactionBuilder.triggerSmartContract(\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                this.sidechain.address.toHex(address)\n            );\n            if (!transaction.result || !transaction.result.result) {\n                return callback('Unknown error: ' + JSON.stringify(transaction.transaction, null, 2));\n            }\n\n            const signedTransaction = await this.sidechain.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.sidechain.trx.sendRawTransaction(signedTransaction);\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.sidechain.toUtf8(broadcast.message);\n                return callback(err)\n            }\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index == 20) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.sidechain.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result == 'FAILED') {\n                    return callback({\n                        error: this.sidechain.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!this.utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (options.rawResponse)\n                    return callback(null, output);\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1)\n                    decoded = decoded[0];\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc20(\n        num,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'withdrawal(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            num,\n            withdrawFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback);\n    }\n\n    async withdrawTrc721(\n        id,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'withdrawal(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            id,\n            withdrawFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback);\n    }\n\n\n    async injectFund(\n        num,\n        feeLimit,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.injectFund, num, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'num',\n                type: 'integer',\n                value: num,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            }\n        ], callback)) {\n            return;\n        }\n\n        try {\n            const address = this.sidechain.address.fromPrivateKey(privateKey);\n            const hexAddress = this.sidechain.address.toHex(address);\n            const transaction = await this.sidechain.fullNode.request('/wallet/fundinject', {\n                owner_address: hexAddress,\n                amount: num\n            }, 'post');\n\n            const signedTransaction = await this.sidechain.trx.sign(transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.sidechain.trx.sendRawTransaction(signedTransaction);\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.mainchain.toUtf8(broadcast.message);\n                return callback(err)\n            }\n            return callback(null, signedTransaction.txID);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async retryWithdraw(\n        nonce,\n        retryWithdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.sidechain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryWithdraw(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            nonce,\n            retryWithdrawFee,\n            feeLimit,\n            this.sideGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async retryDeposit(\n        nonce,\n        retryDepositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryDeposit';\n        return this.depositTrc(\n            functionSelector,\n            nonce,\n            retryDepositFee,\n            feeLimit,\n            this.mainGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async retryMapping(\n        nonce,\n        retryMappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryMapping';\n        return this.depositTrc(\n            functionSelector,\n            nonce,\n            retryMappingFee,\n            feeLimit,\n            this.mainGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n}\n\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport BigNumber from 'bignumber.js';\nimport EventEmitter from 'eventemitter3';\nimport { version } from '../package.json';\nimport semver from 'semver';\nimport injectpromise from 'injectpromise';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Contract from 'lib/contract';\nimport Plugin from 'lib/plugin';\nimport Event from 'lib/event';\nimport SideChain from 'lib/sidechain';\nimport { keccak256 } from 'utils/ethersUtils';\nimport { ADDRESS_PREFIX } from 'utils/address';\n\nconst DEFAULT_VERSION = '3.5.0';\n\nconst FEE_LIMIT = 20000000;\n\nexport default class TronWeb extends EventEmitter {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    static TransactionBuilder = TransactionBuilder;\n    static Trx = Trx;\n    static Contract = Contract;\n    static Plugin = Plugin;\n    static Event = Event;\n    static version = version;\n    static utils = utils;\n\n    constructor(options = false,\n        // for retro-compatibility:\n        solidityNode = false, eventServer = false, sideOptions = false, privateKey = false) {\n        super();\n\n        let fullNode;\n\n        if (typeof options === 'object' && (options.fullNode || options.fullHost)) {\n            fullNode = options.fullNode || options.fullHost;\n            sideOptions = solidityNode;\n            solidityNode = options.solidityNode || options.fullHost;\n            eventServer = options.eventServer || options.fullHost;\n            privateKey = options.privateKey;\n        } else {\n            fullNode = options;\n        }\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        this.event = new Event(this);\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.plugin = new Plugin(this, options);\n        this.utils = utils;\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n\n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n\n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'createAccount', 'address', 'version'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n        // for sidechain\n        if (typeof sideOptions === 'object' && (sideOptions.fullNode || sideOptions.fullHost)) {\n            this.sidechain = new SideChain(sideOptions, TronWeb, this, privateKey);\n        } else {\n            privateKey = privateKey || sideOptions;\n        }\n\n        if (privateKey)\n            this.setPrivateKey(privateKey);\n        this.fullnodeVersion = DEFAULT_VERSION;\n        this.feeLimit = FEE_LIMIT;\n        this.injectPromise = injectpromise(this);\n    }\n\n    async getFullnodeVersion() {\n        try {\n            const nodeInfo = await this.trx.getNodeInfo()\n            this.fullnodeVersion = nodeInfo.configNodeInfo.codeVersion\n            if (this.fullnodeVersion.split('.').length === 2) {\n                this.fullnodeVersion += '.0';\n            }\n        } catch (err) {\n            this.fullnodeVersion = DEFAULT_VERSION;\n        }\n    }\n\n    setDefaultBlock(blockID = false) {\n        if ([false, 'latest', 'earliest', 0].includes(blockID)) {\n            return this.defaultBlock = blockID;\n        }\n\n        if (!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = Math.abs(blockID);\n    }\n\n    setPrivateKey(privateKey) {\n        try {\n            this.setAddress(\n                this.address.fromPrivateKey(privateKey)\n            );\n        } catch {\n            throw new Error('Invalid private key provided');\n        }\n\n        this.defaultPrivateKey = privateKey;\n        this.emit('privateKeyChanged', privateKey);\n    }\n\n    setAddress(address) {\n        if (!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        const hex = this.address.toHex(address);\n        const base58 = this.address.fromHex(address);\n\n        if (this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== base58)\n            this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58\n        };\n\n        this.emit('addressChanged', { hex, base58 });\n    }\n\n    fullnodeSatisfies(version) {\n        return semver.satisfies(this.fullnodeVersion, version);\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    setFullNode(fullNode) {\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n\n        this.getFullnodeVersion();\n    }\n\n    setSolidityNode(solidityNode) {\n        if (utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(...params) {\n        this.event.setServer(...params)\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n\n    getEventResult(...params) {\n\n        if (typeof params[1] !== 'object') {\n            params[1] = {\n                sinceTimestamp: params[1] || 0,\n                eventName: params[2] || false,\n                blockNumber: params[3] || false,\n                size: params[4] || 20,\n                page: params[5] || 1\n            }\n            params.splice(2, 4)\n\n            // callback:\n            if (!utils.isFunction(params[2])) {\n\n                if (utils.isFunction(params[1].page)) {\n                    params[2] = params[1].page;\n                    params[1].page = 1;\n                } else if (utils.isFunction(params[1].size)) {\n                    params[2] = params[1].size;\n                    params[1].size = 20;\n                    params[1].page = 1;\n                }\n            }\n        }\n\n        return this.event.getEventsByContractAddress(...params);\n    }\n\n    getEventByTransactionID(...params) {\n        return this.event.getEventsByTransactionID(...params)\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if (!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address.replace(/^0x/, ADDRESS_PREFIX))\n                );\n            },\n            toHex(address) {\n                if (utils.isHex(address))\n                    return address.toLowerCase().replace(/^0x/, ADDRESS_PREFIX);\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch {\n                    return false;\n                }\n            }\n        }\n    }\n\n    static sha3(string, prefix = true) {\n        return (prefix ? '0x' : '') + keccak256(Buffer.from(string, 'utf-8')).toString().substring(2);\n    }\n\n    static toHex(val) {\n        if (utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if (utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if (typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if (utils.isString(val)) {\n            if (/^(-|)0x/.test(val))\n                return val;\n\n            if ((!isFinite(val)) || /^\\s*$/.test(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        let result = TronWeb.fromDecimal(val);\n        if (result === '0xNaN') {\n            throw new Error('The passed value is not convertible to a hex string');\n        } else {\n            return result;\n        }\n    }\n\n    static toUtf8(hex) {\n        if (utils.isHex(hex)) {\n            hex = hex.replace(/^0x/, '');\n            return Buffer.from(hex, 'hex').toString('utf8');\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromUtf8(string) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        if (utils.isHex(hex)) {\n            let str = \"\";\n            let i = 0, l = hex.length;\n            if (hex.substring(0, 2) === '0x') {\n                i = 2;\n            }\n            for (; i < l; i += 2) {\n                let code = parseInt(hex.substr(i, 2), 16);\n                str += String.fromCharCode(code);\n            }\n            return str;\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromAscii(string, padding) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(sun).div(1_000_000);\n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);\n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if (utils.isBigNumber(amount))\n            return amount;\n\n        if (utils.isString(amount) && /^(-|)0x/.test(amount))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if (!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if (address.length === 42) {\n            try {\n                return TronWeb.isAddress(\n                    utils.crypto.getBase58CheckAddress(\n                        utils.code.hexStr2byteArray(address) // it throws an error if the address starts with 0x\n                    )\n                );\n            } catch (err) {\n                return false;\n            }\n        }\n        try {\n            return utils.crypto.isAddressValid(address);\n        } catch (err) {\n            return false;\n        }\n    }\n\n    static async createAccount() {\n        const account = utils.accounts.generateAccount();\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.isConnected);\n\n        return callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: this.eventServer && await this.eventServer.isConnected()\n        });\n    }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}